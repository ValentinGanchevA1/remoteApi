{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/documents/pickup/remoteApi.js"],
    "names": ["prepareUrl", "url", "bsfContextPath", "prefixWWW", "DOCUMENTS_PATH", "documentsComponentPk", "val", "getDocumentsForCart", "legalForm", "Promise", "resolve", "checkDocumentExistence", "data", "createDocument", "then", "r", "findDocumentInLocalStorage", "getDocuments", "removeDocuments", "getDocumentsToMerge"],
    "mappings": ";;;;;;;AACA;;AAEA,MAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD;AAAA,WAASC,cAAc,IAAK,OAAOC,SAAP,KAAqB,WAArB,GAAmCA,SAAnC,GAA+C,EAApD,CAAd,GAAyEF,GAAlF;AAAA,GAAnB;;AACA,MAAMG,cAAc,GAAG,mBAAvB;AAEA,MAAMC,oBAAoB,GAAG,qBAAE,uBAAF,EAA2BC,GAA3B,EAA7B;iBAEe;AAEX;;;;AAIAC,IAAAA,mBAAmB,EAAE,6BAACC,SAAD,EAAe;AAChC,UAAGH,oBAAH,EAAwB;AACpB,eAAO,sBAAIL,UAAU,CAACI,cAAc,GAAG,uBAAjB,GAA2CC,oBAA5C,CAAd,EAAiF;AAACG,UAAAA,SAAS,EAAEA;AAAZ,SAAjF,CAAP;AACH,OAFD,MAEM;AACF,eAAO,IAAIC,OAAJ,CACH,UAACC,OAAD;AAAA,iBAAaA,OAAO,CAAC,EAAD,CAApB;AAAA,SADG,CAAP;AAGH;AACJ,KAdU;;AAgBX;;;;;AAKAC,IAAAA,sBAAsB,EAAE,gCAACC,IAAD;AAAA,aAAU,sBAAIZ,UAAU,CAACI,cAAc,GAAG,yBAAlB,CAAd,EAA4DQ,IAA5D,CAAV;AAAA,KArBb;AAuBXC,IAAAA,cAAc,EAAE,wBAACD,IAAD;AAAA,aAAU,sBAAIZ,UAAU,CAACI,cAAc,GAAG,kBAAlB,CAAd,EAAqDQ,IAArD,EAA2DE,IAA3D,CAAgE;AAAA,eACtF,uBAAKd,UAAU,CAACI,cAAc,GAAG,4BAAlB,CAAf,EAAgEQ,IAAhE,EAAsE,UAAAG,CAAC;AAAA,iBAAIA,CAAC,KAAK,IAAV;AAAA,SAAvE,CADsF;AAAA,OAAhE,CAAV;AAAA,KAvBL;;AA2BX;;;;AAIAC,IAAAA,0BAA0B,EAAE,oCAACJ,IAAD;AAAA,aAAU,sBAAIZ,UAAU,CAACI,cAAc,GAAG,6BAAlB,CAAd,EAAgEQ,IAAhE,CAAV;AAAA,KA/BjB;AAiCXK,IAAAA,YAAY,EAAE,sBAACL,IAAD;AAAA,aAAU,sBAAIZ,UAAU,CAACI,cAAc,GAAG,eAAlB,CAAd,EAAkDQ,IAAlD,EAAwDE,IAAxD,CAA6D;AAAA,eACjF,uBAAKd,UAAU,CAACI,cAAc,GAAG,yBAAlB,CAAf,EAA6DQ,IAA7D,EAAmE,UAAAG,CAAC;AAAA,iBAAIA,CAAC,KAAK,IAAV;AAAA,SAApE,CADiF;AAAA,OAA7D,CAAV;AAAA,KAjCH;AAqCXG,IAAAA,eAAe,EAAE;AAAA,aAAM,sBAAI,kCAAJ,CAAN;AAAA,KArCN;AAsCXC,IAAAA,mBAAmB,EAAE;AAAA,aAAM,sBAAInB,UAAU,CAACI,cAAc,GAAG,WAAlB,CAAd,CAAN;AAAA;AAtCV,G",
    "sourcesContent": ["import {get, poll} from \"eshop/flux/utils/OraApiUtils\";\nimport $ from \"jquery\";\n\nconst prepareUrl = (url) => bsfContextPath  + (typeof prefixWWW !== \"undefined\" ? prefixWWW : \"\")  + url\nconst DOCUMENTS_PATH = '/pickup_documents';\n\nconst documentsComponentPk = $('#documentsComponentPk').val();\n\nexport default {\n\n    /**\n     * Gets documents for assigned to session cart\n     * @returns Object[]\n     */\n    getDocumentsForCart: (legalForm) => {\n        if(documentsComponentPk){\n            return get(prepareUrl(DOCUMENTS_PATH + '/getDocumentsForCart/' + documentsComponentPk), {legalForm: legalForm});\n        }else {\n            return new Promise(\n                (resolve) => resolve([])\n            );\n        }\n    },\n\n    /**\n     * Checks if document exists\n     * @param {Object} data\n     * @returns Boolean\n     */\n    checkDocumentExistence: (data) => get(prepareUrl(DOCUMENTS_PATH + '/checkDocumentExistence'), data),\n\n    createDocument: (data) => get(prepareUrl(DOCUMENTS_PATH + '/createDocuments'), data).then(() =>\n        poll(prepareUrl(DOCUMENTS_PATH + '/createDocumentAsyncResult'), data, r => r === true)\n    ),\n\n    /**\n     *\n     * @param {Object} data - Data should contain documentCode and bundleNo values\n     */\n    findDocumentInLocalStorage: (data) => get(prepareUrl(DOCUMENTS_PATH + '/findDocumentInLocalStorage'), data),\n\n    getDocuments: (data) => get(prepareUrl(DOCUMENTS_PATH + '/getDocuments'), data).then(() =>\n        poll(prepareUrl(DOCUMENTS_PATH + '/getDocumentAsyncResult'), data, r => r === true)\n    ),\n\n    removeDocuments: () => get(\"/documents/removeDynamicDocument\"),\n    getDocumentsToMerge: () => get(prepareUrl(DOCUMENTS_PATH + '/to-merge'))\n}"],
    "file": "remoteApi.js"
}