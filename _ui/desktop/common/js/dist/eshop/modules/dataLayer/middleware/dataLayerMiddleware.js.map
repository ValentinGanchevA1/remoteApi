{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/dataLayer/middleware/dataLayerMiddleware.js"],
    "names": ["dataLayerMiddleware", "dataLayer", "actionsToTrack", "type", "calculate", "action", "getState", "counter", "nextState", "transform", "data", "console", "warn", "push", "dispatch", "next", "Object", "keys", "includes"],
    "mappings": ";;;;;;;;;;;;AACA,MAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,SAAD,EAAoC;AAAA,QAAxBC,cAAwB,uEAAP,EAAO;AAC5D,QAAIC,IAAI,GAAG,EAAX;;AAEA,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAASC,QAAT,EAAsB;AACpC,UAAIC,OAAO,GAAGJ,IAAI,CAACE,MAAM,CAACF,IAAR,CAAJ,IAAqB,CAAnC;AACAA,MAAAA,IAAI,qBAAOA,IAAP,kCAAcE,MAAM,CAACF,IAArB,EAA4B,EAAEI,OAA9B,EAAJ;AAEA,UAAMC,SAAS,GAAGF,QAAQ,EAA1B;AACA,UAAMG,SAAS,GAAGP,cAAc,CAACG,MAAM,CAACF,IAAR,CAAhC,CALoC,CAMpC;;AACA,UAAMO,IAAI,GAAGD,SAAS,CAACD,SAAD,EAAYH,MAAZ,EAAoBF,IAApB,CAAtB;AAEAQ,MAAAA,OAAO,CAACC,IAAR,CAAa,2BAAb,EAA0C;AAACF,QAAAA,IAAI,EAAJA,IAAD;AAAOP,QAAAA,IAAI,EAAJA;AAAP,OAA1C;AAEAO,MAAAA,IAAI,IAAIT,SAAS,CAACY,IAAV,CAAeH,IAAf,CAAR;AACH,KAZD;;AAcA,WAAO;AAAA,UAAEI,QAAF,QAAEA,QAAF;AAAA,UAAYR,QAAZ,QAAYA,QAAZ;AAAA,aAA0B,UAAAS,IAAI;AAAA,eAAI,UAAAV,MAAM,EAAI;AAC/C;AACAU,UAAAA,IAAI,CAACV,MAAD,CAAJ;;AACA,cAAI,CAACW,MAAM,CAACC,IAAP,CAAYf,cAAZ,EAA4BgB,QAA5B,CAAqCb,MAAM,CAACF,IAA5C,CAAL,EAAwD;AACpD;AACH;;AACDC,UAAAA,SAAS,CAACC,MAAD,EAASC,QAAT,CAAT,CAN+C,CAO/C;AACH,SARoC;AAAA,OAA9B;AAAA,KAAP;AASH,GA1BD;;iBA4BeN,mB",
    "sourcesContent": ["\nconst dataLayerMiddleware = (dataLayer, actionsToTrack = {}) => {\n    let type = {};\n\n    const calculate = (action, getState) => {\n        let counter = type[action.type] || 0;\n        type = {...type, [action.type]: ++counter};\n\n        const nextState = getState();\n        const transform = actionsToTrack[action.type];\n        // debugger;\n        const data = transform(nextState, action, type);\n\n        console.warn(\"dataLayer middleware data\", {data, type});\n\n        data && dataLayer.push(data);\n    };\n\n    return ({dispatch, getState}) => next => action => {\n        // console.warn(\"logAction\",action.type);\n        next(action);\n        if (!Object.keys(actionsToTrack).includes(action.type)) {\n            return ;\n        }\n        calculate(action, getState);\n        // debugger;\n    };\n};\n\nexport default dataLayerMiddleware;\n\n"],
    "file": "dataLayerMiddleware.js"
}