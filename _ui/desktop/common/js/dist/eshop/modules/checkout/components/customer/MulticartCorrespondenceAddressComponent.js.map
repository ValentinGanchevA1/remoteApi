{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/checkout/components/customer/MulticartCorrespondenceAddressComponent.jsx"],
    "names": ["MulticartCorrespondenceAddressView", "props", "pickAddress", "bind", "handleChange", "afterInit", "requestCartCustomerData", "name", "changeAddressMapping", "addressMapping", "descriptions", "sameAddressRadio", "newAddressRadio", "id", "value", "cbsId", "changeCorrespondenceAddressFormField", "styleObject", "display", "title", "renderAddressPicker", "Component", "propTypes", "postalCode", "PropTypes", "string", "town", "streetName", "streetNumber", "appartmentNo", "func", "streetSuggestions", "array", "readOnly", "bool", "MulticartCorrespondenceAddressComponent", "getCustomerCorrespondenceAddressForm"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {OraInput, OraLoader, OraMessage} from \"eshop/components/OraCommonComponents\";\nimport {Expander, Section} from \"eshop/modules/core/components/ui/Expander\";\nimport {connect} from \"react-redux\";\nimport {getCustomerCorrespondenceAddressForm} from \"../../selectors\";\nimport {changeCorrespondenceAddressFormField, changeAddressMapping} from \"../../actions/app\";\nimport {requestCartCustomerData} from \"../../actions/data\";\nimport MulticartCommonAddressForm from \"../MulticartCommonAddressFormComponent\"\n\n/* Presentational Component - accepts props from container component like MulticartCommonAddressFormView Component and uses them for render\n * */\n\n\nexport class MulticartCorrespondenceAddressView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.pickAddress = this.pickAddress.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.afterInit = true;\n    }\n\n    componentDidMount() {\n        this.props.requestCartCustomerData();\n    }\n\n    pickAddress({name}) {\n        this.afterInit = false;\n        this.props.changeAddressMapping(\"correspondence\", name);\n    }\n\n    renderAddressPicker() {\n        return (\n            <fieldset className=\"opl-inputgroup--vertical\">\n                <div className=\"l-row\">\n                <label className=\"o-radio opl-radio u-padding-right-l\">\n                    <OraInput type=\"radio\" id=\"switch_right4\" name=\"main\" value=\"close\"\n                        checked={this.props.addressMapping === \"main\"}\n                        onChange={this.pickAddress}\n                        />\n                    <span className=\"o-ci\"/>\n                    <span className=\"o-ci-label\">{this.props.descriptions.sameAddressRadio}</span>\n                </label>\n                <label className=\"o-radio opl-radio\">\n                    <OraInput type=\"radio\" id=\"switch_left3\" name=\"correspondence\" value=\"open\"\n                        checked={this.props.addressMapping === \"correspondence\"}\n                        onChange={this.pickAddress}\n                        />\n                    <span className=\"o-ci\"/>\n                    <span className=\"o-ci-label\">{this.props.descriptions.newAddressRadio}</span>\n                </label>\n                </div>\n            </fieldset>\n        );\n    }\n\n    handleChange({id, name, value, cbsId}) {\n        this.props.changeCorrespondenceAddressFormField({id, name, value, cbsId}, false);\n    }\n\n    render() {\n        let styleObject = (this.afterInit && this.props.addressMapping === \"correspondence\") ? {display: \"block\"} : null;\n        return (\n            <div className=\"opl-form\">\n                <div className=\"l-col l-col-small-12 l-col-medium-12 l-col-12 u-no-padding-l u-spacing-top-l\">\n                    <h3>{this.props.descriptions.title}</h3>\n                </div>\n                <Expander className=\"l-col l-col-12 u-padding-l\" switchTrigger={true} switchTriggerVal={[\"open\", \"close\"]} scrollToSelected={false}>\n                    <Section header={this.renderAddressPicker()} triggerHeader={true} styleObject={styleObject} expanded={!!styleObject}>\n                        <div className=\"l-row\">\n                            <MulticartCommonAddressForm {...this.props} onChange={this.handleChange} onBlur={this.props.changeCorrespondenceAddressFormField} id={\"correspondence\"}/>\n                        </div>\n                    </Section>\n                </Expander>\n            </div>\n        )\n    }\n}\n\nMulticartCorrespondenceAddressView.propTypes = {\n    postalCode: PropTypes.string,\n    town: PropTypes.string,\n    streetName: PropTypes.string,\n    streetNumber: PropTypes.string,\n    appartmentNo: PropTypes.string,\n    requestCartCustomerData: PropTypes.func,\n    streetSuggestions: PropTypes.array,\n    addressMapping: PropTypes.string,\n    readOnly: PropTypes.bool,\n    changeCorrespondenceAddressFormField: PropTypes.func\n};\n\nconst MulticartCorrespondenceAddressComponent = connect(\n        getCustomerCorrespondenceAddressForm,\n        {changeCorrespondenceAddressFormField, requestCartCustomerData, changeAddressMapping}\n    )(MulticartCorrespondenceAddressView);\nexport default MulticartCorrespondenceAddressComponent;\n\n"],
    "file": "MulticartCorrespondenceAddressComponent.js"
}