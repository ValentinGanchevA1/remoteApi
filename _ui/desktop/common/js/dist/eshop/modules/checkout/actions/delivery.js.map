{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/checkout/actions/delivery.js"],
    "names": ["fetchDeliveryMethods", "dispatch", "Promise", "resolve", "reject", "RemoteApi", "getCartDelivery", "then", "deliveryMethods", "fetchDeliveryMethodsDone", "catch", "error", "fetchCartDelivery", "getCartDeliveryData", "cartDelivery", "remote", "getCartDeliveryDataDone", "initDelivery", "getState", "selectAgreementType", "selectDeliveryAndWithoutChangingPaymentMethod", "deliveryMethodForDevices", "id", "selectDeliveryMethodForDevices", "showEmailWarning", "isUpdated", "conditionallyFetchDeliveryMethods", "hasAgreementTypeChanged", "isFetched", "updateDefaultDeliveryMethod", "DataLayerUtils", "pushAgreementVisibilityEvent", "map", "m", "some", "DeliveryMethod", "isDigital", "AgreementType", "DIGITAL", "PAPER", "pushSelectedAgreementType", "updateAgreementType", "agreementType", "deliveryMethodsRaw", "methodId", "PICKUP_ON_EMAIL", "selectDeliveryAndPaymentMethod", "updateDeliveryMethod", "deliveryMethodCode", "conditionSelector", "selectDeliveryMethod", "selectDeliveryMethodWithoutChangingPayment", "type", "ACTIONS", "SELECT_DELIVERY_METHOD_WITHOUT_CHANGING_PAYMENT_METHOD", "SELECT_DELIVERY_METHOD", "selectDeliveryMethods", "mobile", "fixDocuments", "fixDevices", "SELECT_DELIVERY_METHODS", "SELECT_DELIVERY_METHOD_FOR_DEVICES", "SELECT_AGREEMENT_TYPE", "setIsDigitalAgreementDefault", "isDigitalAgreementDefault", "SET_IS_DIGITAL_AGREEMENT_DEFAULT", "setDeliveryEmailAddress", "emailAddress", "SET_DELIVERY_EMAIL", "payload", "setEmailConfirmationModalState", "open", "SET_EMAIL_CONFIRMATION_MODAL_STATE", "setEmailConfirmationModalAccepted", "accepted", "SET_EMAIL_CONFIRMATION_MODAL_ACCEPTED", "data", "FETCH_DELIVERY_METHODS_DONE", "methods", "isDeliveryRequired", "isFirstMethodDefault", "paymentWithoutDeliveryMethod", "selectedDocumentsDeliveryMethod", "state", "delivery", "selectedDeliveryMethods", "selectedMethod"],
    "mappings": "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",
    "sourcesContent": ["import * as ACTIONS from \"../actionTypes\";\nimport * as remote from \"./remote\";\nimport RemoteApi from \"../remoteApi\";\nimport {\n    getCartDeliveryMethodForDevices,\n    getCustomerNoEmail,\n    getDefaultDeliveryMethod,\n    getDelivery, getDeliveryMethodsForDevices, getDeliveryMethodsRaw,\n    getSelectedOrDefaultAgreementType,\n    getSelectedOrDefaultDeliveryMethod,\n    getSelectedOrDefaultPaymentMethod,\n    hasAgreementTypeChanged,\n    isSelectedDeliveryMethodAvailable,\n    shouldShowEmailWarning,\n    getDescriptionKey\n} from \"../selectors\";\nimport {\n    registerNextStepCondition,\n    unregisterNextStepCondition,\n    requestCartConsentsData,\n    updateDelivery\n} from \"./data\";\nimport {selectPaymentMethod} from \"./payment\";\nimport AgreementType from \"../constants/AgreementType\";\nimport {showEmailWarningModal} from \"./app\";\nimport {fetchDocuments} from \"../../documents/actions/documents\";\nimport DeliveryMethod from \"../constants/DeliveryMethod\";\nimport DataLayerUtils from \"eshop/utils/DataLayerUtils\";\n\nexport const fetchDeliveryMethods = () => dispatch => {\n    return new Promise((resolve, reject) => {\n        RemoteApi.getCartDelivery().then(deliveryMethods => {\n            dispatch(fetchDeliveryMethodsDone(deliveryMethods));\n            resolve(deliveryMethods);\n        }).catch(error => {\n            reject(error);\n        });\n    });\n};\n\nexport const fetchCartDelivery = () => dispatch => {\n    return new Promise((resolve, reject) => {\n        RemoteApi.getCartDeliveryData().then(cartDelivery => {\n            dispatch(remote.getCartDeliveryDataDone(cartDelivery[0]));\n            resolve(cartDelivery[0]);\n        }).catch(error => {\n            reject(error);\n        })\n    });\n};\n\nexport const initDelivery = () => (dispatch, getState) => {\n    dispatch(registerNextStepCondition('payment'));\n    dispatch(registerNextStepCondition('delivery'));\n    dispatch(selectAgreementType(getSelectedOrDefaultAgreementType(getState())));\n    dispatch(selectDeliveryAndWithoutChangingPaymentMethod(getSelectedOrDefaultDeliveryMethod(getState())));\n    const deliveryMethodForDevices = getCartDeliveryMethodForDevices(getState()) || (getDeliveryMethodsForDevices(getState())[0] && getDeliveryMethodsForDevices(getState())[0].id);\n    deliveryMethodForDevices && dispatch(selectDeliveryMethodForDevices(deliveryMethodForDevices));\n    dispatch(showEmailWarning());\n    updateDelivery()(dispatch, getState).then(isUpdated => {\n        return conditionallyFetchDeliveryMethods(hasAgreementTypeChanged)(dispatch, getState);\n    }).then(isFetched => {\n        return updateDefaultDeliveryMethod()(dispatch, getState);\n    }).then(isUpdated => {\n        dispatch(requestCartConsentsData());\n        dispatch(fetchDocuments());\n        DataLayerUtils.pushAgreementVisibilityEvent(\n            (getDeliveryMethodsRaw(getState()).map(m => m.id).some(DeliveryMethod.isDigital))\n                ? AgreementType.DIGITAL : AgreementType.PAPER);\n        DataLayerUtils.pushSelectedAgreementType(getSelectedOrDefaultAgreementType(getState()));\n    });\n};\n\nexport const updateAgreementType = agreementType => (dispatch, getState) => {\n    const deliveryMethodsRaw = getDeliveryMethodsRaw(getState()).map(m => m.id);\n    if (agreementType === AgreementType.DIGITAL && getCustomerNoEmail(getState()) && deliveryMethodsRaw.some(methodId => DeliveryMethod.PICKUP_ON_EMAIL === methodId)) {\n        dispatch(showEmailWarningModal());\n        return;\n    }\n    dispatch(selectAgreementType(agreementType));\n    dispatch(selectDeliveryAndPaymentMethod(getSelectedOrDefaultDeliveryMethod(getState())));\n    DataLayerUtils.pushSelectedAgreementType(agreementType);\n    if (agreementType === AgreementType.DIGITAL) {\n        dispatch(unregisterNextStepCondition('additionalDocuments'));\n    }\n    updateDelivery()(dispatch, getState).then(isUpdated => {\n        return fetchDeliveryMethods()(dispatch);\n    }).then(deliveryMethods => {\n        return updateDefaultDeliveryMethod()(dispatch, getState);\n    }).then(isUpdated => {\n        dispatch(requestCartConsentsData());\n        dispatch(fetchDocuments());\n    });\n};\n\nexport const updateDeliveryMethod = deliveryMethodCode => (dispatch, getState) => {\n    dispatch(selectDeliveryAndPaymentMethod(deliveryMethodCode));\n    updateDelivery()(dispatch, getState).then(isUpdated => {\n        dispatch(requestCartConsentsData());\n        dispatch(fetchDocuments());\n    });\n};\n\nconst showEmailWarning = () => (dispatch, getState) => {\n    if (shouldShowEmailWarning(getState())) {\n        dispatch(showEmailWarningModal(getDescriptionKey(getState())));\n    }\n};\n\nconst updateDefaultDeliveryMethod = () => (dispatch, getState) => {\n    if (isSelectedDeliveryMethodAvailable(getState())) {\n        return Promise.resolve(false);\n    }\n    dispatch(selectDeliveryAndPaymentMethod(getDefaultDeliveryMethod(getState())));\n    return updateDelivery()(dispatch, getState);\n};\n\nconst conditionallyFetchDeliveryMethods = conditionSelector => (dispatch, getState) => {\n    if (conditionSelector(getState())) {\n        return fetchDeliveryMethods()(dispatch);\n    }\n    return Promise.resolve(false);\n};\n\nconst selectDeliveryAndPaymentMethod = deliveryMethodCode => (dispatch, getState) => {\n    dispatch(selectPaymentMethod(getSelectedOrDefaultPaymentMethod(getState())));\n    dispatch(selectDeliveryMethod(deliveryMethodCode));\n};\n\nconst selectDeliveryAndWithoutChangingPaymentMethod = deliveryMethodCode => (dispatch, getState) => {\n    dispatch(selectDeliveryMethodWithoutChangingPayment(deliveryMethodCode));\n};\n\nconst selectDeliveryMethodWithoutChangingPayment = deliveryMethodCode => ({\n    type: ACTIONS.SELECT_DELIVERY_METHOD_WITHOUT_CHANGING_PAYMENT_METHOD,\n    id: deliveryMethodCode\n});\n\n\nconst selectDeliveryMethod = deliveryMethodCode => ({\n    type: ACTIONS.SELECT_DELIVERY_METHOD,\n    id: deliveryMethodCode\n});\n\nexport const selectDeliveryMethods = ({mobile, fixDocuments, fixDevices} = {}) => ({\n    type: ACTIONS.SELECT_DELIVERY_METHODS,\n    mobile,\n    fixDocuments,\n    fixDevices\n});\n\nexport const selectDeliveryMethodForDevices = (id) => ({\n    type: ACTIONS.SELECT_DELIVERY_METHOD_FOR_DEVICES,\n    id\n});\n\nexport const selectAgreementType = id => ({\n    type: ACTIONS.SELECT_AGREEMENT_TYPE,\n    id\n});\n\nexport const setIsDigitalAgreementDefault = isDigitalAgreementDefault => ({\n    type: ACTIONS.SET_IS_DIGITAL_AGREEMENT_DEFAULT,\n    isDigitalAgreementDefault\n});\n\nexport const setDeliveryEmailAddress = (emailAddress) => (dispatch) => {\n    dispatch({\n        type: ACTIONS.SET_DELIVERY_EMAIL,\n        payload: emailAddress\n    });\n};\n\nexport const setEmailConfirmationModalState = (open) => (dispatch) => {\n    dispatch({\n        type: ACTIONS.SET_EMAIL_CONFIRMATION_MODAL_STATE,\n        payload: open\n    });\n};\n\nexport const setEmailConfirmationModalAccepted = (accepted) => (dispatch) => {\n    dispatch({\n        type: ACTIONS.SET_EMAIL_CONFIRMATION_MODAL_ACCEPTED,\n        payload: accepted\n    });\n};\n\nexport const fetchDeliveryMethodsDone = (data) => ({\n    type: ACTIONS.FETCH_DELIVERY_METHODS_DONE,\n    methods: data.deliveryMethods,\n    isDeliveryRequired: data.isDeliveryRequired,\n    isFirstMethodDefault: data.isFirstMethodDefault,\n    paymentWithoutDeliveryMethod: data.paymentWithoutDeliveryMethod\n});\n\nexport const selectedDocumentsDeliveryMethod = (state) => {\n    const delivery = getDelivery(state);\n    if (delivery.selectedDeliveryMethods && delivery.selectedDeliveryMethods.fixDocuments) {\n        return delivery.selectedDeliveryMethods.fixDocuments;\n    } else {\n        return delivery.selectedMethod;\n    }\n};\n"],
    "file": "delivery.js"
}