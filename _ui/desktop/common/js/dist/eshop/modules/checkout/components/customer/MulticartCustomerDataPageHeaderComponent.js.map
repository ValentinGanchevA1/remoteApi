{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/checkout/components/customer/MulticartCustomerDataPageHeaderComponent.jsx"],
    "names": ["MulticartCustomerDataPageHeader", "DataLayerUtils", "pushPageCategoryDimension", "event", "preventDefault", "props", "switchEditIdNumberMode", "renderLogin", "channels", "netLabel", "descriptions", "grossLabel", "lCol", "showNetSwitch", "__html", "title", "showNetPrices", "setPriceIsNet", "Component", "mapStateToProps", "state", "isDisabledIdNumber", "mapDispatchToProps", "dispatch", "showNet", "MulticartCustomerDataPageHeaderComponent"],
    "mappings": ";;;;;;;AAAA;AAEA;AAGA;AACA;;;;;;MAIaA,+B;;;;;;;;;;;;0CAEW;AAChBC,gCAAeC,yBAAf,CAAyC,kBAAzC;AACH;;;mDAE4BC,K,EAAO;AAChCA,QAAAA,KAAK,CAACC,cAAN;AACA,aAAKC,KAAL,CAAWC,sBAAX;AACH;;;+BAEQ;AAAA;;AACL,YAAIC,WAAW,gBAAC,6BAAC,mCAAD;AAA4B,UAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG;AAAjD,UAAhB;;AAEA,YAAMC,QAAQ,GAAG,KAAKJ,KAAL,CAAWK,YAAX,CAAwB,gBAAxB,KAA6C,cAA9D;AACA,YAAMC,UAAU,GAAG,KAAKN,KAAL,CAAWK,YAAX,CAAwB,kBAAxB,KAA+C,eAAlE;AACA,YAAME,IAAI,GAAG,KAAKP,KAAL,CAAWQ,aAAX,GAA2B,IAA3B,GAAkC,IAA/C;AACA,4BACI,uDACI;AAAK,UAAA,SAAS,wBAAiBD,IAAjB;AAAd,wBACI;AAAI,UAAA,SAAS,EAAC,IAAd;AAAmB,UAAA,uBAAuB,EAAE;AAACE,YAAAA,MAAM,EAAE,KAAKT,KAAL,CAAWK,YAAX,CAAwBK;AAAjC;AAA5C,UADJ,CADJ,EAKQ,KAAKV,KAAL,CAAWQ,aAAX,iBACA;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI,6BAAC,eAAD;AAAQ,UAAA,EAAE,EAAC,YAAX;AACQ,UAAA,SAAS,EAAEJ,QADnB;AAEQ,UAAA,UAAU,EAAEE,UAFpB;AAGQ,UAAA,OAAO,EAAE,KAAKN,KAAL,CAAWW,aAH5B;AAIQ,UAAA,YAAY,EAAE;AAAA,mBAAM,KAAI,CAACX,KAAL,CAAWY,aAAX,CAAyB,IAAzB,CAAN;AAAA,WAJtB;AAKQ,UAAA,aAAa,EAAE;AAAA,mBAAM,KAAI,CAACZ,KAAL,CAAWY,aAAX,CAAyB,KAAzB,CAAN;AAAA,WALvB;AAMQ,UAAA,SAAS,EAAE;AANnB,UADJ,CANR,CADJ;AAoBH;;;IArCgDC,gB;;;;AAyCrD,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC9BC,MAAAA,kBAAkB,EAAC,mCAAmBD,KAAnB,CADW;AAE9BJ,MAAAA,aAAa,EAAE,+BAAcI,KAAd;AAFe,KAAL;AAAA,GAA7B;;AAKA,MAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,WAAK;AACpCjB,MAAAA,sBAAsB,EAAE;AAAA,eAAMiB,QAAQ,CAAC,kCAAD,CAAd;AAAA,OADY;AAEpCN,MAAAA,aAAa,EAAE,uBAACO,OAAD;AAAA,eAAaD,QAAQ,CAAC,yBAAcC,OAAd,CAAD,CAArB;AAAA;AAFqB,KAAL;AAAA,GAAnC;;AAKA,MAAMC,wCAAwC,GAAG,yBAAQN,eAAR,EAAyBG,kBAAzB,EAA6CtB,+BAA7C,CAAjD;iBAEeyB,wC",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport DataLayerUtils from \"eshop/utils/DataLayerUtils\";\nimport {switchEditIdNumberMode} from \"eshop/modules/checkout/actions/app\";\nimport {isDisabledIdNumber} from 'eshop/modules/checkout/selectors';\nimport LoggedCustomerBarComponent from 'eshop/modules/auth/components/LoggedCustomerBarComponent';\nimport Switch from \"../../../core/components/ui/Switch\";\nimport {getPriceIsNet} from \"../../../cart/selectors\";\nimport {setPriceIsNet} from \"../../../cart/actions/cart\";\n\nexport class MulticartCustomerDataPageHeader extends Component {\n\n    componentDidMount() {\n        DataLayerUtils.pushPageCategoryDimension('TelefonyBezUmowy');\n    }\n\n    handleSwitchEditIdNumberMode(event) {\n        event.preventDefault();\n        this.props.switchEditIdNumberMode();\n    }\n\n    render() {\n        let renderLogin=<LoggedCustomerBarComponent channels={this.props.channels}/>;\n\n        const netLabel = this.props.descriptions['netSwitchValue'] || \"Opłaty netto\";\n        const grossLabel = this.props.descriptions['grossSwitchValue'] || \"Opłaty brutto\";\n        const lCol = this.props.showNetSwitch ? '10' : '12';\n        return (\n            <div>\n                <div className={`l-col l-col-${lCol} l-col-small-12`}>\n                    <h2 className=\"h1\" dangerouslySetInnerHTML={{__html: this.props.descriptions.title}}/>\n                </div>\n                {\n                    this.props.showNetSwitch &&\n                    <div className=\"l-col l-col-small-12 l-col-medium-2 l-col-2\">\n                        <Switch id=\"switch-net\"\n                                labelLeft={netLabel}\n                                labelRight={grossLabel}\n                                checked={this.props.showNetPrices}\n                                onSwitchLeft={() => this.props.setPriceIsNet(true)}\n                                onSwitchRight={() => this.props.setPriceIsNet(false)}\n                                className={\"u-font-small u-right\"}\n                        />\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    isDisabledIdNumber:isDisabledIdNumber(state),\n    showNetPrices: getPriceIsNet(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    switchEditIdNumberMode: () => dispatch(switchEditIdNumberMode()),\n    setPriceIsNet: (showNet) => dispatch(setPriceIsNet(showNet)),\n});\n\nconst MulticartCustomerDataPageHeaderComponent = connect(mapStateToProps, mapDispatchToProps)(MulticartCustomerDataPageHeader);\n\nexport default MulticartCustomerDataPageHeaderComponent;\n"],
    "file": "MulticartCustomerDataPageHeaderComponent.js"
}