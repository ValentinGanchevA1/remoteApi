{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/checkout/components/customer/MulticartContactInfoComponent.jsx"],
    "names": ["MulticartContactInfoView", "props", "isBusinessClient", "descriptions", "businessTitle", "defaultBusinessTitle", "title", "name", "value", "errors", "valid", "_validate", "validateEmpty", "isExistingCustomer", "isWwwChannel", "disabled", "labelType", "label", "onChange", "handleChange", "bind", "id", "changeCustomerContactFormField", "checked", "defaultValue", "type", "customerContactFormValidators", "length", "requestCartCustomerData", "show", "refs", "inputCheckboxWrapper", "tooltipInitialized", "loadModule", "component", "OPL", "UI", "loadModules", "path", "options", "showCloseIcon", "side", "trigger", "event", "target", "changeEmailRelatedConsents", "changeCustomerContactFormFieldForceValid", "inputProps", "getPropsForInput", "showEmailCheckbox", "labelElement", "getPropsForInputCheckbox", "handleCheckboxChange", "noEmailTooltip", "defaultNoEmailTooltip", "mask", "placeholder", "onBlur", "handlePhone", "locked", "validate", "onInput", "isSalesOfGoodsOnly", "channels", "sales", "fixentries", "isForeignerCheckboxAvailable", "__html", "getTitle", "getMailInputProps", "emailDisabled", "getPhoneInputProps", "isEmailRequiredByProductInCart", "Component", "propTypes", "emailAddress", "PropTypes", "string", "phoneNumber", "customerNoEmail", "bool", "readOnly", "func", "defaultProps", "MulticartContactInfoComponent", "getCustomerContactForm", "changeCustomerDataFormField"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport LabeledInput from \"eshop/modules/core/components/hoc/LabeledInput\";\nimport {connect} from \"react-redux\";\nimport {getCustomerContactForm} from \"../../selectors\";\nimport {\n    changeCustomerContactFormField,\n    changeCustomerContactFormFieldForceValid,\n    changeCustomerDataFormField,\n    changeEmailRelatedConsents\n} from \"../../actions/app\";\nimport {requestCartCustomerData} from \"../../actions/data\";\nimport {customerContactFormValidators} from \"../../validators\";\nimport {isFieldDisabled, remapToPhone} from \"../../utils/utils\";\n\nexport class MulticartContactInfoView extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    getTitle() {\n        if(this.props.isBusinessClient) {\n            return this.props.descriptions.businessTitle || this.props.defaultBusinessTitle || \"\";\n        } else {\n            return this.props.descriptions.title || \"\";\n        }\n    }\n\n    getPropsForInput(name) {\n        return {\n            name,\n            value: this.props[name] || \"\",\n            errors: this.props.errors && this.props.errors[name],\n            valid: this._validate(name),\n            validateEmpty: this.props.isExistingCustomer && !this.isWwwChannel(),\n            disabled: isFieldDisabled(this.props, name),\n            labelType: \"floating\",\n            label: this.props.descriptions[name],\n            onChange: this.handleChange.bind(this)\n        };\n    }\n\n    handleChange({id, name, value}) {\n        this.props.changeCustomerContactFormField({id, name, value}, false);\n    }\n\n    getPropsForInputCheckbox(name) {\n        return {\n            name,\n            checked: this.props[name],\n            defaultValue: this.props[name] || '',\n            disabled: isFieldDisabled(this.props, name),\n            type: \"checkbox\"\n        };\n    }\n\n    _validate(name) {\n        let value = this.props[name] || '';\n        let errors = customerContactFormValidators[name](value);\n        return errors.length == 0;\n    }\n\n    componentDidMount() {\n        this.props.requestCartCustomerData();\n    }\n\n    componentDidUpdate(){\n        if(!!this.props.show && !!this.refs.inputCheckboxWrapper && !this.tooltipInitialized) {\n            this.loadModule(this.refs.inputCheckboxWrapper);\n            this.tooltipInitialized = true;\n        }\n    }\n\n    loadModule(component) {\n        OPL.UI.loadModules(component,\n            [\n                {\n                    path:\"core/modules/tooltips\",\n                    options:\n                    {\n                        showCloseIcon: false,\n                        side: 'top',\n                        trigger: 'hover'\n                    }\n                }\n            ]\n        );\n    }\n\n    handleCheckboxChange(event) {\n        this.props.changeCustomerContactFormField({name: event.target.name, value: event.target.checked});\n        this.props.changeEmailRelatedConsents(event.target.checked);\n        this.props.changeCustomerContactFormFieldForceValid({name: \"emailAddress\", value: \"\"});\n    }\n\n    getMailInputProps(name) {\n        let inputProps = {\n            ...this.getPropsForInput(name),\n            value: this.props[name] || '',\n            valid: this.props[\"customerNoEmail\"] || this._validate(name)\n        };\n        if(this.showEmailCheckbox(true)) {\n            inputProps.labelElement =\n                <div ref=\"inputCheckboxWrapper\">\n                    <label className=\"opl-checkbox opl-checkbox-in-input u-margin-right-l-xl o-tooltip__trigger o-checkbox\">\n                        <input {...this.getPropsForInputCheckbox(\"customerNoEmail\")} onChange={this.handleCheckboxChange.bind(this)}/>\n                        <span className=\"o-ci o-ci-white\"/>\n                        <span className=\"o-ci-label\">\n                            <span className=\"u-acc-hide\">Brak adresu email</span>\n                        </span>\n                    </label>\n                    <span className=\"o-tooltip__content\">{this.props.descriptions.noEmailTooltip || this.props.defaultNoEmailTooltip}</span>\n                </div>;\n        }\n        return inputProps;\n    }\n\n    getPhoneInputProps(name) {\n        return {\n            ...this.getPropsForInput(name),\n            mask: \"(+48) 999-999-999\",\n            placeholder: \"(+48) ___-___-___\",\n            onBlur: this.handlePhone.bind(this, true),\n            onChange: this.handlePhone.bind(this, false),\n            locked: false\n        };\n    }\n\n    handlePhone(validate, {id, name, value}) {\n        this.props.changeCustomerContactFormField({\n            id: id,\n            name: name,\n            value: remapToPhone(value)\n        }, validate);\n    }\n\n    showEmailCheckbox(onInput) {\n        if(this.isWwwChannel()) {\n            return false;\n        } else {\n            if(this.props.isBusinessClient && onInput && !this.props.isSalesOfGoodsOnly) {\n                return true;\n            }\n            if(!onInput && !this.props.isBusinessClient && (!this.props[\"emailAddress\"] || this.props[\"emailAddress\"]=='')) {\n                return true;\n            }\n            if(!this.props.isBusinessClient && !onInput && this.props.isSalesOfGoodsOnly) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    isWwwChannel() {\n        return this.props.channels.sales === 'WWW';\n    }\n\n    isFix() {\n        return !!this.props.fixentries && this.props.fixentries.length > 0;\n    }\n\n    render() {\n        return !this.props.show ? <div/> : (\n            <div className=\"opl-form\">\n                <div className={`u-spacing-top-l  ${this.props.isForeignerCheckboxAvailable ? 'u-large-spacing-xl u-medium-spacing-s u-small-spacing-s' : ''} l-col l-col-small-12 l-col-medium-12 l-col-12 u-no-padding`}>\n                    <p className=\"h3\" dangerouslySetInnerHTML={{ __html: this.getTitle() }}/>\n                </div>\n\n                <div className=\"l-col l-col-small-12 l-col-medium-12 l-col-12 u-no-padding\">\n                    <span>\n                        <LabeledInput {...this.getMailInputProps(\"emailAddress\")}\n                                      onBlur={this.props.changeCustomerContactFormField}\n                                      onChange={this.props.changeCustomerContactFormFieldForceValid}\n                                      validateEmpty={this.props.isExistingCustomer && !this.isWwwChannel() && !emailDisabled}/>\n                    </span>\n                </div>\n\n                <div className=\"l-col l-col-small-12 l-col-medium-12 l-col-12 u-spacing-l u-no-padding\">\n                        <span>\n                            <LabeledInput {...this.getPhoneInputProps(\"phoneNumber\")}\n                                          className=\"u-spacing-top-l\"/>\n                        </span>\n                </div>\n\n                {this.showEmailCheckbox(false) &&\n                    <div className=\"l-col l-col-small-12 l-col-medium-12 l-col-12 u-no-padding\">\n                        <div className=\"l-col l-col-12\">\n                            <label className=\"o-checkbox opl-checkbox\">\n                                <input {...this.getPropsForInputCheckbox(\"customerNoEmail\")} onChange={event => {this.handleCheckboxChange(event)}}/>\n                                <span className=\"o-ci\"/>\n                                <span className=\"o-ci-label\">Klient nie posiada adresu email</span>\n                            </label>\n                        </div>\n                    </div>\n                }\n\n                {this.props[\"customerNoEmail\"] && this.props.isEmailRequiredByProductInCart &&\n                <div className=\"l-col l-col-small-12 l-col-medium-12 l-col-12 u-padding-top-s\">\n                    <div className=\"opl-msg opl-msg--context opl-msg--error\">\n                        W koszyku wybrano usługę dodatkową wymagającą podania adresu email. Dodaj adres email.\n                    </div>\n                </div>}\n\n            </div>\n        );\n    }\n}\n\nMulticartContactInfoView.propTypes = {\n    emailAddress: PropTypes.string,\n    phoneNumber: PropTypes.string,\n    customerNoEmail: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    locked: PropTypes.bool,\n    requestCartCustomerData: PropTypes.func,\n    changeCustomerContactFormField: PropTypes.func,\n    changeCustomerContactFormFieldForceValid: PropTypes.func\n};\n\nMulticartContactInfoView.defaultProps = {\n    defaultBusinessTitle: \"Dane kontaktowe firmy\",\n    defaultNoEmailTooltip: \"Zaznacz, jeśli użytkownik nie posiada adresu e-mail.\"\n};\n\nconst MulticartContactInfoComponent = connect(\n    getCustomerContactForm,\n    {changeCustomerContactFormField, requestCartCustomerData, changeCustomerDataFormField, changeEmailRelatedConsents, changeCustomerContactFormFieldForceValid}\n)(MulticartContactInfoView);\nexport default MulticartContactInfoComponent;\n"],
    "file": "MulticartContactInfoComponent.js"
}