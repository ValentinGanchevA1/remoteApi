{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/checkout/reducers/customer.js"],
    "names": ["emptyCustomerData", "emptyBusinessData", "emptyPersonalData", "isBusinessClient", "data", "state", "action", "type", "ACTIONS", "CHANGE_CUSTOMER_DATA_FORM_FIELD", "name", "value", "GET_CUSTOMER_DONE", "GET_CART_CUSTOMER_DONE", "result", "allowedKeys", "Object", "keys", "filter", "k", "indexOf", "forEach", "initialNationality", "foreignerAvailable", "SWITCH_EDIT_ID_NUMBER_MODE", "disabledIdNumber", "idNumber", "GET_BPG_DATA_DONE", "nip", "statusAndDateFromBpg", "CHANGE_INVOICE_EMAIL_MAPPING", "invoiceEmailMapping", "payload", "SET_INITIAL_NATIONALITY", "SET_FOREIGNER", "contact", "emptyCustomerContact", "CHANGE_CUSTOMER_CONTACT_FORM_FIELD", "emailAddress", "phoneNumber", "customerNoEmail", "errors", "CHANGE_CUSTOMER_MAINADDRESS_FORM_FIELD", "mainAddress", "undefined", "CHANGE_CUSTOMER_CORRESPONDENCEADDRESS_FORM_FIELD", "correspondenceAddress", "CHANGE_DELIVERY_ADDRESS_FORM_FIELD", "deliveryAddress", "toReturn", "CHANGE_DELIVERY_CONTACT_FORM_FIELD", "SWITCH_FOREIGNER_MODE", "identificationNumber", "identificationExpirationDate", "existing", "hasFixAddress", "modified", "CHANGE_FOREIGNER_COUNTRY", "CHANGE_FOREIGNER_IDENTIFICATION_TYPE"],
    "mappings": "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",
    "sourcesContent": ["import * as ACTIONS from \"../actionTypes\";\nimport {emptyBusinessData, emptyCustomerContact, emptyPersonalData} from \"./helperObjects\";\n\nconst emptyCustomerData = {...emptyBusinessData, ...emptyPersonalData, isBusinessClient: false};\n\nexport const data = (state = emptyCustomerData, action) => {\n    switch(action.type) {\n        case ACTIONS.CHANGE_CUSTOMER_DATA_FORM_FIELD:\n            return {...state, [action.name]: action.value};\n        case ACTIONS.GET_CUSTOMER_DONE:\n        case ACTIONS.GET_CART_CUSTOMER_DONE:\n            if (!action.data)\n                return state;\n            let result = {...emptyCustomerData};\n            const allowedKeys = Object.keys(result);\n            Object.keys(action.data).filter(k => allowedKeys.indexOf(k) !== -1).forEach(k => result[k] = action.data[k]);\n            if (!!state.initialNationality) {\n                result = {...result, initialNationality: state.initialNationality};\n            }\n            if (!!state.foreignerAvailable) {\n                result = {...result, foreignerAvailable: state.foreignerAvailable};\n            }\n            return {...result};\n        case ACTIONS.SWITCH_EDIT_ID_NUMBER_MODE:\n            return {...state, disabledIdNumber: !state.disabledIdNumber, idNumber: state.disabledIdNumber ? \"\" : state.idNumber};\n        case ACTIONS.GET_BPG_DATA_DONE:\n            const nip = (action && action.data && action.data.nip) || state.nip;\n            const statusAndDateFromBpg = (action && action.data && action.data.statusAndDateFromBpg);\n            return {...state, ...emptyBusinessData, nip: nip, statusAndDateFromBpg: statusAndDateFromBpg};\n        case ACTIONS.CHANGE_INVOICE_EMAIL_MAPPING:\n            return {...state, invoiceEmailMapping:action.payload};\n        case ACTIONS.SET_INITIAL_NATIONALITY:\n            return {...state, initialNationality: action.payload};\n        case ACTIONS.SET_FOREIGNER:\n            return {...state, foreignerAvailable: action.payload};\n        default:\n            return state;\n    }\n};\n\nexport const contact = (state = emptyCustomerContact, action) => {\n    switch(action.type) {\n        case ACTIONS.CHANGE_CUSTOMER_CONTACT_FORM_FIELD:\n            return {...state, [action.name]: action.value};\n        case ACTIONS.GET_CUSTOMER_DONE:\n        case ACTIONS.GET_CART_CUSTOMER_DONE:\n            if (!action.data)\n                return state;\n            const {emailAddress, phoneNumber, customerNoEmail} = action.data;\n            return {emailAddress, phoneNumber, customerNoEmail};\n        case ACTIONS.GET_BPG_DATA_DONE:\n            return {...emptyCustomerContact};\n        default:\n            return state;\n    }\n};\n\nexport const errors = (state = {} , action) => {\n    switch (action.type) {\n        case ACTIONS.CHANGE_CUSTOMER_DATA_FORM_FIELD:\n            return {...state, data: {...state.data, [action.name]: action.errors}};\n        case ACTIONS.CHANGE_CUSTOMER_MAINADDRESS_FORM_FIELD:\n            if(action.name === 'postalCode') {\n                return {...state, mainAddress: {...state.mainAddress, [action.name]: action.errors, streetName: undefined, town: undefined}};\n            } else if(action.name === 'town') {\n                return {...state, mainAddress: {...state.mainAddress, [action.name]: action.errors, streetName: undefined}};\n            } else if(action.name === 'streetName') {\n                return {...state, mainAddress: {...state.mainAddress, [action.name]: action.errors, streetNo: undefined}};\n            } else {\n                return {...state, mainAddress: {...state.mainAddress, [action.name]: action.errors}};\n            }\n        case ACTIONS.CHANGE_CUSTOMER_CORRESPONDENCEADDRESS_FORM_FIELD:\n            if(action.name === 'postalCode') {\n                return {...state, correspondenceAddress: {...state.correspondenceAddress, [action.name]: action.errors, streetName: undefined, town: undefined}};\n            } else if(action.name === 'town') {\n                return {...state, correspondenceAddress: {...state.correspondenceAddress, [action.name]: action.errors, streetName: undefined}};\n            }else {\n                return {...state, correspondenceAddress: {...state.correspondenceAddress, [action.name]: action.errors}};\n            }\n        case ACTIONS.CHANGE_DELIVERY_ADDRESS_FORM_FIELD:\n            if(action.name === 'postalCode') {\n                return {...state, deliveryAddress: {...state.deliveryAddress, [action.name]: action.errors, streetName: undefined, town: undefined}};\n            } else if(action.name === 'town') {\n                return {...state, deliveryAddress: {...state.deliveryAddress, [action.name]: action.errors, streetName: undefined}};\n            } else {\n                return {...state, deliveryAddress: {...state.deliveryAddress, [action.name]: action.errors}};\n            }\n        case ACTIONS.CHANGE_CUSTOMER_CONTACT_FORM_FIELD:\n            let toReturn={...state.contact, [action.name]: action.errors};\n            if(action.name===\"customerNoEmail\" && action.value===true){\n                toReturn['emailAddress']=[];\n            }\n            return {...state, contact: toReturn};\n        case ACTIONS.CHANGE_DELIVERY_CONTACT_FORM_FIELD:\n            let result={...state.contact, [action.name]: action.errors};\n            return {...state, contact: result};\n        case ACTIONS.GET_CUSTOMER_DONE:\n        case ACTIONS.GET_CART_CUSTOMER_DONE:\n            return {...state, data: {...state.data, ...action.errors}};\n        case ACTIONS.SWITCH_FOREIGNER_MODE:\n            delete state.data.idNumber;\n            delete state.data.identificationNumber;\n            delete state.data.identificationExpirationDate;\n            return state;\n        case ACTIONS.GET_BPG_DATA_DONE:\n            return {...state, mainAddress: [], data: {}, contact: {}};\n        default:\n            return state;\n    }\n};\n\nexport const existing = (state = false, action) => {\n    switch (action.type) {\n        case ACTIONS.GET_CUSTOMER_DONE:\n        case ACTIONS.GET_CART_CUSTOMER_DONE:\n            return action.data ? !!action.data.existing : state;\n        default:\n            return state;\n    }\n};\n\nexport const hasFixAddress = (state = false, action) => {\n    switch (action.type) {\n        case ACTIONS.GET_CUSTOMER_DONE:\n        case ACTIONS.GET_CART_CUSTOMER_DONE:\n            return action.data ? !!action.data.hasFixAddress : state;\n        default:\n            return state;\n    }\n};\n\nexport const modified = (state = false, action) => {\n    switch (action.type) {\n        case ACTIONS.CHANGE_CUSTOMER_DATA_FORM_FIELD:\n        case ACTIONS.CHANGE_CUSTOMER_MAINADDRESS_FORM_FIELD:\n        case ACTIONS.CHANGE_CUSTOMER_CORRESPONDENCEADDRESS_FORM_FIELD:\n        case ACTIONS.CHANGE_CUSTOMER_CONTACT_FORM_FIELD:\n        case ACTIONS.SWITCH_FOREIGNER_MODE:\n        case ACTIONS.CHANGE_FOREIGNER_COUNTRY:\n        case ACTIONS.CHANGE_FOREIGNER_IDENTIFICATION_TYPE:\n            return true;\n        case ACTIONS.GET_CUSTOMER_DONE:\n        case ACTIONS.GET_CART_CUSTOMER_DONE:\n            return (action.data ? !!action.data.modified : false) || state;\n        default:\n            return state;\n    }\n};\n"],
    "file": "customer.js"
}