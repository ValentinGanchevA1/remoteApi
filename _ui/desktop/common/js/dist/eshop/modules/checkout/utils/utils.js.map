{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/checkout/utils/utils.js"],
    "names": ["fixPhoneNumber", "phoneNumber", "fixedPhoneNumber", "replace", "length", "slice", "fixIdNumber", "customer", "idNumber", "disabledIdNumber", "fixBundleInCart", "whenAvailable", "name", "callback", "number", "interval", "window", "setTimeout", "console", "log", "fixCustomerData", "gender", "getEmptyStringIfFieldEmpty", "country", "fakePesel", "getFakePesel", "pesel", "getPesel", "identification", "identificationNumber", "identificationExpirationDate", "peselIsCensored", "peselType", "includes", "getCustomerDataErrors", "Object", "assign", "keys", "map", "key", "customerDataFormValidators", "isFieldDisabledForValidation", "customUpperCase", "str", "mapLowerToUpper", "result", "i", "charCode", "charCodeAt", "String", "fromCharCode", "charAt", "toUpperCase", "data", "forEach", "k", "fixCustomerCheckoutData", "foreigner", "noPesel", "emptyBillingAccountForm", "postalCode", "town", "streetName", "streetNumber", "appartmentNo", "emailAddress", "field", "requiredBillingAccountFieldExist", "billingAccount", "getBillingAccountForm", "requiredFieldExist", "validateConsent", "consent", "selectedStates", "bundleAssignments", "validatePerBundleConsent", "consentState", "find", "state", "consentCode", "validateSingleConsent", "consentStates", "bundleAssignment", "bundleNo", "every", "selectedConsentState", "states", "code", "stateCode", "requiredConsentState", "required", "removeElementFromArray", "array", "param", "value", "retVal", "e", "push", "remapToPhone", "tempVal", "split", "join", "hasManualVerificationErrors", "action", "results", "filter", "category", "consentIsMatrixType", "msisdns", "consentIsPermanentlyAgreed", "permanentlyAgreedConsentStates", "permanentlyAgreed", "isFieldDisabled", "existing", "isBusinessClient", "undefined", "isSalesOfGoodsOnly", "bpgRequested", "isWWW", "isBzuOnlyAvailableOption", "readOnly", "getLeadId", "initialNationality", "customerNoEmail", "disabled", "streetSuggestions", "containsFixEntries", "isBzuOnlyAvailableOptionForFix", "channels", "sales", "SalesChannel", "TLS", "IDG", "prepareForeignerIdentificationTypes", "values", "tmp", "entries", "obj", "isMnpFieldInvisible", "isB2B", "isHeadquartersAddressSame", "agreementType", "identifier", "offerType", "migrationMode", "createArrayWithValueOnIndex", "inArray", "index", "empty", "pushUntilIndexIsValid", "copy", "enforceArrayLengthInBounds", "minCount", "maxCount", "initValue", "fieldValue", "val", "runValidator", "object", "validators", "disabledFunction", "dispatch", "entryIndex", "createQueryParamString", "params", "encodeURIComponent", "StyleBuilder", "verticalAlign", "display", "float", "h", "like", "string", "substing", "indexOf", "getPropsForIdentification", "withMask", "changeDataFormFiled", "changeDataFormFiledNoValidation", "props", "getPropsForInput", "mask", "placeholder", "getCommonProps", "descriptions", "errors", "labelType", "validateEmpty", "onChange", "onBlur", "id", "label", "getPropsForSelect", "selected", "className", "style", "height", "withEmptyOption", "getInputValidationParams", "validationDisabled", "valid", "mapCountrySuggestion", "isocode", "getCountryName", "foreignCountries", "getCountrySuggestions", "enteredCountryName", "countryName", "startsWith"],
    "mappings": "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",
    "sourcesContent": ["import {validateCensoredPesel, validateIdNumber} from \"../../core/validationHelper\";\nimport {customerDataFormValidators} from \"../validators\";\nimport SalesChannel from \"../../core/enum/SalesChannel\";\nimport {getLeadId} from \"../../cart/selectors\";\n\nconst fixPhoneNumber = phoneNumber => {\n    if (!phoneNumber) {\n        return '';\n    }\n    let fixedPhoneNumber = phoneNumber.replace(/\\D/g, '');\n    return fixedPhoneNumber.length > 9 ? fixedPhoneNumber.slice(fixedPhoneNumber.length - 9) : fixedPhoneNumber;\n};\n\nconst fixIdNumber = customer => {\n    if (validateIdNumber(customer.idNumber) || customer.disabledIdNumber || customer.fixBundleInCart) {\n        return customer.idNumber;\n    }\n    return '';\n};\n\nexport const whenAvailable = (name, callback, number=0) => {\n    let interval = 10;\n    window.setTimeout(() => {\n        if(window[name]){\n            callback();\n        } else {\n            if(number%10===0){\n                console.log(\"Still (\"+number+\") waiting for \"+name);\n            }\n            whenAvailable(name, callback);\n        }\n    },interval);\n};\n\nexport const fixCustomerData = customer => {\n    if(customer) {\n        let phoneNumber = fixPhoneNumber(customer.phoneNumber);\n        let idNumber = fixIdNumber(customer);\n        let gender = getEmptyStringIfFieldEmpty(customer.gender);\n        let country = getEmptyStringIfFieldEmpty(customer.country);\n        let fakePesel = getFakePesel(customer);\n        let pesel = getPesel(customer);\n        let identification = getEmptyStringIfFieldEmpty(customer.identification);\n        let identificationNumber = getEmptyStringIfFieldEmpty(customer.identificationNumber);\n        let identificationExpirationDate = getEmptyStringIfFieldEmpty(customer.identificationExpirationDate);\n        return {...customer, phoneNumber, idNumber, gender, fakePesel, pesel, identification, identificationNumber, identificationExpirationDate, country};\n    }\n    return {};\n};\n\nconst getPesel = customer => {\n    if (peselIsCensored(customer.pesel) && customer.peselType === 'VALID') {\n        return customer.pesel\n    }\n    return ['FAKE', 'INVALID'].includes(customer.peselType) ? '' : customer.pesel\n};\n\nconst peselIsCensored = pesel => {\n    return validateCensoredPesel(pesel)\n};\n\nexport const getCustomerDataErrors = customer => {\n    return Object.assign({}, ...Object.keys(customer).map(\n        key => (key && customer[key]\n            && Object.keys(customerDataFormValidators).includes(key)\n            && (!isFieldDisabledForValidation(customer, key))\n            && {[key]: customerDataFormValidators[key](customer[key])})\n    ));\n};\n\nconst customUpperCase = str => {\n    let mapLowerToUpper = {'223':7838}; // 'ß'=>'ẞ'  (small sharp s to big sharp s)\n    let result='';\n    for(let i=0; i<str.length; i++){\n        let charCode = str.charCodeAt(i);\n        if(mapLowerToUpper[charCode]){\n            result += String.fromCharCode(mapLowerToUpper[charCode]);\n        }\n        else{\n            result += str.charAt(i).toUpperCase();\n        }\n    }\n    return result;\n}\n\nexport const toUpperCase = data => {\n    if(!data) {\n        return data;\n    }\n    if(typeof data === \"string\") {\n        return customUpperCase(data);\n    }\n    if(typeof data === \"object\") {\n        Object.keys(data).forEach(k => {\n            data[k] = toUpperCase(data[k]);\n        });\n        return data;\n    }\n    return data;\n};\n\nexport const fixCustomerCheckoutData = customer => {\n    if (!customer.foreigner) {\n        customer.identification = '';\n        customer.identificationNumber = '';\n        customer.identificationExpirationDate = '';\n        customer.country = '';\n        customer.gender = '';\n    }\n    if (customer.noPesel) {\n        customer.pesel = '';\n    }\n    if (customer.fakePesel && customer.noPesel) {\n        customer.pesel = customer.fakePesel;\n    }\n    return toUpperCase(customer);\n};\n\nconst getFakePesel = customer => {\n    if (customer.peselType === 'FAKE') {\n        return customer.pesel;\n    }\n    return '';\n};\n\nconst emptyBillingAccountForm = {postalCode: '', town: '', streetName: '', streetNumber: '', appartmentNo: '', emailAddress: ''};\nconst getEmptyStringIfFieldEmpty = field => field ? field : '';\n\nexport const requiredBillingAccountFieldExist = billingAccount =>\n    !!(billingAccount.postalCode\n        && billingAccount.town\n        && billingAccount.streetName\n        && billingAccount.streetNumber);\n\nexport const getBillingAccountForm = (billingAccount) => {\n    if(!billingAccount){\n        return emptyBillingAccountForm;\n    }\n    let requiredFieldExist = requiredBillingAccountFieldExist(billingAccount);\n    if(!requiredFieldExist){\n        return emptyBillingAccountForm;\n    }\n    billingAccount.appartmentNo = getEmptyStringIfFieldEmpty(billingAccount.appartmentNo);\n    billingAccount.emailAddress = getEmptyStringIfFieldEmpty(billingAccount.emailAddress);\n    return billingAccount;\n};\n\nexport const validateConsent = (consent, selectedStates) => {\n    if (consent.bundleAssignments && consent.bundleAssignments.length > 0) {\n        return validatePerBundleConsent(consent, selectedStates);\n    }\n    const consentState = selectedStates.find(state => state.consentCode === consent.consentCode);\n    return validateSingleConsent(consent, consentState);\n};\n\nconst validatePerBundleConsent = (consent, selectedStates) => {\n    let consentStates = consent.bundleAssignments.map(bundleAssignment =>\n        selectedStates.find(state => state.consentCode === consent.consentCode && state.bundleNo === bundleAssignment.bundleNo)\n    );\n    return consentStates.every(state => validateSingleConsent(consent, state));\n};\n\nconst validateSingleConsent = (consent, consentState) => {\n    const selectedConsentState = consent.states && consent.states.find(state => consentState && (state.code === consentState.stateCode));\n    const requiredConsentState = consent.states.find(state => state.required);\n    return consent && (!consent.required || !requiredConsentState && consentState && consentState.stateCode || requiredConsentState && selectedConsentState && selectedConsentState.required);\n};\n\nexport const removeElementFromArray = (array, param, value) => {\n    let retVal = [];\n    array.forEach(e => {\n        if(e[param] !== value){\n            retVal.push(e);\n        }\n    });\n    return retVal;\n}\n\nexport const remapToPhone = (value) => {\n    let tempVal = value.split(\" \");\n    return tempVal[tempVal.length - 1].split(\"-\").join(\"\").replace(/[\\_]+/g, \"\");\n}\n\nexport const hasManualVerificationErrors = (action) => {\n    let results = action.results || [];\n    return results.filter(result => result.category === \"MANUAL\").length > 0;\n};\n\nconst consentIsMatrixType = consent => {\n    return consent.msisdns && consent.msisdns.length > 0;\n};\n\nexport const consentIsPermanentlyAgreed = (consent, consentStates) => {\n    let permanentlyAgreedConsentStates = consentStates.filter(consentState => consentState.consentCode === consent.consentCode && consentState.permanentlyAgreed);\n    if (permanentlyAgreedConsentStates.length === 0) {\n        return false;\n    }\n    if (!consentIsMatrixType(consent)) {\n        return true;\n    }\n    return consent.msisdns && consent.msisdns.length === permanentlyAgreedConsentStates.length;\n};\n\nexport const isFieldDisabled = (data, name) => {\n    switch(name) {\n        case \"nip\":\n            return !!data.existing;\n        case \"regon\":\n        case \"legalForm\":\n        case \"companyName\":\n        case \"registrationDate\":\n        case \"companyStatus\":\n        case \"customerNoEmail\":\n            if(data.isBusinessClient !== undefined && data.isBusinessClient) {\n                return !data.existing && !data.isSalesOfGoodsOnly && !data.bpgRequested;\n            } else {\n                return false;\n            }\n        case \"lastName\":\n            return (!data.isWWW && data.existing) || isBzuOnlyAvailableOption(data);\n        case \"firstName\":\n            return (data.readOnly || data.existing) || isBzuOnlyAvailableOption(data);\n        case \"pesel\":\n            return ((data.readOnly || data.existing) && !data.foreigner)\n                || (getLeadId !== null && 'VALID' === data.peselType)\n                || ((data.readOnly || data.existing) && data.foreigner && 'VALID' === data.peselType)\n                || (data.noPesel && data.foreigner) || isBzuOnlyAvailableOption(data);\n        case \"phoneNumber\":\n            if(data.isBusinessClient) {\n                return !data.isSalesOfGoodsOnly && !data.bpgRequested;\n            } else {\n                return false;\n            }\n        case \"country\":\n            return (!!data.initialNationality && data.initialNationality !== \"POL\") || isBzuOnlyAvailableOption(data);\n        case \"emailAddress\":\n            if(data.isBusinessClient) {\n                return !data.isSalesOfGoodsOnly && !data.bpgRequested || data.customerNoEmail;\n            } else {\n                return data.customerNoEmail;\n            }\n        case \"postalCode\":\n            return isBzuOnlyAvailableOption(data);\n        case \"town\":\n            return isBzuOnlyAvailableOption(data);\n        case \"streetNumber\":\n            return isBzuOnlyAvailableOption(data);\n        case \"appartmentNo\":\n            if(data.isBusinessClient !== undefined && data.isBusinessClient) {\n                return data.bpgRequested !== undefined ? !data.existing && !data.isSalesOfGoodsOnly && !data.bpgRequested : false;\n            } else {\n                return isBzuOnlyAvailableOption(data);\n            }\n        case \"streetName\":\n            let disabled = (!!data.streetSuggestions) && (!data.streetSuggestions.length) && (!data.streetName.length);\n            if(data.isBusinessClient !== undefined && data.isBusinessClient) {\n                return (data.bpgRequested !== undefined ? !data.existing && !data.isSalesOfGoodsOnly && !data.bpgRequested : false) || disabled;\n            } else {\n                return disabled || isBzuOnlyAvailableOption(data);\n            }\n        case \"idNumber\":\n            if (data.containsFixEntries && !isBzuOnlyAvailableOption(data)) {\n                return false;\n            }\n            return (data.readOnly && data.disabledIdNumber) || isBzuOnlyAvailableOption(data);\n        case \"identification\":\n            return isBzuOnlyAvailableOption(data);\n        case \"identificationNumber\":\n            return isBzuOnlyAvailableOption(data);\n        case \"identificationExpirationDate\":\n            return isBzuOnlyAvailableOption(data);\n        case \"identificationRegistrationDate\":\n            return isBzuOnlyAvailableOption(data);\n        default:\n            return data.readOnly;\n    }\n};\n\nfunction isBzuOnlyAvailableOption(data){\n    return data.isBzuOnlyAvailableOptionForFix && (data.channels.sales === SalesChannel.TLS || data.channels.sales ===  SalesChannel.IDG);\n}\n\nexport const prepareForeignerIdentificationTypes = (values) => {\n    if(values){\n        let tmp = [];\n        Object.entries(values).forEach(([key,value]) => {\n            let obj={\n                'value': key,\n                'description':value\n            };\n            tmp.push(obj);\n        });\n        return tmp;\n    }else {\n        return []\n    }\n};\n\nexport const isFieldDisabledForValidation = (data, name) => {\n    return !!data.isWWW && isFieldDisabled(data, name);\n};\n\nexport const isMnpFieldInvisible = (data, name, isB2B) => {\n    switch(name) {\n        case \"street\":\n        case \"city\":\n        case \"flatNumber\":\n        case \"postalCode\":\n        case \"houseNumber\":\n            return data.isHeadquartersAddressSame === true;\n        case \"businessName\":\n            return data.agreementType !== \"2\";\n        case \"nip\":\n            return data.agreementType !== \"2\" || data.identifier !== \"NIP\";\n        case \"regon\":\n            return data.agreementType !== \"2\" || data.identifier !== \"REGON\";\n        case \"date\":\n            return !data.offerType || (data.migrationMode !== \"DAY\" && data.migrationMode !== \"EOP\");\n        case \"pesel\":\n            return !isB2B || data.agreementType !== \"1\";\n        case \"idNumber\":\n            return !isB2B || data.agreementType !== \"1\";\n        case \"firstName\":\n            return !isB2B || data.agreementType !== \"1\";\n        case \"lastName\":\n            return !isB2B || data.agreementType !== \"1\";\n        default:\n            return false;\n    }\n};\n\nexport const createArrayWithValueOnIndex = (inArray, index, key, data, empty={}) => {\n\n    function pushUntilIndexIsValid(array, index){\n        while(!array[index]) array.push(empty)\n    }\n\n    index = index || 0\n    let copy = inArray.slice()\n    pushUntilIndexIsValid(copy, index)\n    if(key){\n        copy[index] = {...copy[index], [key]: (data === undefined ? \"\" : data)}\n    }\n    return copy\n}\n\nexport const  enforceArrayLengthInBounds = (array, minCount, maxCount, initValue) => {\n    if(array.length < minCount){\n        let copy = array.slice()\n        while(copy.length < minCount){\n            copy.push(initValue)\n        }\n        return copy\n    }else if(array.length > maxCount){\n        return array.slice(0, maxCount)\n    }else{\n        return array\n    }\n}\n\nfunction fieldValue(val) {\n    return (val === null || val === undefined) ? \"\" : val;\n}\n\nexport const runValidator = (object, validators, action, disabledFunction, dispatch) => {\n    if(!!disabledFunction){\n        Object.keys(object).forEach(k => Object.keys(validators).includes(k) && (!disabledFunction(object, k) || object.fixBundleInCart) && dispatch(action({name: k, value: fieldValue(object[k]), entryIndex: object.bundleNo})));\n    } else {\n        Object.keys(object).forEach(k => Object.keys(validators).includes(k) && dispatch(action({name: k, value: fieldValue(object[k]), entryIndex: object.bundleNo})));\n    }\n}\n\nexport const createQueryParamString = params => {\n    return Object.keys(params)\n        .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(params[key]))\n        .join('&');\n};\n\nexport class StyleBuilder {\n    constructor() {\n        this.verticalAlign = 'middle';\n        this.display = 'inline-block';\n        this.float = 'none';\n    }\n    hidden(h) {\n        this.display = h ? 'none' : 'inline-block';\n        return this;\n    }\n    build() {\n        return {\n            verticalAlign: this.verticalAlign,\n            display: this.display,\n            float: this.float\n        }\n    }\n}\n\nexport const like = (string, substing) => {\n    return string.indexOf(substing) > -1;\n};\nexport const getPropsForIdentification = (name, withMask, data, changeDataFormFiled, changeDataFormFiledNoValidation) => {\n    let props = {\n        ...getPropsForInput(name, data, changeDataFormFiled,changeDataFormFiledNoValidation)\n    };\n    if (withMask) {\n        props.mask = 'aa9999999';\n        props.placeholder = '______';\n    }\n    return props;\n};\nexport const getPropsForInput = (name, props,changeDataFormFiled,changeDataFormFiledNoValidation) => {\n    return {\n        ...getCommonProps(name, props.descriptions, props.errors),\n        value: props[name] || '',\n        labelType: 'floating',\n        validateEmpty: props[name]!=='' && props.existing,\n        onChange: changeDataFormFiledNoValidation,\n        onBlur: changeDataFormFiled\n    };\n};\n\nconst getCommonProps = (name, descriptions, errors) => {\n    return {\n        id: name,\n        key: name,\n        name: name,\n        label: descriptions[name],\n        errors: errors && errors[name],\n    };\n};\nexport const getPropsForSelect = (name, props, changeDataFormFiled) => {\n    return {\n        ...getCommonProps(name, props.descriptions, props.errors),\n        selected: props[name],\n        onChange: changeDataFormFiled,\n        className: 'g-gray1-bg u-font-small',\n        style: {height: '40px'},\n        withEmptyOption: true\n    };\n};\n\nexport const getInputValidationParams = (name, props) => {\n    const validationDisabled = isFieldDisabledForValidation(props, name);\n    const disabled = isFieldDisabled(props, name);\n    let params = {\n        disabled\n    };\n    const valid = (!props.errors && props[name]!=='') || (props.errors && props.errors[name] && (props.errors[name].length === 0));\n    if(!disabled || (!validationDisabled && !valid)) {\n        params.valid = valid;\n    }\n    return params;\n};\n\nexport const mapCountrySuggestion = (country) => {\n    return {\n        value: country.isocode,\n        label: country.name\n    };\n};\n\nexport const getCountryName = (foreignCountries,country) => {\n    if(!country){\n        country = \"\";\n    }\n    const result = foreignCountries.find(result => result.isocode === country);\n    if (result) {\n        return result.name;\n    }\n    return country\n};\n\nexport const getCountrySuggestions = (foreignCountries,country) =>{\n    const enteredCountryName = getCountryName(foreignCountries,country).toUpperCase();\n    return foreignCountries.filter(country => {\n        const countryName = country.name.toUpperCase();\n        return countryName.startsWith(enteredCountryName) || countryName.includes(' ' + enteredCountryName)\n    } );\n};"],
    "file": "utils.js"
}