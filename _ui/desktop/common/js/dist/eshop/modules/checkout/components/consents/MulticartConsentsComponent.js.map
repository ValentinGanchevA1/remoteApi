{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/checkout/components/consents/MulticartConsentsComponent.jsx"],
    "names": ["MulticartConsentsView", "props", "elementId", "cmpUid", "onUpdateForSingleConsent", "bind", "debouncedStateUpdate", "_", "debounce", "clearModifyConsentsInCartQueue", "registerVerificationConsentType", "OPL", "UI", "loadModules", "document", "getElementById", "path", "options", "registerNextStepCondition", "registerCmsConsentConfig", "consentTypesList", "console", "warn", "isNet", "legalForm", "requestCartConsentsData", "prevProps", "legalFormInRequest", "consentsDataInRequest", "isLogged", "printDocumentButtonIsVisible", "apply", "registerConsentDocumentsCheckoutCondition", "unregisterConsentDocumentsCheckoutCondition", "cartContainsFixNonActivationProcess", "salesChannelsToShowPrintButton", "includes", "channels", "sales", "consentProps", "consents", "length", "filter", "consent", "type", "verificationConsentType", "registeredCheckoutConditions", "registerPrintConsentValidator", "printConsentValidatorByConsentType", "unregisterNextStepCondition", "stopModules", "data", "log", "changeConsentState", "pushToModifyConsentsInCartQueue", "setCheckboxConsentStateWithoutRemoteCall", "listNo", "updateConsentGroupExpanded", "consentStates", "consentsErrorList", "errorList", "find", "e", "disableInnerMargin", "readOnly", "descriptions", "isUpdating", "updatingAnyConsent", "updatingConsents", "onChange", "onUpdate", "agreeAll", "selectAllLabel", "loaderElementId", "factoryType", "selectedMethod", "onExpanded", "onConsentGroupExpanded", "onExpandedInit", "updateValueConsentGroupExpanded", "consentData", "key", "consentCode", "consentsWithBonusLoading", "isRelatedWithBonus", "isMandatory", "required", "state", "consentState", "updating", "updateConsentsStates", "formInputType", "labelClassName", "name", "text", "checked", "isAllSelected", "agreeAllCheckboxChange", "clearingModifyConsentsInCartQueueInProgress", "getMatchingConsents", "anyReadOnly", "forEach", "readonly", "changableConsents", "checkReadOnly", "isConfirmationNeeded", "setState", "showConfirmationModal", "confirmableData", "title", "warningModalTitle", "content", "getConfirmationMessage", "onClickConfirm", "confirmedChangeConsentState", "consentTypesLists", "list", "confirmationRequiredConsentCodes", "OnlineUtils", "addUniqueIntoArray", "getConfirmableConsentTypeList", "confirmationMessage", "onCloseConfirmationModal", "confirmationPopupProps", "Array", "isArray", "stateCode", "indexOf", "consentsList", "consentsCode", "consentToCheck", "result", "getVisibleConsents", "matchAnyCondition", "condition", "matchCondition", "allSelected", "positiveState", "selectedPositive", "states", "positive", "bundleAssignments", "ba", "bundleNo", "undefined", "code", "msisdns", "relatedWithBonus", "checkConsents", "nullStateNotAllowedConsentType", "matchingConsents", "isRelatedWithBonusBySubsection", "nullStateNotAllowed", "bundleConsent", "push", "concat", "map", "conf", "some", "sections", "s", "withBonus", "cCodes", "bonusConsents", "getConsentMapping", "otherConsents", "uncheckAllConsents", "acceptAllConsents", "consentsListByPriority", "group", "listNumber", "listTitleProp", "groupTitle", "priority", "preamble", "isRequired", "expandedChannels", "backgroundColor", "description", "confirmationDescription", "exist", "addHasAlreadyAgreedProp", "sort", "a", "b", "groupedConsents", "getListConditions", "c", "conditions", "cond", "rulePriority", "filterConsentsByRulePriority", "consentGroup", "hasAlreadyAgreed", "consentIsPermanentlyAgreed", "newConfiguration", "getNewGroupedConsents", "getGroupedConsents", "reduce", "previousValue", "currentValue", "headPreamble", "hP", "legalFormList", "LegalForm", "isSmallBusiness", "event", "preventDefault", "target", "dataset", "id", "getDocumentItemByDocumentCode", "documentCode", "getOrCreateDocument", "documentType", "documentItems", "preambleStatuses", "isGroupRequired", "shown", "isConsentErrorMessage", "showMainError", "cl", "isDeliveryStep", "currentStepId", "componentVisible", "agreementType", "getHeadPreamble", "showSogEshopRegulationInfo", "isOnlySogProcess", "regulationInfoMessage", "divClassName", "handleRegulationsDownloadClick", "__html", "renderConfirmationModal", "i", "getPropsForCheckbox", "getFilterConfig", "renderSectionWithSelectAllCheckBox", "renderPreambleForGroup", "getPropsForConsentGroup", "renderSelectAllCheckbox", "status", "allConsentCodes", "consentCodesInGroup", "getConsentCodesForGroup", "intersection", "isPreambleShownForGroupRequirity", "setPreambleShownForGroupRequirity", "channelIsWWW", "getNotPermanentlyAgreedConsentCodesForGroup", "permanentlyAgreedConsentCodes", "index", "getPropsForConsent", "listA", "consentA", "isUnique", "listB", "consentB", "uniqueSet", "Set", "ctl", "el", "add", "uniqueListNo", "use", "Component", "mapStateToProps", "isPrintConsentDocumentsButtonEnabled", "customerNoEmail", "info", "buttonText", "MulticartConsentsComponent", "printConsents", "printMobileConsents", "setPermanentlyAgreedConsentsVisibleForGroup", "titleWithRequiredLabelIdIndex", "TitleWithRequiredLabel", "fixerGroup", "selectors", "layoutFixerModule", "requiredLabel", "PreambleWithExpander", "value", "header", "more", "html", "getHtmlForExpander"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    consentsDataInRequest,\n    getAgreementType,\n    getConsentsProps,\n    getCurrentStepId,\n    getCustomerNoEmail,\n    getFrontValidationMsg,\n    getModifyConsentsInCartQueue,\n    getRegisteredCheckoutConditions,\n    getSalesOfGoodsProcess,\n    getSelectedDeliveryMethod,\n    isPrintConsentDocumentsButtonEnabled\n} from \"../../selectors\";\nimport {\n    changeConsentState,\n    pushToModifyConsentsInCartQueue,\n    setPermanentlyAgreedConsentsVisibleForGroup\n} from \"../../actions/app\";\nimport {\n    clearModifyConsentsInCartQueue,\n    printConsents,\n    printMobileConsents,\n    registerCmsConsentConfig,\n    registerNextStepCondition,\n    registerPrintConsentValidator,\n    registerVerificationConsentType,\n    requestCartConsentsData,\n    unregisterNextStepCondition,\n    updateConsentGroupExpanded,\n    updateConsentsStates,\n    updateValueConsentGroupExpanded\n} from \"../../actions/data\";\nimport {getLegalForm} from \"eshop/modules/checkout/selectors\"\nimport {getCartIsNet} from \"eshop/modules/cart/selectors\"\nimport {Expander} from \"eshop/modules/core/components/ui/Expander\";\nimport MulticartConsentsGroupSection from \"./MulticartConsentsGroupSection\";\nimport MulticartSingleConsentRow from \"./MulticartSingleConsentRow\";\nimport MulticartValidationComponent from \"../MulticartValidationComponent\";\nimport {GenericPopup, OraButton, OraLoader, OraSimpleCheckbox} from \"eshop/components/OraCommonComponents\";\nimport _ from \"lodash\";\nimport {consentIsPermanentlyAgreed, validateConsent} from \"../../utils/utils\";\nimport ExpanderFromHtml from \"eshop/modules/core/components/ui/ExpanderFromHtml\";\nimport LegalForm from \"../../constants/LegalFormEnum\";\nimport OraModal from \"eshop/modules/core/components/ui/Modal\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\nimport {getOrCreateDocument} from \"../../../documents/actions/documents\";\nimport {getDocumentItems} from \"../../../documents/selectors\";\nimport {isLogged} from \"eshop/modules/auth/selectors/authorization\";\n\nexport class MulticartConsentsView extends Component {\n    constructor(props) {\n        super(props);\n        this.elementId = this.props.cmpUid + \"_loaderParent\";\n        this.onUpdateForSingleConsent = this.onUpdateForSingleConsent.bind(this);\n        this.debouncedStateUpdate = _.debounce(()=>{\n                this.props.clearModifyConsentsInCartQueue()\n            }, 1);\n        this.debouncedStateUpdate = this.debouncedStateUpdate.bind(this);\n   }\n\n    componentWillMount() {\n        this.registerVerificationConsentType(null);\n    }\n    componentDidMount() {\n        OPL.UI.loadModules(document.getElementById(this.elementId), {\n            path: 'core/modules/loader',\n            options: '{\"fadeDuration\":120}'\n        });\n\n        this.props.registerNextStepCondition('consents');\n        this.props.registerCmsConsentConfig(this.props.consentTypesList);\n        console.warn(\"isNet on component mount:\");\n        console.warn(this.props.isNet );\n\n        console.warn(\"legalForm on component mount:\");\n        console.warn(this.props.legalForm );\n\n        this.props.requestCartConsentsData();\n    }\n\n    componentDidUpdate(prevProps)\n    {\n        const legalFormInRequest = this.props.consentsDataInRequest.legalForm || \"\";\n        if (this.props.isNet && this.props.legalForm && this.props.legalForm !== legalFormInRequest) {\n            console.warn(\"Request consents on component update: market B2B, legal form \" + this.props.legalForm);\n            this.props.requestCartConsentsData();\n        }\n\n        if (prevProps.isLogged != null && prevProps.isLogged !== this.props.isLogged && this.props.isLogged) {\n            console.warn(\"Request consents on customer logged in\", this.props.isLogged);\n            this.props.requestCartConsentsData();\n        }\n\n        if (this.printDocumentButtonIsVisible.apply(this)) {\n            this.registerConsentDocumentsCheckoutCondition.apply(this);\n        } else {\n            this.unregisterConsentDocumentsCheckoutCondition.apply(this);\n        }\n\n        this.registerVerificationConsentType(prevProps);\n    }\n\n    printDocumentButtonIsVisible() {\n        if (this.props.cartContainsFixNonActivationProcess) {\n            return false\n        }\n        if (!this.props.salesChannelsToShowPrintButton.includes(this.props.channels.sales)) {\n            return false;\n        }\n        if (this.props.consentProps.consents.length !== 0) {\n            return this.props.consentProps.consents.filter(consent => consent.type === this.props.verificationConsentType).length > 0;\n        }\n        return false;\n    }\n\n    registerConsentDocumentsCheckoutCondition() {\n        if (!this.props.registeredCheckoutConditions['consentDocuments']) {\n            this.props.registerNextStepCondition('consentDocuments');\n            this.props.registerPrintConsentValidator(this.props.printConsentValidatorByConsentType);\n        }\n    }\n\n    unregisterConsentDocumentsCheckoutCondition() {\n        if (this.props.registeredCheckoutConditions['consentDocuments']) {\n            this.props.unregisterNextStepCondition('consentDocuments');\n        }\n    }\n\n    registerVerificationConsentType(prevProps){\n        const verificationConsentType = prevProps ? prevProps.verificationConsentType : null;\n        if(verificationConsentType !==this.props.verificationConsentType){\n            this.props.registerVerificationConsentType(this.props.verificationConsentType);\n        }\n    }\n\n    componentWillUnmount() {\n        OPL.UI.stopModules(document.getElementById(this.elementId));\n    }\n\n    setCheckboxConsentStateWithoutRemoteCall(data){\n        console.log(\"Locally set consents\",data);\n        this.changeConsentState(data)\n\n    }\n\n    onUpdateForSingleConsent(data){\n        this.props.pushToModifyConsentsInCartQueue(data);\n        this.setCheckboxConsentStateWithoutRemoteCall(data);\n        this.debouncedStateUpdate()\n    }\n\n     onConsentGroupExpanded(listNo){\n        this.props.updateConsentGroupExpanded(listNo);\n     }\n\n    getPropsForConsentGroup(consents) {\n        return {\n            consents: consents,\n            consentStates:this.props.consentProps.consentStates,\n            consentsErrorList:this.props.errorList && this.props.errorList.find(e => \"consents\" === e.type),\n            disableInnerMargin: true,\n            readOnly: this.props.descriptions.readOnly,\n            isUpdating: this.props.consentProps.updatingAnyConsent,\n            updatingConsents: this.props.consentProps.updatingConsents,\n            onChange: this.changeConsentState.bind(this),\n            onUpdate: this.onUpdateForSingleConsent,\n            agreeAll: this.props.descriptions.selectAllLabel,\n            loaderElementId: this.elementId,\n            factoryType: this.props.factoryType,\n            selectedMethod: this.props.selectedMethod,\n            errorList:this.props.errorList,\n            onExpanded: this.onConsentGroupExpanded.bind(this),\n            onExpandedInit: this.props.updateValueConsentGroupExpanded.bind(this)\n        };\n    }\n\n    getPropsForConsent(consentData) {\n        return {\n            key: consentData.consentCode,\n            readOnly: this.props.descriptions.readOnly,\n            consentsWithBonusLoading: consentData.isRelatedWithBonus,\n            isUpdating: this.props.consentProps.updatingAnyConsent,\n            isMandatory: consentData.required,\n            consent: consentData,\n            state: this.props.consentProps.consentStates.filter((consentState) => (consentState.consentCode === consentData.consentCode)),\n            updating: this.props.consentProps.updatingConsents[consentData.consentCode],\n            onChange: this.changeConsentState.bind(this),\n            onUpdate: this.props.updateConsentsStates,\n            formInputType: this.props.formInputType,\n            loaderElementId: this.elementId\n        };\n    }\n\n    getPropsForCheckbox(){\n        return{\n            labelClassName:\"o-checkbox opl-checkbox opl-checkbox--black\",\n            name: \"agree_all\",\n            text: this.props.descriptions.selectAllLabel,\n            checked: this.isAllSelected(),\n            onChange: this.agreeAllCheckboxChange.bind(this),\n            readOnly: this.props.consentProps.updatingAnyConsent || this.props.clearingModifyConsentsInCartQueueInProgress\n        };\n    }\n\n    isAnyReadOnly(){\n        if(this.getMatchingConsents().length === 0) {\n            return false;\n        }\n\n        let anyReadOnly = false;\n        this.getMatchingConsents().forEach(consent => {\n            if(consent.readonly)\n                anyReadOnly=true;\n        });\n        return anyReadOnly;\n    }\n\n    changeConsentState(data) {\n        if(data.length > 0) {\n            let changableConsents=data.filter(consent => !this.checkReadOnly(consent));\n            if(this.isConfirmationNeeded(data)){\n                if(changableConsents.filter(consent=>!this.isConfirmationNeeded(consent)).length) {\n                    this.props.changeConsentState(changableConsents.filter(consent => !this.isConfirmationNeeded(consent)));\n                }\n                this.setState({showConfirmationModal:true,confirmableData:changableConsents.filter(consent=>this.isConfirmationNeeded(consent))});\n            }else{\n                this.props.changeConsentState(changableConsents);\n            }\n        }\n    }\n    confirmedChangeConsentState() {\n        let data = this.state.confirmableData;\n        if(data.length > 0) {\n                this.props.changeConsentState(data.filter(consent => !this.checkReadOnly(consent)));\n        }\n    }\n    confirmationPopupProps(){\n        if(this.state) {\n            return {\n                title:this.props.descriptions&&this.props.descriptions.warningModalTitle,\n                content: this.getConfirmationMessage(),\n                onClickConfirm: this.confirmedChangeConsentState.bind(this)\n            }\n        }\n    }\n\n    getConfirmableConsentTypeList(){\n        let consentTypesLists=[];\n        this.state.confirmableData.forEach(consent=>{\n            let consentTypesList=this.props.consentTypesList.find(list=>list.confirmationRequiredConsentCodes.includes(consent.consentCode));\n            if(consentTypesList){\n                OnlineUtils.addUniqueIntoArray(consentTypesList,consentTypesLists);\n            }\n        });\n        return consentTypesLists;\n    }\n    getConfirmationMessage(){\n        if(this.state && this.state.confirmableData){\n            let consentTypesLists=this.getConfirmableConsentTypeList();\n            if(consentTypesLists.length && consentTypesLists.find(list=>!!list.confirmationMessage)){\n                return consentTypesLists.find(list=>!!list.confirmationMessage).confirmationMessage;\n            }\n        }\n        return \"\";\n    }\n    renderConfirmationModal(){\n            return (\n                <OraModal\n                    id={\"consent-confirmation-modal\"}\n                    size=\"narrow\"\n                    escapeClose={true}\n                    showClose={true}\n                    clickClose={true}\n                    open={this.state && this.state.showConfirmationModal}\n                    onClose={this.onCloseConfirmationModal.bind(this)}>\n                    <GenericPopup id={\"consent-confirmation-in-modal\"} {...this.confirmationPopupProps()} />\n                </OraModal>)\n    }\n\n    isConfirmationNeeded(data) {\n        if (data) {\n            if (Array.isArray(data)) {\n                return (!!data.filter(consent => this.isConfirmationNeeded(consent)).length)\n            } else {\n                if (data.stateCode.indexOf(\"NO_\") > -1 || data.stateCode.indexOf(\"_NO\")>-1) {\n                    return false;\n                } else {\n                    let consentsList = this.props.consentTypesList.find(list => list.consentsCode.includes(data.consentCode));\n                    if (consentsList && consentsList.confirmationRequiredConsentCodes) {\n                        if (consentsList.confirmationRequiredConsentCodes.includes(data.consentCode)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    onCloseConfirmationModal(){\n        this.setState({showConfirmationModal:false});\n    }\n\n\n    checkReadOnly(consentToCheck){\n        var result = false;\n        this.getVisibleConsents().filter(consent => {\n            if(consent.consentCode === consentToCheck.consentCode){\n                result = !!consent.readonly;\n            }\n        });\n\n        return result;\n    }\n\n    getMatchingConsents() {\n        return this.getVisibleConsents().filter(consent => {\n            let matchAnyCondition = false;\n            this.props.consentTypesList.forEach(condition => {\n                matchAnyCondition = matchAnyCondition || this.matchCondition(consent, condition);\n            });\n            return matchAnyCondition;\n        });\n    }\n\n    isAllSelected() {\n        if(this.getMatchingConsents().length === 0) {\n            return false;\n        }\n\n        let allSelected = true;\n        let state;\n        let positiveState;\n        let selectedPositive;\n        this.getMatchingConsents().forEach(consent => {\n            if(!consent.readonly){\n                positiveState = consent.states.find((state) => state.positive);\n                if(!!consent.bundleAssignments && consent.bundleAssignments.length > 0) {\n                    consent.bundleAssignments.forEach(ba => {\n                        state = this.props.consentProps.consentStates.find((consentState) => (consent.consentCode === consentState.consentCode && consentState.bundleNo === ba.bundleNo));\n                        selectedPositive = ((state !== undefined) && (state.stateCode === positiveState.code));\n                        allSelected = allSelected && selectedPositive;\n                    });\n                } else if(!!consent.msisdns && consent.msisdns.length > 0) {\n                    consent.msisdns.forEach(ba => {\n                        state = this.props.consentProps.consentStates.find((consentState) => (consent.consentCode === consentState.consentCode && consentState.bundleNo === ba.bundleNo));\n                        selectedPositive = ((state !== undefined) && (state.stateCode === positiveState.code));\n                        allSelected = allSelected && selectedPositive;\n                    });\n                }else{\n                        state = this.props.consentProps.consentStates.find((consentState) => (consent.consentCode === consentState.consentCode && !consentState.bundleNo));\n                        selectedPositive = ((state !== undefined) && (state.stateCode === positiveState.code));\n                        allSelected = allSelected && selectedPositive;\n                }\n            }\n        });\n\n        return allSelected;\n    }\n\n    getConsentMapping(relatedWithBonus, checkConsents) {\n        let nullStateNotAllowedConsentType = [\"OSW\"];\n        let matchingConsents = [];\n        this.getMatchingConsents().filter(consent => consent.isRelatedWithBonus == relatedWithBonus || this.isRelatedWithBonusBySubsection(consent.consentCode))\n            .forEach(consent => {\n                let nullStateNotAllowed = (nullStateNotAllowedConsentType.indexOf(consent.type) !== -1);\n                let stateCode = null;\n                if(nullStateNotAllowed){\n                    stateCode = consent.states.find((state) => state.positive == checkConsents).code;\n                } else {\n                    stateCode = checkConsents ? consent.states.find((state) => state.positive).code : consent.states.find((state) => !state.positive).code;\n                }\n                if(!consent.bundleAssignments || consent.bundleAssignments.length === 0) {\n                    if(!!consent.msisdns && consent.msisdns.length > 0){\n                        consent.msisdns.forEach(bundleConsent => {\n                            matchingConsents.push({consentCode: consent.consentCode, bundleNo: bundleConsent.bundleNo, stateCode: stateCode});\n                        })\n                    }else {\n                        matchingConsents.push({consentCode: consent.consentCode, bundleNo: null, stateCode: stateCode});\n                    }\n                } else {\n                    matchingConsents = matchingConsents.concat(\n                        consent.bundleAssignments.map(ba => ({consentCode: consent.consentCode, bundleNo: ba.bundleNo, stateCode: stateCode}))\n                    );\n                }\n            });\n        return matchingConsents;\n    }\n\n    isRelatedWithBonusBySubsection(consentCode){\n        return this.props.consentProps.conf.some(conf => {\n             return (conf.sections || [])\n             .filter(s => s.withBonus)\n             .map(s=>s.consentsCode)\n             .some(\n                cCodes=>cCodes.indexOf(consentCode) > -1\n             )\n        })\n    }\n\n    acceptAllConsents() {\n        let bonusConsents = this.getConsentMapping(true, true);\n        let otherConsents = this.getConsentMapping(false, true);\n        this.changeConsentState(otherConsents.concat(bonusConsents));\n        this.props.updateConsentsStates(bonusConsents);\n    }\n\n    uncheckAllConsents() {\n        let bonusConsents = this.getConsentMapping(true, false);\n        let otherConsents = this.getConsentMapping(false, false);\n        this.changeConsentState(otherConsents.concat(bonusConsents));\n        this.props.updateConsentsStates(bonusConsents);\n    }\n\n    agreeAllCheckboxChange() {\n        if(this.isAllSelected()){\n            this.uncheckAllConsents();\n        } else {\n            this.acceptAllConsents();\n        }\n    }\n    getNewGroupedConsents(){\n        var consentsListByPriority = [];\n        this.props.consentTypesList.forEach(group => {\n            consentsListByPriority.push({\n                  listNo: group.listNumber,\n                  listTitleProp: group.groupTitle,\n                  code: group.code,\n                  priority: group.priority,\n                  preamble: group.preamble,\n                  required: !!group.isRequired,\n                  expandedChannels: group.expandedChannels,\n                  backgroundColor: group.backgroundColor,\n                  sections: group.sections,\n                  description: group.description,\n                  confirmationDescription: group.confirmationDescription,\n                  confirmationMessage: group.confirmationMessage,\n                  confirmationRequiredConsentCodes: group.confirmationRequiredConsentCodes,\n                  consents:  this.props.consentProps.consents.filter(consent => {\n                                    let exist=group.consentsCode.find(code => code===consent.consentCode);\n                                    return !!exist;\n                             })\n            });\n        });\n        return this.addHasAlreadyAgreedProp(consentsListByPriority.sort((a, b) => a.priority-b.priority));\n\n    }\n    getGroupedConsents() {\n        let groupedConsents = this.getListConditions().map(c => {\n            return {\n                listNo: c.listNo,\n                listTitleProp: c.listTitleProp,\n                preamble: c.preamble,\n                description: c.description,\n                confirmationDescription: c.confirmationDescription,\n                confirmationMessage: c.confirmationMessage,\n                confirmationRequiredConsentCodes: c.confirmationRequiredConsentCodes,\n                sections: c.sections,\n                expandedChannels: c.expandedChannels,\n                consents: this.props.consentProps.consents.filter(consent => {\n                    let matchAnyCondition = false;\n                    c.conditions.forEach(cond => {\n                        matchAnyCondition = matchAnyCondition || this.matchCondition(consent, cond);\n                    });\n                    return matchAnyCondition;\n\n                }).map(consent => {\n\n                    //set priority\n                    var condition;\n                    var priority = 0;\n                    c.conditions.forEach(cond => {\n                        if (this.matchCondition(consent, cond)) {\n                            if (priority < cond.priority) {\n                                condition = cond;\n                                priority = cond.priority;\n                            }\n                        }\n                    });\n                    consent.rulePriority = condition.priority;\n\n                    return {...consent};\n                })\n\n            }\n        });\n        groupedConsents = this.filterConsentsByRulePriority(groupedConsents);\n        return this.addHasAlreadyAgreedProp(groupedConsents);\n    }\n\n    addHasAlreadyAgreedProp(groupedConsents) {\n        return groupedConsents.map(consentGroup =>\n            ({...consentGroup,\n                hasAlreadyAgreed: !!consentGroup.consents.find(consent => this.consentIsPermanentlyAgreed(consent))\n            })\n        )\n    }\n\n    getVisibleConsents() {\n        let groupedConsents = this.props.newConfiguration?this.getNewGroupedConsents():this.getGroupedConsents();\n        return groupedConsents.reduce((previousValue, currentValue) => {\n            return [...previousValue, ...currentValue.consents];\n        },[]);\n    }\n\n    consentIsPermanentlyAgreed(consent) {\n        return consentIsPermanentlyAgreed(consent, this.props.consentProps.consentStates);\n    }\n\n    channelIsWWW() {\n        return this.props.channels.sales === 'WWW';\n    }\n\n    getHeadPreamble() {\n        if (!this.props.isNet) {\n            return this.props.headPreamble\n        } else {\n            return this.props.headPreamble.filter(hP => !!hP.legalFormList && hP.legalFormList.includes(this.props.legalForm))\n        }\n    }\n\n    getFilterConfig(){\n        if (!this.props.isNet) {\n            return false;\n        } else if (LegalForm.isSmallBusiness(this.props.legalForm)) {\n            return \"1114\";\n        } else {\n            return \"1014\";\n        }\n    }\n\n    handleRegulationsDownloadClick(event) {\n        event.preventDefault();\n        if (event.target && event.target.dataset && event.target.id === \"regulationsDownloadLink\") {\n            let document = this.getDocumentItemByDocumentCode(event.target.dataset.documentCode);\n            if (document && document.bundleNo) {\n                this.props.getOrCreateDocument(document.documentCode, document.bundleNo, document.documentType);\n            }\n        }\n    }\n\n    getDocumentItemByDocumentCode(documentCode) {\n        return this.props.documentItems && this.props.documentItems.length\n            && this.props.documentItems.find(document => documentCode === document.documentCode)\n    };\n\n    render() {\n        this.preambleStatuses = [{isGroupRequired: true, shown: false}, {isGroupRequired: false, shown: false}];\n        let consentsList = this.props.newConfiguration?this.getNewGroupedConsents():this.getGroupedConsents();\n        const isConsentErrorMessage = !!this.props.errorList && !!this.props.errorList.find(e => 'consents' === e.type);\n        const showMainError = isConsentErrorMessage && consentsList.find(cl => cl.listNo === 0) && consentsList.find(cl => cl.listNo === 0).consents.find(consent => !validateConsent(consent, this.props.consentProps.consentStates));\n\n        let isDeliveryStep=(this.props.currentStepId==='delivery-payment');\n        const componentVisible = this.getMatchingConsents().length > 0 && (!isDeliveryStep || this.props.agreementType);\n                console.log(\"showMainError\",showMainError);\n\n                console.log(this.props);\n                console.log(isConsentErrorMessage);\n        let headPreamble = this.getHeadPreamble();\n        let showSogEshopRegulationInfo = this.props.isOnlySogProcess;\n        let regulationInfoMessage = this.props.descriptions && this.props.descriptions.regulationInfoMessage;\n        let divClassName=(componentVisible ? (isDeliveryStep?\"g-gray2-bg\":\"l-full-row u-padding-l-xl\") : \"\");\n        return (\n\n            <div className={divClassName} id={this.elementId} key={this.elementId}>\n\n                <div className={\"l-page-row \"+(isDeliveryStep?\"\":\"u-padding-top-l-xl\")}>\n\n                    {showSogEshopRegulationInfo && regulationInfoMessage && (\n                        <div className=\"l-row u-padding-l-xl\">\n                            <div className=\"l-col l-col-small-12 l-col-medium-12 l-col-12\">\n                                <div className=\"l-col-9 l-col-medium-12 l-col-small-12\">\n                                    <p className=\"u-margin-m u-margin-top-l\">\n                                    <span\n                                        onClick={this.handleRegulationsDownloadClick.bind(this)}\n                                        dangerouslySetInnerHTML={{__html: regulationInfoMessage}}>\n                                    </span>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                {componentVisible && (\n                    <div className=\"l-row\">\n                    <div className=\"l-col l-col-small-12 l-col-medium-12 l-col-12\">\n                        {!isDeliveryStep && <div>\n                            <div className=\"u-position-relative\">\n                                <h1 className=\"h1 u-margin-l\">{this.props.descriptions.title}</h1>\n                            </div>\n                            <PreambleWithExpander value={headPreamble[0]}/>\n                        </div>}\n                        {this.renderConfirmationModal()}\n\n                        <Expander  className={\"opl-agreements \"+(isDeliveryStep?\"g-gray2-bg u-border-bottom u-padding-l\":\"\")} scrollToSelected={false} variant=\"\" id=\"consents-component-expander\">\n\n                                {!isDeliveryStep && consentsList.map((list, i) => (list.listNo === 0  || (list.priority===10 && this.props.newConfiguration))? (\n                                    <div className=\"opl-agreements__all opl-agreements__all-no-arrow u-padding-all u-large-padding-left-l u-large-margin-minus-left-l u-large-margin-minus-right-l g-yellow2-bg\">\n                                      <OraSimpleCheckbox {...this.getPropsForCheckbox()} />\n                                    </div>):''\n                                 )}\n                                {consentsList.filter(c => c.code != this.getFilterConfig()).map((list, i) => list.listNo === 0 ? (\n                                        this.renderSectionWithSelectAllCheckBox(list)\n                                    )\n                                    :\n                                    <div key={\"consentsGroupSection\" + i}>\n                                        {this.renderPreambleForGroup(list)}\n                                        <MulticartConsentsGroupSection key={\"consentsGroup\" + i}\n                                            sectionKey={\"consentsGroup\" + i}\n                                            isDeliveryStep={isDeliveryStep}\n                                            consentsErrorMsg={isConsentErrorMessage}\n                                            {...this.getPropsForConsentGroup(list.consents)}\n                                            title={this.props.newConfiguration?list.listTitleProp:this.props.descriptions[list.listTitleProp]}\n                                            id={list.listTitleProp}\n                                            {...this.props}\n                                            sequence={i}\n                                            listNo={list.listNo}\n                                            hasAlreadyAgreed={list.hasAlreadyAgreed}\n                                            showPrintDocumentsButton={this.printDocumentButtonIsVisible.apply(this)}\n                                            initiallyOpen={list.expandedChannels.includes(this.props.channels.sales)}\n                                            backgroundColor={list.backgroundColor}\n                                            sections={list.sections}\n                                            description={list.description}\n                                            confirmationDescription={list.confirmationDescription}\n                                            confirmationMessage={list.confirmationMessage}\n                                            confirmationRequiredConsentCodes={list.confirmationRequiredConsentCodes}\n                                            />\n                                    </div>\n                                )}\n                                {isDeliveryStep && consentsList.map((list, i) => list.listNo === 0 ? (\n                                    <div className=\"u-margin-top\">\n                                        {this.renderSelectAllCheckbox(list)}\n                                    </div>\n                                ) : ''\n                                )}\n                        </Expander>\n                     </div>\n                     </div>\n                )}\n                {!(this.props.currentStepId==='delivery-payment') && <MulticartValidationComponent messageType=\"consents\" show={!!showMainError} className=\"u-padding-l\"/>}\n                </div>\n             </div>\n        );\n    }\n\n    isPreambleShownForGroupRequirity(isGroupRequired) {\n        return this.preambleStatuses.find(status => status.isGroupRequired === isGroupRequired).shown;\n    }\n\n    setPreambleShownForGroupRequirity(isGroupRequired) {\n        this.preambleStatuses = this.preambleStatuses.map(status => {\n            if(status.isGroupRequired !== isGroupRequired){\n                return status;\n            }\n            return {...status, shown: true};\n        });\n    }\n\n    renderPreambleForGroup(group) {\n        let allConsentCodes = this.props.consentProps.consents ? this.props.consentProps.consents.map(consent => consent.consentCode) : [];\n        let consentCodesInGroup = this.getConsentCodesForGroup(group);\n        if (group.preamble && _.intersection(allConsentCodes, consentCodesInGroup).length > 0 && !this.isPreambleShownForGroupRequirity(group.required)) {\n            this.setPreambleShownForGroupRequirity(group.required);\n            return <div dangerouslySetInnerHTML={{__html: group.preamble}}></div>;\n        }\n        return null;\n    }\n\n    getConsentCodesForGroup(group) {\n        if (this.channelIsWWW()) {\n            return this.getNotPermanentlyAgreedConsentCodesForGroup(group);\n        }\n        return group.consents ? group.consents.map(consent => consent.consentCode) : [];\n    }\n\n    getNotPermanentlyAgreedConsentCodesForGroup(group) {\n        let permanentlyAgreedConsentCodes = this.props.consentProps.consents ? this.props.consentProps.consents\n            .filter(consent => this.consentIsPermanentlyAgreed(consent))\n            .map(consent => consent.consentCode) : [];\n        return group.consents ? group.consents\n            .map(consent => consent.consentCode)\n            .filter(consentCode => !permanentlyAgreedConsentCodes.includes(consentCode)) : [];\n    }\n\n    renderSectionWithSelectAllCheckBox(list){\n        return (\n            <div className={(this.props.currentStepId==='delivery-payment'?\"g-white1-bg u-padding-all-l u-padding-top-l\":\"u-margin-l\")}>\n                <ul className=\"opl-agreements-list u-no-margin\">\n                    {list.consents.map((consent, index) => <MulticartSingleConsentRow {...this.getPropsForConsent(consent)} descriptions={this.props.descriptions} isDeliveryStep={ this.props.currentStepId==='delivery-payment'} consentsErrorList={this.props.errorList && this.props.errorList.find(e => \"consents\" === e.type)}/>)}\n                </ul>\n                {this.props.currentStepId!=='delivery-payment' && this.renderSelectAllCheckbox(list)}\n            </div>\n        )\n    }\n\n    renderSelectAllCheckbox(list){\n        return (list.consents && (list.consents.length > 1 || (list.consents.length == 1 && list.consents[0].bundleAssignments && list.consents[0].bundleAssignments.length > 1))) ?\n                               (\n                                 <div className=\"u-spacing-l u-padding-all g-yellow2-bg\">\n                                    <OraSimpleCheckbox {...this.getPropsForCheckbox()} />\n                                </div>\n                             ) :  \"\"\n\n    }\n\n    filterConsentsByRulePriority(consentsList) {\n        var consentsListByPriority = [];\n\n        consentsList.forEach(listA => {\n            var consents = [];\n            listA.consents.forEach(consentA => {\n                var isUnique = true;\n\n                consentsList.forEach(listB => {\n                    listB.consents.forEach(consentB => {\n                        if (consentA.consentCode == consentB.consentCode && listA.listNo != listB.listNo) {\n                            isUnique = false;\n                            if (consentA.rulePriority >= consentB.rulePriority) {\n                                consents.push(consentA);\n                            }\n                        }\n                    });\n                });\n\n                //if not found\n                if (isUnique == true) {\n                    consents.push(consentA);\n                }\n\n            });\n\n            consentsListByPriority.push({\n                listNo: listA.listNo,\n                listTitleProp: listA.listTitleProp,\n                preamble: listA.preamble,\n                expandedChannels: listA.expandedChannels,\n                consents: consents\n            });\n        });\n        return consentsListByPriority;\n    }\n\n    matchCondition(consent, condition) {\n\n        if ((condition.withBonus === null ? true : condition.withBonus === consent.isRelatedWithBonus) &&\n            (condition.isRequired === null ? true : condition.isRequired === consent.required)) {\n\n            if (condition.consents.length === 0) {\n                //default\n                return true;\n            } else {\n                for (var i = 0; i < condition.consents.length; i++) {\n                    if (consent.type === condition.consents[i]) {\n                        return true;\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    getListConditions() {\n        let uniqueSet = new Set();\n        this.props.consentTypesList.map(ctl => ctl.listNumber).forEach(el => uniqueSet.add(el));\n        let uniqueListNo = [];\n        uniqueSet.forEach(use => uniqueListNo.push(use));\n        uniqueListNo = uniqueListNo.sort();\n\n        return uniqueListNo.map(listNo => {\n            return {\n                listNo: listNo,\n                listTitleProp: \"listTitle\" + listNo,\n                preamble: this.props.consentTypesList.find(group => group.listNumber === listNo).preamble,\n                description: this.props.consentTypesList.find(group => group.listNumber === listNo).description,\n                expandedChannels: this.props.consentTypesList.find(group => group.listNumber === listNo).expandedChannels,\n                sections: this.props.consentTypesList.find(group => group.listNumber === listNo).sections,\n                conditions: this.props.consentTypesList.filter(ctl => ctl.listNumber === listNo)\n            }\n        });\n    }\n}\n\nconst mapStateToProps = state => ({\n    registeredCheckoutConditions: getRegisteredCheckoutConditions(state),\n    consentProps: getConsentsProps(state),\n    selectedMethod: getSelectedDeliveryMethod(state),\n    isPrintConsentDocumentsButtonEnabled:isPrintConsentDocumentsButtonEnabled(state),\n    customerNoEmail: getCustomerNoEmail(state),\n    clearingModifyConsentsInCartQueueInProgress: getModifyConsentsInCartQueue(state) > 0,\n    errorList: getFrontValidationMsg(state),\n    isNet : getCartIsNet(state),\n    legalForm : getLegalForm(state),\n    currentStepId: getCurrentStepId(state),\n    consentsDataInRequest: consentsDataInRequest(state),\n    info: \"Wydrukuj zgody na weryfikację w systemach zewnętrznych (BIG, ZONK)\",\n    buttonText: \"Drukuj\",\n    agreementType: getAgreementType(state),\n    isOnlySogProcess: getSalesOfGoodsProcess(state),\n    documentItems: getDocumentItems(state),\n    isLogged: isLogged(state),\n});\n\nconst MulticartConsentsComponent = connect(\n        mapStateToProps,\n    {\n        changeConsentState,\n        updateConsentsStates,\n        requestCartConsentsData,\n        registerCmsConsentConfig,\n        registerNextStepCondition,\n        registerVerificationConsentType,\n        unregisterNextStepCondition,\n        printConsents,\n        printMobileConsents,\n        registerPrintConsentValidator,\n        pushToModifyConsentsInCartQueue,\n        clearModifyConsentsInCartQueue,\n        setPermanentlyAgreedConsentsVisibleForGroup,\n        updateConsentGroupExpanded,\n        updateValueConsentGroupExpanded,\n        getOrCreateDocument\n\n    }\n    )(MulticartConsentsView);\nexport default MulticartConsentsComponent;\n\n\n\nvar titleWithRequiredLabelIdIndex = 2;\nclass TitleWithRequiredLabel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.index = titleWithRequiredLabelIdIndex++;\n        this.id = \"titleWithRequiredLabel-\" + this.index;\n        this.fixerGroup = \"js-layout-fixer-group-titleWithRequiredLabel-\" + this.index\n    }\n\n    layoutFixerModule(){\n        return {\n            path: \"core/modules/layout-fixer\",\n            conditions: \"element:{was seen}\",\n            options: {\n                selectors: [\".\"+this.fixerGroup]\n            }\n        }\n    }\n\n    componentDidMount() {\n        OPL.UI.loadModules(document.getElementById(this.id), [this.layoutFixerModule()]);\n    }\n\n    componentWillUnmount() {\n        OPL.UI.stopModules(document.getElementById(this.id));\n    }\n\n    render(){\n        return (\n            <div className=\"l-row u-spacing-l\">\n                <div id={this.id} >\n                    <div className=\"l-col l-col-10 l-col-small-9\">\n                        <div className={\"u-animate-height \" + this.fixerGroup}>\n                            <div className=\"js-height-sensitive-element\">\n                                <p className=\"h2\">{this.props.title}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"l-col l-col-2 l-col-small-3\">\n                        <div className={\"u-animate-height \" + this.fixerGroup}>\n                            <div className=\"js-height-sensitive-element\">\n                                <span className=\"u-position-bottom u-position-absolute u-position-right u-margin-right\">{\"* \" + this.props.requiredLabel}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass PreambleWithExpander  extends Component {\n\n    getHtmlForExpander(){\n        if(this.props.value && this.props.value.header){\n            return '<div>' +\n                this.props.value.header +\n                (this.props.value.more ? '<div id=\"EXPANDER-ID-PLACEHOLDER\">'+this.props.value.more + '</div>' : '') +\n            '</div>'\n        } else {\n            return null\n        }\n    }\n\n    render(){\n        let html = this.getHtmlForExpander();\n        return html ? <p className=\"u-padding-l\"><ExpanderFromHtml html={html}/></p> : null\n    }\n}\n"],
    "file": "MulticartConsentsComponent.js"
}