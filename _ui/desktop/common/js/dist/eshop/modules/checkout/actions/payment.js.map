{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/checkout/actions/payment.js"],
    "names": ["fetchCartPayment", "dispatch", "Promise", "resolve", "reject", "fetchPaymentStarted", "RemoteApi", "getCartPayment", "then", "cartPayment", "paymentMethod", "length", "eligCode", "selectPaymentMethod", "fetchPaymentDone", "catch", "error", "updatePaymentMethod", "code", "getState", "updateCartPayment", "type", "ACTIONS", "SELECT_PAYMENT_METHOD", "GET_PAYMENT_DATA_START", "GET_PAYMENT_DATA_DONE"],
    "mappings": ";;;;;;;AAAA;AACA;;AAGO,MAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAM,UAAAC,QAAQ,EAAI;AAC9C,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCH,QAAAA,QAAQ,CAACI,mBAAmB,EAApB,CAAR;;AACAC,2BAAUC,cAAV,GAA2BC,IAA3B,CAAgC,UAAAC,WAAW,EAAI;AAC3C,cAAMC,aAAa,GAAGD,WAAW,IAAIA,WAAW,CAACE,MAAZ,GAAqB,CAApC,GAAwCF,WAAW,CAAC,CAAD,CAAX,CAAeC,aAAvD,GAAuE,IAA7F;AACA,cAAME,QAAQ,GAAGH,WAAW,IAAIA,WAAW,CAACE,MAAZ,GAAqB,CAApC,GAAwCF,WAAW,CAAC,CAAD,CAAX,CAAeG,QAAvD,GAAkE,IAAnF;AACAX,UAAAA,QAAQ,CAACY,mBAAmB,CAACH,aAAD,EAAgBE,QAAhB,CAApB,CAAR;AACAX,UAAAA,QAAQ,CAACa,gBAAgB,EAAjB,CAAR;AACAX,UAAAA,OAAO,CAACM,WAAD,CAAP;AACH,SAND,EAMGM,KANH,CAMS,UAAAC,KAAK,EAAI;AACdZ,UAAAA,MAAM,CAACY,KAAD,CAAN;AACH,SARD;AASH,OAXM,CAAP;AAYH,KAb+B;AAAA,GAAzB;;;;AAeA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAON,QAAP;AAAA,WAAoB,UAACX,QAAD,EAAWkB,QAAX,EAAwB;AAC3ElB,MAAAA,QAAQ,CAACY,mBAAmB,CAACK,IAAD,EAAON,QAAP,CAApB,CAAR;;AACAN,yBAAUc,iBAAV,CAA4B,uCAAuBD,QAAQ,EAA/B,CAA5B;AACH,KAHkC;AAAA,GAA5B;;;;AAKA,MAAMN,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACK,IAAD,EAAON,QAAP;AAAA,WAAqB;AACpDS,MAAAA,IAAI,EAAEC,OAAO,CAACC,qBADsC;AAEpDL,MAAAA,IAAI,EAAJA,IAFoD;AAGpDN,MAAAA,QAAQ,EAARA;AAHoD,KAArB;AAAA,GAA5B;;;;AAMP,MAAMP,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,WAAO;AAC/BgB,MAAAA,IAAI,EAAEC,OAAO,CAACE;AADiB,KAAP;AAAA,GAA5B;;AAIA,MAAMV,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAO;AAC5BO,MAAAA,IAAI,EAAEC,OAAO,CAACG;AADc,KAAP;AAAA,GAAzB",
    "sourcesContent": ["import RemoteApi from \"../remoteApi\";\nimport * as ACTIONS from \"../actionTypes\";\nimport {getPaymentCheckoutData} from \"../selectors\";\n\nexport const fetchCartPayment = () => dispatch => {\n    return new Promise((resolve, reject) => {\n        dispatch(fetchPaymentStarted());\n        RemoteApi.getCartPayment().then(cartPayment => {\n            const paymentMethod = cartPayment && cartPayment.length > 0 ? cartPayment[0].paymentMethod : null;\n            const eligCode = cartPayment && cartPayment.length > 0 ? cartPayment[0].eligCode : null;\n            dispatch(selectPaymentMethod(paymentMethod, eligCode));\n            dispatch(fetchPaymentDone());\n            resolve(cartPayment);\n        }).catch(error => {\n            reject(error);\n        });\n    });\n};\n\nexport const updatePaymentMethod = (code, eligCode) => (dispatch, getState) => {\n    dispatch(selectPaymentMethod(code, eligCode));\n    RemoteApi.updateCartPayment(getPaymentCheckoutData(getState()));\n};\n\nexport const selectPaymentMethod = (code, eligCode) => ({\n    type: ACTIONS.SELECT_PAYMENT_METHOD,\n    code,\n    eligCode,\n});\n\nconst fetchPaymentStarted = () => ({\n    type: ACTIONS.GET_PAYMENT_DATA_START,\n});\n\nconst fetchPaymentDone = () => ({\n    type: ACTIONS.GET_PAYMENT_DATA_DONE,\n});"],
    "file": "payment.js"
}