{
    "version": 3,
    "sources": ["../../../../../es6/eshop/modules/checkout/remoteApi.js"],
    "names": ["BASE_PATH", "DATA_PATH", "prepareUrl", "url", "bsfContextPath", "prefixWWW", "prepareSecureUrl", "MOBILE_RESOURCE_SIM_CARD_TYPES_POS_PATH", "UPDATE_SIM_CARD", "POST_FBB_SERVICE_DATA", "GET_FBB_SERVICE_DATA", "GET_FBB_SERVICE_DATA_FILTERED_BY_WWT", "REFRESH_FIX_CART_WITHOUTH_FBB_CHECK", "PICKUP_UPDATE_SERIAL_NUMBERS", "CANCEL_GOODS_ORDER", "consentsCmpId", "val", "getParameters", "deliveryMethodCode", "fiscalCharacterization", "console", "warn", "OnlineUtils", "getComponentKeyObject", "baseSetup", "statusCode", "location", "reload", "headers", "cache", "getConsentsData", "getCartConsents", "recalculateConsentFromStrategy", "bundleNo", "offerType", "requestRecalculateConsentsForForeigner", "isForeigner", "updateCartConsents", "data", "getCartCustomer", "getCustomer", "getCartRepresentative", "getCartDelivery", "getCartDeliveryData", "getInstallationAvailableTimeSlots", "earlierInstallationConsentAccepted", "documentsDeliveryMode", "getCartPayment", "updateCartPayment", "paymentData", "updateCustomerSignedDocuments", "isSigned", "getCartMnpData", "doCheckoutStep", "checkoutData", "window", "pathname", "doCheckoutAsyncStep", "doSaveCheckoutData", "fetchNearestPointsOfSale", "contextPath", "fetchPOSPickupCities", "fetchPOSPickupAvailability", "town", "getLastSelectedPos", "reloadSummaryOnCart", "fetchCvDocumentList", "getBpgData", "nip", "getZipCodeFromWWT", "placeId", "streetId", "streetNumber", "$", "ajax", "_", "extend", "dataType", "contentType", "type", "validateZipCode", "postalCode", "getSelectedWwtAddress", "getFutureInvestmentAddress", "getFutureInvestmentConsent", "getFutureInvestmentOffers", "registerLead", "getDocumentCode", "consentCodes", "selectApu", "option", "apuOption", "updateBillingAccount", "getBillingAccountContracts", "setNewBillingAccount", "getBillingAccount", "getPosSimCardsTypes", "updateSerialNumbers", "request", "cancleGoodsOrder", "getSerialNumbers", "clearSessionData", "getWarehouseSerialNumbers", "getPickupDocuments", "getSimCardTypes", "configurationId", "simAPI", "verifySerialNumbers", "serialNumbersAPI", "getSapFioriLinks", "sapOrderId", "sapFioriLinksAPI", "getFioriCorrectiveInvoiceLink", "fioriCorrectiveInvoiceLinkAPI", "unlockSale", "unlockSaleAPI", "checkUnlockSaleInSapStatus", "paymentAndFiscalization", "paymentAndFiscalizationAPI", "cancelOrder", "cancelOrderAPI", "checkPaymentStatus", "printOrderNumber", "printInvoiceNumber", "isPickup", "getAssistModeState", "getAssistModeEmployeeList", "filters", "setAssistEmployee", "employee", "leaveAssistMode", "updateCheckoutCart", "updateInstallationInfoOnCart", "confirmReplanishment", "setPickupPosId", "posId", "pos", "pickupActivation", "getLastOrder", "updateConsents", "pickupCompletion", "getPickupPaymentStatus", "override", "forced", "prepareDocumentsToZip", "then", "r", "getZipDocumentsUrl", "getParcelLockerList", "getParcelLockerCityList", "toUpperCase", "getLastSelectedParcelLocker", "setPosId", "updateSelectedPOSAvailabilityStatus", "value", "status", "updateSimCard", "baseSimCardCode", "postFbbServiceData", "designationNumber", "serviceInstanceId", "getFBBServiceData", "getFBBServiceDataFilteredByWWT", "refreshFixCartWithoutFbbCheck", "getDocumentApprovements", "updateDocumentApprovement", "documentApprovement", "getIdVerificationResult", "getIdVerificationBanks", "updateIdVerificationBank", "bankId", "id", "requestIdVerification", "consentsGetStatus", "consentsCreateAndSendDocument", "mail", "phone", "consentSections"],
    "mappings": "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",
    "sourcesContent": ["import {get, getPdf, post, postJson, postJsonObject, postJsonObjectNoResult, put, poll} from \"../../flux/utils/OraApiUtils\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\n\nconst BASE_PATH = \"/koszyk/multi\";\nconst DATA_PATH = BASE_PATH + \"/_data\";\nexport const prepareUrl = (url) => bsfContextPath  + (typeof prefixWWW !== \"undefined\" ? prefixWWW : \"\")  + url//to trzeba do jakiegos shared folderu przerzucic\nconst prepareSecureUrl = (url) => bsfContextPath + url;\n\nconst MOBILE_RESOURCE_SIM_CARD_TYPES_POS_PATH = \"/simCard/getSimCardTypes\";\nconst UPDATE_SIM_CARD = \"/koszyk/updateSimCard\";\nconst POST_FBB_SERVICE_DATA = \"/fbbServices/serviceData\";\nconst GET_FBB_SERVICE_DATA = \"/fbbServices/fixAddressWithServices\";\nconst GET_FBB_SERVICE_DATA_FILTERED_BY_WWT = \"/fbbServices/fixAddressFilteredByWWTWithServices\";\nconst REFRESH_FIX_CART_WITHOUTH_FBB_CHECK = \"/fbbServices/refreshFixCartWithoutFBBCheck\";\nconst PICKUP_UPDATE_SERIAL_NUMBERS = \"/pickup/serialnumbers\";\nconst CANCEL_GOODS_ORDER = \"/pickup/cancel\";\n\nconst consentsCmpId = $('#consentsComponentId').val();\n\nconst getParameters = (deliveryMethodCode, fiscalCharacterization, consentsCmpId) =>\n        {\n         console.warn(\"fiscalCharacterization: \" + fiscalCharacterization + \", component: \" + consentsCmpId);\n         return {\n            deliveryMethodCode : deliveryMethodCode,\n            fiscalCharacterization: fiscalCharacterization,\n            ...OnlineUtils.getComponentKeyObject(consentsCmpId)\n         };\n        };\n\nconst baseSetup = {\n    statusCode: {\n        403: function() {\n            location.reload();\n        }\n    },\n    headers: {'CSRFToken': $(\"#CSRFToken\").val()},\n    cache: false\n};\n\nexport default {\n    getConsentsData: (deliveryMethodCode, fiscalCharacterization) =>\n        get(prepareUrl(DATA_PATH + \"/consents\"),\n            getParameters(deliveryMethodCode, fiscalCharacterization, consentsCmpId)),\n    getCartConsents: () => get(prepareUrl(DATA_PATH + \"/consents/cart\")),\n    recalculateConsentFromStrategy: (bundleNo, offerType) => get(prepareUrl(DATA_PATH + \"/recalculateStrategy/consent/\" + bundleNo + \"/\" + offerType)),\n    requestRecalculateConsentsForForeigner: (isForeigner) => get(prepareUrl(DATA_PATH + \"/recalculateStrategy/foreigner/consent/\" + isForeigner)),\n    updateCartConsents: (data) => postJsonObject(prepareUrl(DATA_PATH + \"/consents/modifyConsentsInCart/\" + consentsCmpId), data),\n\n    getCartCustomer: () => get(prepareUrl(DATA_PATH + \"/customer\")),\n\n    getCustomer: () => get(prepareUrl(\"/customer/details\")),\n\n    getCartRepresentative: () => get(prepareUrl(DATA_PATH + \"/representative\")),\n\n    getCartDelivery: () => get(prepareUrl(DATA_PATH + \"/delivery/availableMethods\")),\n    getCartDeliveryData: () => get(prepareUrl(DATA_PATH + \"/delivery\")),\n\n    getInstallationAvailableTimeSlots: (earlierInstallationConsentAccepted, documentsDeliveryMode) => {\n        let data = {\n            earlierInstallationConsentAccepted: earlierInstallationConsentAccepted,\n            documentsDeliveryMode: documentsDeliveryMode\n        };\n        return get(DATA_PATH + \"/installation/availableTimeSlots\", data);\n    },\n\n    getCartPayment: () => get(prepareUrl(DATA_PATH + \"/payment\")),\n\n    updateCartPayment: (paymentData) => postJsonObject(prepareUrl(DATA_PATH + \"/payment\"), paymentData),\n\n    updateCustomerSignedDocuments: (isSigned) => get(DATA_PATH + \"/customerSignedDocuments/\"+isSigned),\n\n    getCartMnpData: () => get(prepareUrl(DATA_PATH + \"/mnp\")),\n\n    doCheckoutStep: (checkoutData) => postJsonObject(prepareUrl(window.location.pathname), checkoutData),\n\n    doCheckoutAsyncStep: (checkoutData) => postJsonObject(window.location.pathname + \"/async\", checkoutData),\n\n    doSaveCheckoutData: (checkoutData) => postJsonObject(prepareUrl(window.location.pathname) + \"/saveData\", checkoutData),\n\n    fetchNearestPointsOfSale: (data) => get(`${contextPath}/checkout/pickup/nearest`, data),\n\n    fetchPOSPickupCities: () => get(`${contextPath}/hapi/pickup/cities`),\n\n    fetchPOSPickupAvailability: (town) => {\n        let data = {\n            town: town\n        };\n        return get(`${contextPath}/hapi/pickup/pointofservice`, data);\n    },\n\n    getLastSelectedPos: () => get(prepareUrl('/pickup/lastSelectedPos')),\n\n    reloadSummaryOnCart: (data) => postJsonObject(prepareUrl(DATA_PATH + \"/cart/reloadSummary\"), data),\n\n    fetchCvDocumentList: () => get(prepareUrl(DATA_PATH + \"/customer/getAdditionalDocuments\")),\n\n    //TODO: real address\n    getBpgData: (nip) => get(prepareUrl(DATA_PATH + \"/customer/bpg?nip=\" + nip)),\n\n    getZipCodeFromWWT: (placeId, streetId, streetNumber) => {\n        const data = {\n            placeId,\n            streetId,\n            streetNumber\n        };\n        return $.ajax(_.extend({}, baseSetup, {\n            url: bsfContextPath + \"/wwt/streetZips\",\n            data: data,\n            dataType: \"json\",\n            contentType: \"application/json; charset=utf-8\",\n            type: \"get\"\n        }));\n    },\n\n    validateZipCode: (postalCode, placeId, streetId, streetNumber) => {\n        const data = {\n            postalCode,\n            placeId,\n            streetId,\n            streetNumber\n        };\n        return $.ajax(_.extend({}, baseSetup, {\n            url: bsfContextPath + \"/wwt/validateZip\",\n            data: data,\n            dataType: \"json\",\n            contentType: \"application/json; charset=utf-8\",\n            type: \"get\"\n        }));\n    },\n\n    getSelectedWwtAddress: () => {\n        return get(bsfContextPath + \"/wwt/selectedAddress\", {});\n    },\n\n    getFutureInvestmentAddress: () => {\n        return get(\"/fix/lead/address\", {});\n    },\n\n    getFutureInvestmentConsent: () => {\n        return get(\"/consent/futureInvestment\", {});\n    },\n\n    getFutureInvestmentOffers: () => {\n        return get(\"/offers/futureInvestment\", {});\n    },\n\n    registerLead: (data) => postJsonObject(\"/fix/lead\", data),\n\n    getDocumentCode: (consentCodes) => get(\"/documents/getDocumentForConsentFix?consentCodes=\" + consentCodes),\n\n    selectApu:(option)=>{\n        let data={\n            apuOption: option\n        };\n\n        return post(bsfContextPath+\"/fix/apu/select\", data);\n\n    },\n\n    updateBillingAccount: (data) => postJsonObjectNoResult(DATA_PATH + \"/customerBillingAccount/update\", data),\n    getBillingAccountContracts: (data) =>get(DATA_PATH + \"/customerBillingAccount/getAccountContracts?accountId=\"+data),\n    setNewBillingAccount: (data) => postJsonObjectNoResult(DATA_PATH + \"/customerBillingAccount/new\", data),\n    getBillingAccount: () => get(DATA_PATH + \"/customerBillingAccount\"),\n\n    getPosSimCardsTypes: () => get(prepareUrl(MOBILE_RESOURCE_SIM_CARD_TYPES_POS_PATH)),\n    updateSerialNumbers: (request) => postJsonObject(PICKUP_UPDATE_SERIAL_NUMBERS, request),\n    cancleGoodsOrder: () => put(CANCEL_GOODS_ORDER),\n    getSerialNumbers: () => get(\"/pickup/serialnumbers\"),\n    clearSessionData: () => get(DATA_PATH + \"/customer/clearSessionData\"),\n    getWarehouseSerialNumbers: () => get(\"/pickup/warehouseserialnumbers\"),\n    getPickupDocuments: () => get(\"/pickup/documents\"),\n\n     getSimCardTypes: configurationId => {\n        const simAPI = bsfContextPath + \"/simCard/getSimCardTypes\";\n        return get(simAPI, {\"configurationId\": configurationId});\n     },\n\n     verifySerialNumbers: (data) => {\n        var serialNumbersAPI = \"/goodsOrders/serialNumbers\";\n        return postJsonObject(serialNumbersAPI, data);\n     },\n\n     getSapFioriLinks: (sapOrderId) => {\n        var sapFioriLinksAPI = \"/goodsOrders/fioriLinks/\" + sapOrderId;\n        return get(sapFioriLinksAPI);\n     },\n\n     getFioriCorrectiveInvoiceLink: () => {\n        var fioriCorrectiveInvoiceLinkAPI = \"/goodsOrders/fioriCorrectiveInvoiceLink\";\n        return get(fioriCorrectiveInvoiceLinkAPI);\n     },\n\n     unlockSale: (sapOrderId) => {\n        var unlockSaleAPI = \"/goodsOrders/unlockSale/\" + sapOrderId;\n        return put(unlockSaleAPI, '');\n     },\n\n     checkUnlockSaleInSapStatus: (sapOrderId) => {\n        var unlockSaleAPI = \"/goodsOrders/unlockSale/status/\" + sapOrderId;\n        return get(unlockSaleAPI, '');\n     },\n\n     paymentAndFiscalization: (sapOrderId) => {\n        var paymentAndFiscalizationAPI = \"/goodsOrders/paymentAndFiscalization/\" + sapOrderId;\n        return get(paymentAndFiscalizationAPI);\n     },\n\n     cancelOrder: (sapOrderId) => {\n        var cancelOrderAPI = \"/goodsOrders/cancelOrder/\" + sapOrderId;\n        return put(cancelOrderAPI);\n     },\n\n     checkPaymentStatus: (sapOrderId) => {\n         let url = '/goodsOrders/paymentStatus/' + sapOrderId;\n         return get(url);\n     },\n\n     printOrderNumber: (sapOrderId) => {\n         let url = '/goodsOrders/checkoutPaymentPrintout/' + sapOrderId;\n         return getPdf(url);\n     },\n\n    printInvoiceNumber: (sapOrderId, isPickup) => {\n        let url = (isPickup ? '/pickup/invoicePrintout/' : '/goodsOrders/checkoutPaymentPrintout/') + sapOrderId  ;\n        return getPdf(url);\n    },\n\n     getAssistModeState: () => {\n         let url = '/assist/state';\n         return get(url);\n     },\n\n     getAssistModeEmployeeList: (filters) => {\n         let url = '/employee/list';\n         return get(url,filters);\n     },\n\n     setAssistEmployee: (employee) => {\n        let url = '/assist/enter';\n        return post(url,employee);\n     },\n\n     leaveAssistMode: () => {\n        let url = '/assist/leave';\n        return post(url);\n     },\n\n     updateCheckoutCart: (checkoutData) => postJsonObject(prepareUrl(DATA_PATH + \"/updateDeliveryMethod\"), checkoutData),\n\n     updateInstallationInfoOnCart: (checkoutData) => postJsonObject(prepareUrl(DATA_PATH + \"/updateInstallationInfoMethod\"), checkoutData),\n\n     confirmReplanishment: () => put(prepareUrl('/pickup/replanishment')),\n\n     setPickupPosId: (posId) => {\n        post(`${contextPath}/view/OraPickupPosMapsComponentController/setPosId`, {pos: posId});\n     },\n\n     pickupActivation: () => put('/pickup/activation'),\n\n     getLastOrder: () => get('/pickup/lastOrderData'),\n\n     updateConsents: (data) => postJsonObject(DATA_PATH + \"/updateConsentsStates\", data),\n\n     pickupCompletion: () => get('/pickup/pickupCompletion'),\n\n    getPickupPaymentStatus: (override) => {\n        let data = {\n            forced: override\n        }\n        return get('/pickup/paymentStatus', data);\n     },\n\n    prepareDocumentsToZip: () => get(prepareUrl('/pickup/prepareToZip')).then(() =>\n        poll(prepareUrl('/pickup/readyToZip'), null, r => r === true)\n    ),\n\n    getZipDocumentsUrl: () => '/pickup/zip',\n\n     getParcelLockerList: (town) => {\n        let data = {\n            town: town\n         };\n        return get(`${contextPath}/hapi/parcel/get`, data);\n     },\n\n     getParcelLockerCityList: (town) => {\n         let data = {\n             town: town.toUpperCase()\n         };\n         return get(`${contextPath}/hapi/parcel/get/cities`, data)\n     },\n\n     getLastSelectedParcelLocker: () => get(`${contextPath}/hapi/parcel/lastSelectedPos`),\n\n     setPosId: (pos) => {\n        let data = {\n            pos: pos,\n        };\n        post(`${contextPath}/view/OraParcelLockerMapsComponentController/setPosId`, data)\n     },\n\n    updateSelectedPOSAvailabilityStatus: (value) => {\n        let data = {\n            status: value\n        };\n        return get(prepareUrl('/pickup/posAvailability'), data);\n    },\n\n    updateSimCard: (bundleNo, baseSimCardCode) => {\n        return postJson(prepareSecureUrl(UPDATE_SIM_CARD),{\n            bundleNo: bundleNo,\n            baseSimCardCode: baseSimCardCode\n        });\n    },\n    postFbbServiceData: (designationNumber, serviceInstanceId) => {\n        return post(prepareUrl(POST_FBB_SERVICE_DATA),{\n            designationNumber: designationNumber,\n            serviceInstanceId: serviceInstanceId\n        });\n    },\n\n    getFBBServiceData: () => get(prepareUrl(GET_FBB_SERVICE_DATA)),\n    getFBBServiceDataFilteredByWWT: () => get(prepareUrl(GET_FBB_SERVICE_DATA_FILTERED_BY_WWT)),\n    refreshFixCartWithoutFbbCheck: () => post(prepareUrl(REFRESH_FIX_CART_WITHOUTH_FBB_CHECK)),\n    getDocumentApprovements: () => get(prepareUrl(DATA_PATH + '/documentApprovement')),\n    updateDocumentApprovement: (documentApprovement, bundleNo) => postJsonObject(prepareUrl(DATA_PATH +`/documentApprovement/${bundleNo}`), documentApprovement),\n    getIdVerificationResult: () => get(prepareUrl(DATA_PATH + '/idVerification/result')),\n    getIdVerificationBanks: () => get(prepareUrl(DATA_PATH + '/idVerification/banks')),\n    updateIdVerificationBank: (bankId) => postJsonObject(prepareUrl(DATA_PATH + '/idVerification/bank'), {id: bankId}),\n    requestIdVerification: () => post(prepareUrl(DATA_PATH + '/idVerification/request'), null),\n\n    consentsGetStatus:() => get(prepareUrl(\"/consentDocument/status\")),\n    consentsCreateAndSendDocument:(mail, phone, consentSections) => {\n        return postJsonObject(prepareUrl(\"/consentDocument/callCreateAndSendDocument\"),\n            {\n                mail,\n                phone,\n                consentSections\n            });\n    }\n};\n"],
    "file": "remoteApi.js"
}