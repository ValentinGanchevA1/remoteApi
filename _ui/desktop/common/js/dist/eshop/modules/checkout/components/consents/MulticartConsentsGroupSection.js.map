{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/checkout/components/consents/MulticartConsentsGroupSection.jsx"],
    "names": ["renderCount", "MulticartConsentsGroupSection", "props", "state", "expanded", "initiallyOpen", "onExpandedInit", "listNo", "consentData", "key", "consentCode", "readOnly", "readonly", "consentsWithBonusLoading", "isRelatedWithBonus", "isUpdating", "isMandatory", "required", "consent", "consentsErrorList", "consentStates", "filter", "consentState", "updating", "updatingConsents", "onChange", "onUpdate", "loaderElementId", "factoryType", "selectedMethod", "consents", "every", "con", "length", "allSelected", "positiveState", "selectedPositive", "forEach", "states", "find", "positive", "bundleAssignments", "ba", "bundleNo", "undefined", "stateCode", "code", "msisdns", "onChangeCallback", "getConsentMapping", "isAllSelected", "uncheckAllConsents", "acceptAllConsents", "listNumber", "checkConsents", "matchingConsents", "bundleConsent", "push", "relatedWithBonus", "concat", "map", "mc", "isRelatedWithBonusBySubsection", "data", "cd", "setState", "manualOpen", "style", "display", "newProps", "showErrorOld", "consentsErrorMsg", "showErrorNew", "console", "log", "event", "showError", "consentDocumentsShowError", "errorList", "e", "type", "isSectionWithPrintDocument", "showPrintDocumentsButton", "getNotPermanentlyAgreedConsents", "hasAlreadyAgreed", "channels", "sales", "backgroundColor", "sequence", "id", "agreeAllCheckboxChange", "bind", "allConsentsAreReadOnly", "containsRelatedWithBonusConsent", "selectAllConsentsCheckboxIsHidden", "__html", "title", "description", "showConfirmationRequiredDescription", "confirmationDescription", "onClicked", "getInfoForBonusConsentSection", "sectionExpanded", "isAllChecked", "descriptions", "bonusGroupBusinessImplications", "confirmationRequiredConsentCodes", "c", "indexOf", "consentProps", "consentIsPermanentlyAgreed", "groupNumber", "permanentlyAgreedVisibleForGroup", "evt", "preventDefault", "visible", "setPermanentlyAgreedConsentsVisibleForGroup", "isTheOnlyOneConsent", "permanentlyAgreedAreVisible", "sections", "s", "withBonus", "consentsCode", "some", "cCodes", "consentsToShow", "allConsentsForSection", "showSubSectionPreamble", "sectionIndex", "consentBelongToSubSection", "subSection", "allConsents", "preamble", "sectionWithBonus", "sectionProps", "i", "getPropsForConsent", "permanentlyAgreedConsents", "getPermanentlyAgreedConsents", "notPermanentlyAgreedConsents", "getHeader", "styleObject", "ref", "sectionKey", "getConsentsInSubsections", "togglePermanentlyAgreedVisibility", "renderConsentDocumentsButton", "currentStepId", "printMobileConsents", "printConsents", "isPrintConsentDocumentsButtonEnabled", "buttonText", "info", "getViewExpander", "React", "Component"],
    "mappings": "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",
    "sourcesContent": ["import React from \"react\";\nimport MulticartSingleConsentRow from \"./MulticartSingleConsentRow\";\nimport MulticartConsentsGroupSubSection from \"./MulticartConsentsGroupSubSection\";\nimport {Trigger,ConsentTrigger, Section} from \"eshop/modules/core/components/ui/Expander\";\nimport {getFrontValidationMsg} from \"../../selectors\";\nimport {\n    consentIsPermanentlyAgreed,\n    validateConsent\n} from \"../../utils/utils\";\nimport MulticartValidationComponent from \"../MulticartValidationComponent\";\nimport {OraButton} from \"eshop/components/OraCommonComponents\";\nimport ExpanderFromHtml from \"eshop/modules/core/components/ui/ExpanderFromHtml\";\n\nlet renderCount=0;\nexport default class MulticartConsentsGroupSection extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            expanded: this.props.initiallyOpen\n        };\n    }\n\n    componentDidMount() {\n        this.props.onExpandedInit(this.props.listNo, this.props.initiallyOpen);\n    }\n\n    getPropsForConsent(consentData) {\n        return {\n            key: consentData.consentCode,\n            readOnly: this.props.readonly,\n            consentsWithBonusLoading: consentData.isRelatedWithBonus,\n            isUpdating: this.props.isUpdating,\n            isMandatory: consentData.required,\n            consent: consentData,\n            consentsErrorList:this.props.consentsErrorList,\n            state: this.props.consentStates.filter((consentState) => (consentState.consentCode === consentData.consentCode)),\n            updating: this.props.updatingConsents[consentData.consentCode],\n            onChange: this.props.onChange,\n            onUpdate: this.props.onUpdate,\n            loaderElementId: this.props.loaderElementId,\n            factoryType: this.props.factoryType,\n            selectedMethod: this.props.selectedMethod\n        };\n    }\n    allConsentsAreReadOnly(){\n        return this.props.consents.every(con => con.readonly);\n    }\n    isAllSelected() {\n        if(this.props.consents.length === 0) {\n            return false;\n        }\n\n        let allSelected = true;\n        let state;\n        let positiveState;\n        let selectedPositive;\n        this.props.consents.forEach(consent => {\n                positiveState = consent.states.find((state) => state.positive);\n                if (!!consent.bundleAssignments && consent.bundleAssignments.length > 0) {\n                    consent.bundleAssignments.forEach(ba => {\n                        state = this.props.consentStates.find((consentState) => (consent.consentCode === consentState.consentCode && consentState.bundleNo === ba.bundleNo));\n                        selectedPositive = ((state !== undefined) && (state.stateCode === positiveState.code));\n                        allSelected = allSelected && selectedPositive;\n                    });\n                }else if(!!consent.msisdns && consent.msisdns.length > 0) {\n                    consent.msisdns.forEach(ba => {\n                        state = this.props.consentStates.find((consentState) => (consent.consentCode === consentState.consentCode && consentState.bundleNo === ba.bundleNo));\n                        selectedPositive = ((state !== undefined) && (state.stateCode === positiveState.code));\n                        allSelected = allSelected && selectedPositive;\n                    });\n                }else {\n                    state = this.props.consentStates.find((consentState) => (consent.consentCode === consentState.consentCode && !consentState.bundleNo));\n                    selectedPositive = ((state !== undefined) && (state.stateCode === positiveState.code));\n                    allSelected = allSelected && selectedPositive;\n                }\n        });\n\n        return allSelected;\n    }\n\n    isAllChecked() {\n        if(this.props.consents.length === 0) {\n            return false;\n        }\n\n        let allSelected = true;\n        let state;\n        this.props.consents.forEach(consent => {\n            if(!consent.readonly) {\n                if (!!consent.bundleAssignments && consent.bundleAssignments.length > 0) {\n                    consent.bundleAssignments.forEach(ba => {\n                        state = this.props.consentStates.find((consentState) => (consent.consentCode === consentState.consentCode && consentState.bundleNo === ba.bundleNo));\n                        allSelected = allSelected && (state !== undefined) && state.stateCode;\n                    });\n                }else if(!!consent.msisdns && consent.msisdns.length > 0) {\n                    consent.msisdns.forEach(ba => {\n                        state = this.props.consentStates.find((consentState) => (consent.consentCode === consentState.consentCode && consentState.bundleNo === ba.bundleNo && consentState.stateCode));\n                        allSelected = allSelected && (state !== undefined) && state.stateCode;\n                    });\n                }else {\n                    state = this.props.consentStates.find((consentState) => (consent.consentCode === consentState.consentCode && !consentState.bundleNo ));\n                    allSelected = allSelected && (state !== undefined) && state.stateCode;\n                }\n            }\n        });\n\n        return allSelected;\n    }\n\n    acceptAllConsents() {\n        this.onChangeCallback(this.getConsentMapping(true));\n    }\n\n    uncheckAllConsents() {\n        this.onChangeCallback(this.getConsentMapping(false));\n    }\n\n    agreeAllCheckboxChange() {\n        if(this.isAllSelected()){\n            this.uncheckAllConsents();\n        } else {\n            this.acceptAllConsents();\n        }\n    }\n\n    isSectionWithPrintDocument(listNumber) {\n        return listNumber === 1 || listNumber === 11;\n    }\n\n    getConsentMapping(checkConsents) {\n    \tlet matchingConsents = [];\n    \tthis.props.consents.forEach(consent => {\n    \t    if(!consent.readonly){\n                let stateCode = checkConsents ? consent.states.find((state) => state.positive).code : consent.states.find((state) => !state.positive).code ;\n                if(!consent.bundleAssignments || consent.bundleAssignments.length === 0) {\n                    if(!!consent.msisdns && consent.msisdns.length > 0){\n                        consent.msisdns.forEach(bundleConsent => {\n                            matchingConsents.push({consentCode: consent.consentCode, bundleNo: bundleConsent.bundleNo, stateCode: stateCode, relatedWithBonus: consent.isRelatedWithBonus});\n                        })\n                    }else{\n                        matchingConsents.push({consentCode: consent.consentCode, bundleNo: null, stateCode: stateCode, relatedWithBonus: consent.isRelatedWithBonus});\n                    }\n                } else {\n                    matchingConsents = matchingConsents.concat(\n                        consent.bundleAssignments.map(ba => ({consentCode: consent.consentCode, bundleNo: ba.bundleNo, stateCode: stateCode, relatedWithBonus: consent.isRelatedWithBonus}))\n                    );\n                }\n            }\n        });\n\n        matchingConsents = matchingConsents.map(mc => ({...mc, relatedWithBonus: mc.relatedWithBonus || this.isRelatedWithBonusBySubsection(mc.consentCode)}))\n    \treturn matchingConsents;\n    }\n\n    onChangeCallback(data) {\n        this.props.onUpdate(data.filter(cd => cd.relatedWithBonus));\n        this.props.onChange(data.filter(cd => !cd.relatedWithBonus));\n    }\n\n    componentDidMount() {\n        this.setState({\n            manualOpen: false,\n            expanded: this.props.initiallyOpen,\n            style:{display:\"none\"}\n        });\n    }\n\n    componentWillUpdate(newProps){\n        const showErrorOld = this.props.consentsErrorMsg && this.props.consents.find(consent => !validateConsent(consent, this.props.consentStates));\n        const showErrorNew = newProps.consentsErrorMsg && newProps.consents.find(consent => !validateConsent(consent, newProps.consentStates));\n        if(!!showErrorNew && (!!showErrorNew!=!!showErrorOld  || !this.state.expanded)){\n            console.log(\"CONSENTS GROUP set state to expanded true\");\n            this.setState({manualOpen:false,expanded:true})\n        }\n\n\n        //if(this.state.manualOpen && !!showError!=this.state.expanded)\n         //   this.setState({manualOpen:false,expanded:!!showError})\n    }\n    onClicked(event){\n        if(this.state.expanded){//aria-expanded already changed\n            console.log(\"ZMIANA STANU na false\");\n            this.setState({manualOpen:true,expanded:false});\n        }else{\n            console.log(\"ZMIANA STANU na true\");\n            this.setState({manualOpen:true,expanded:true});\n        }\n\n    }\n    getHeader(listNumber) {\n        const showError = this.props.consentsErrorMsg && this.props.consents.find(consent => !validateConsent(consent, this.props.consentStates));\n\n        let consentDocumentsShowError = !!this.props.errorList && !!this.props.errorList.find(e => 'consentDocuments' === e.type)\n                                            && this.isSectionWithPrintDocument(listNumber) && this.props.showPrintDocumentsButton;\n\n        return ((this.getNotPermanentlyAgreedConsents() && this.getNotPermanentlyAgreedConsents().length > 0) || (this.props.hasAlreadyAgreed && this.props.channels.sales !== 'WWW')) && (\n            <div className={`opl-agreements__item opl-agreements__item--master u-padding-right-xl ${this.props.backgroundColor}`+(this.props.sequence!=0?\" u-border-top\":\"\")}>\n                <div className=\"l-row\">\n                    <div className=\"l-col l-col-12 u-padding-l u-padding-top-l\">\n                        <label className=\"opl-checkbox u-margin-right o-checkbox\">\n                            <input type=\"checkbox\" id={\"selectAllConsents-a-\" + this.props.id}\n                                   checked={this.isAllSelected()}\n                                   onChange={this.agreeAllCheckboxChange.bind(this)}\n                                   disabled={this.allConsentsAreReadOnly() || (this.props.isUpdating && this.containsRelatedWithBonusConsent())}\n                                   hidden={this.selectAllConsentsCheckboxIsHidden()}\n                                   className={!!showError || !!consentDocumentsShowError ? \" error\" : \"\"}/>\n                            <span className=\"o-ci\"></span>\n                            <span className=\"h5 o-ci-label\" dangerouslySetInnerHTML={{__html: this.props.title}}></span>\n                        </label>\n                        {this.props.description && <span><ExpanderFromHtml className=\"l-col-small-12 l-col-medium-12 l-col-9 u-margin-left-l-xl l-padding-top-l\" html={this.props.description} labelShow=\"[więcej]\" labelHide=\"[mniej]\"/></span>}\n                        {this.showConfirmationRequiredDescription() && <span dangerouslySetInnerHTML={{__html: this.props.confirmationDescription}}></span>}\n                        <Trigger className=\"opl-agreements__group__trigger opl-agreements__group__trigger-arrow js-expander__trigger u-inline u-text-nowrap\" onClick={this.onClicked.bind(this)} expanded={this.state.expanded} >\n                            <span className=\"js-expander__trigger--show\"></span>\n                            <span className=\"js-expander__trigger--hide\"></span>\n                        </Trigger>\n                        <div>\n                            <MulticartValidationComponent messageType={!!showError ? \"consents\" : \"consentDocuments\"} show={!!showError || !!consentDocumentsShowError} className=\" u-margin-left-l-xl u-margin-top-s \"/>\n                            {this.getInfoForBonusConsentSection()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    getInfoForBonusConsentSection(){\n        const showError = this.props.consentsErrorMsg && this.props.consents.find(consent => !validateConsent(consent, this.props.consentStates));\n        return this.containsRelatedWithBonusConsent() && !this.sectionExpanded() && !showError && !this.isAllChecked() && !!this.props.descriptions.bonusGroupBusinessImplications ? (\n             <div className=\"u-padding-m u-padding-top-m o-icon-text g-icon g-icon--info g-icon--before g-icon--xs-s g-blue2-c\">\n                 <p className=\"o-icon-text__text g-black1-c\">{this.props.descriptions.bonusGroupBusinessImplications}</p>\n             </div>\n        ) : \"\"\n    }\n\n    showConfirmationRequiredDescription(){\n        return this.props.confirmationDescription &&\n        this.props.consents &&\n        this.props.confirmationRequiredConsentCodes &&\n        this.props.consents.filter(c => this.props.confirmationRequiredConsentCodes.indexOf(c.consentCode) !== -1).length > 0;\n    }\n\n    containsRelatedWithBonusConsent(){\n        return this.props.consents && this.props.consents.filter(consent => consent.isRelatedWithBonus).length > 0 ;\n    }\n\n    sectionExpanded(){\n        return this.state.expanded;\n    }\n\n    consentIsPermanentlyAgreed(consent) {\n        return consentIsPermanentlyAgreed(consent, this.props.consentProps.consentStates);\n    }\n\n    getNotPermanentlyAgreedConsents() {\n        return this.props.consents.filter(consent => !this.consentIsPermanentlyAgreed(consent));\n    }\n\n    getPermanentlyAgreedConsents() {\n        return this.props.consents.filter(consent => this.consentIsPermanentlyAgreed(consent));\n    }\n\n    permanentlyAgreedAreVisible() {\n        let groupNumber = this.props.listNo;\n        return !!this.props.consentProps.permanentlyAgreedVisibleForGroup[groupNumber];\n    }\n\n    togglePermanentlyAgreedVisibility(evt) {\n        evt.preventDefault();\n        let groupNumber = this.props.listNo;\n        let visible = !!this.props.consentProps.permanentlyAgreedVisibleForGroup[groupNumber];\n        this.props.setPermanentlyAgreedConsentsVisibleForGroup(groupNumber, !visible);\n    }\n\n    selectAllConsentsCheckboxIsHidden() {\n        return this.isTheOnlyOneConsent() ||\n            (this.getNotPermanentlyAgreedConsents().length === 0 && !this.permanentlyAgreedAreVisible());\n    }\n\n    isRelatedWithBonusBySubsection(consentCode){\n         return (this.props.sections || [])\n         .filter(s => s.withBonus)\n         .map(s=>s.consentsCode)\n         .some(\n            cCodes=>cCodes.indexOf(consentCode) > -1\n         )\n    }\n\n    getConsentsInSubsections(consentsToShow, allConsentsForSection, showSubSectionPreamble){\n        let sectionIndex = 0\n        consentsToShow = consentsToShow.map(c=>({...c, sectionIndex: sectionIndex++}))\n\n        if(this.props.sections[0]){\n\n            let consentBelongToSubSection = (subSection, consent) => {\n                return !!subSection.consentsCode.filter(\n                    c => c === consent.consentCode\n                )[0]\n            }\n\n            return this.props.sections.map(subSection => ({\n                  consents: consentsToShow.filter(c => consentBelongToSubSection(subSection,c)),\n                  allConsents: allConsentsForSection.filter(c => consentBelongToSubSection(subSection,c)),\n                  preamble: showSubSectionPreamble ? subSection.preamble : null,\n                  sectionWithBonus: subSection.withBonus\n            })).map((sectionProps, i) => ( <MulticartConsentsGroupSubSection className={`${this.props.sections.length - 1 === i ? '' : 'u-border-bottom u-margin-l'}`}\n                {...this.props} {...sectionProps} getPropsForConsent={this.getPropsForConsent.bind(this)}/>))\n\n        } else {\n            return (<MulticartConsentsGroupSubSection {...this.props} consents={consentsToShow} getPropsForConsent={this.getPropsForConsent.bind(this)} />)\n        }\n    }\n\n    getViewExpander() {\n        let permanentlyAgreedConsents = this.getPermanentlyAgreedConsents();\n        let notPermanentlyAgreedConsents = this.getNotPermanentlyAgreedConsents()\n        let allConsents = permanentlyAgreedConsents.concat(notPermanentlyAgreedConsents);\n        const showError = this.props.consentsErrorMsg && !!this.props.consents.find(consent => !validateConsent(consent, this.props.consentStates));\n\n\n        return (\n            <Section header={this.getHeader(this.props.listNo)} variant=\"\" className=\"opl-agreements__group js-expander__container\"\n                expanded={ this.state.expanded}\n                styleObject={this.props.styleObject}\n                renderCount={++renderCount}\n                ref={ref=>this.ref=ref}\n                contentClassName={`u-float-none l-col l-col-small-12 l-col-medium-12 l-col-9 opl-agreements__group__content js-expander__content u-hide--soft u-padding-left-xl u-medium-padding-left-l-xl u-small-padding-left-l-xl ${this.props.backgroundColor}`}\n                id={this.props.sectionKey} key={this.props.id + \"_section\"}>\n                {\n                    this.getConsentsInSubsections(notPermanentlyAgreedConsents, allConsents, true)\n                }\n                {\n                    (this.props.hasAlreadyAgreed && !this.permanentlyAgreedAreVisible() && this.props.channels.sales !== 'WWW') &&\n                    <p className=\"u-padding-l u-padding-top-l\">\n                        <span aria-hidden=\"true\" className=\"g-icon g-icon--xs-s g-icon--info u-margin-right-s g-gray7-c\"></span>\n                        <span>Powyższe zgody obejmują tylko te, które nie zostały wyrażone i wypełnione przy wcześniejszych zakupach.\n                            &nbsp;<a href=\"#\" onClick={this.togglePermanentlyAgreedVisibility.bind(this)}>Pokaż wszystkie zgody</a>\n                    </span>\n                    </p>\n                }\n                {\n                    (permanentlyAgreedConsents && permanentlyAgreedConsents.length > 0 && this.permanentlyAgreedAreVisible()) &&\n                    [<p className=\"opl-agreements-list__recentHeader u-font-bold u-margin-top-l\">\n                        Zgody wyrażone przy wcześniejszych zakupach&nbsp;\n                        <a href=\"#\" onClick={this.togglePermanentlyAgreedVisibility.bind(this)}>Ukryj</a>\n                    </p>,\n                     this.getConsentsInSubsections(permanentlyAgreedConsents, allConsents, false)\n                     ]\n                }\n\n                {this.renderConsentDocumentsButton(this.props.listNo)}\n            </Section>\n        );\n    }\n\n    renderConsentDocumentsButton(listNumber) {\n        let consentDocumentsShowError = !!this.props.errorList && !!this.props.errorList.find(e => 'consentDocuments' === e.type);\n        return <div>\n            {(this.isSectionWithPrintDocument(listNumber) && this.props.showPrintDocumentsButton) &&\n            <div className={'u-padding-l'}>\n                <div id=\"consents-console\"\n                     className={'l-row opl-console u-no-margin ' + ((this.props.channels.sales != 'WWW' && this.props.currentStepId === 'delivery-payment') ? 'g-white1-bg' : 'g-gray2-bg')}>\n                        <div className=\"l-col l-col-12\">\n                            <MulticartValidationComponent messageType=\"consentDocuments\"\n                                                          show={!!consentDocumentsShowError} className=\"u-padding-l\"/>\n                        </div>\n                        <div\n                            className=\"l-col l-col-small-12 l-col-medium-3 l-col-2  u-padding-left-l u-padding-right-l\">\n                            <OraButton\n                                onClick={(this.props.factoryType == \"MOBILE\") ? this.props.printMobileConsents : this.props.printConsents}\n                                customClasses=\"o-btn opl-btn opl-btn--green u-w-100\" type=\"green\"\n                                disabled={!this.props.isPrintConsentDocumentsButtonEnabled}>\n                            <span className=\"opl-ripple-box\">\n                                <span className=\"opl-ripple-circle\"></span>\n                            </span>\n                                {this.props.buttonText}\n                            </OraButton>\n                        </div>\n                        <div\n                            className=\"l-col l-col-small-12 l-col-medium-9 l-col-10  u-padding-left-l u-padding-right-l u-small-padding-top\">\n                            <p className=\"u-font-standard\">{this.props.info}</p>\n                        </div>\n                </div>\n            </div>\n            }\n        </div>;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.getViewExpander()}\n            </div>\n        );\n    }\n\n    isTheOnlyOneConsent(){\n        return this.props.consents && this.props.consents.length === 1;\n    }\n}\n"],
    "file": "MulticartConsentsGroupSection.js"
}