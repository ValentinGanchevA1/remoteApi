{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/checkout/actions/remote.js"],
    "names": ["doCheckoutStepStart", "checkoutData", "type", "ACTIONS", "DO_CHECKOUT_STEP_START", "doCheckoutStepDone", "data", "DO_CHECKOUT_STEP_DONE", "code", "doCheckoutStepError", "errorData", "DO_CHECKOUT_STEP_ERROR", "status", "message", "results", "getCartCustomerStart", "GET_CART_CUSTOMER_START", "getCartCustomerDone", "fixedData", "GET_CART_CUSTOMER_DONE", "errors", "getCustomerStart", "GET_CUSTOMER_START", "getCustomerDone", "GET_CUSTOMER_DONE", "getCartRepresentativeStart", "GET_CART_REPRESENTATIVE_DATA_START", "getCartRepresentativeDone", "GET_CART_REPRESENTATIVE_DATA_DONE", "getBillingAccountFormDataStart", "GET_BILLING_ACCOUNT_FORM_DATA_START", "getBillingAccountFormDataDone", "GET_BILLING_ACCOUNT_FORM_DATA_DONE", "getCartDeliveryDataStart", "GET_CART_DELIVERY_DATA_START", "getCartDeliveryDataDone", "GET_CART_DELIVERY_DATA_DONE", "getInstallationAvailableTimeSlotsStart", "GET_CART_INSTALLATION_AVAILABLE_TIME_SLOTS_DATA_START", "getInstallationAvailableTimeSlotsDone", "GET_CART_INSTALLATION_AVAILABLE_TIME_SLOTS_DATA_DONE", "getConsentsStart", "GET_CONSENTS_START", "getConsentsDone", "GET_CONSENTS_DONE", "setConsentReadOnly", "consentCode", "readOnly", "MAKE_CONSENT_READONLY", "getPeriodDone", "GET_PERIOD_DONE", "getPeriodStart", "GET_PERIOD_START", "fetchZipCodeFromWWTActions", "fetchZipCodeFromWWT", "fetchSelectedWwtAddressActions", "GET_SELECTED_WWT_ADDRESS_ACTION_TYPES", "getFutureInvestmentAddressActions", "GET_FUTURE_INVESTMENT_ADDRESS_ACTION_TYPES", "getFutureInvestmentConsentActions", "GET_FUTURE_INVESTMENT_CONSENT_ACTION_TYPES", "getFutureInvestmentOfferActions", "GET_FUTURE_INVESTMENT_OFFER_ACTION_TYPES", "registerLeadActions", "REGISTER_LEAD_ACTION_TYPES", "getCartConsentsStart", "GET_CART_CONSENTS_START", "getCartConsentsDone", "consents", "GET_CART_CONSENTS_DONE", "updateCartConsentsStart", "codes", "UPDATE_CONSENT_STATE_START", "updateCartConsentsDone", "response", "UPDATE_CONSENT_STATE_DONE", "getCustomerMnpDataStart", "GET_CUSTOMER_MNP_DATA_START", "getCustomerMnpDataDone", "GET_CUSTOMER_MNP_DATA_DONE", "getCartMnpDataStart", "GET_CART_MNP_DATA_START", "getCartMnpDataDone", "sources", "GET_CART_MNP_DATA_DONE", "fetchPosSimCardTypesDone", "FETCH_POS_SIM_CARD_TYPES_DONE", "fetchSerialNumbersDone", "FETCH_PICKUP_SERIAL_NUMBERS_DONE", "updateSerialNumbersStart", "UPDATE_SERIAL_NUMBERS_START", "updateSerialNumbersDone", "UPDATE_SERIAL_NUMBERS_DONE", "fetchPaymentStatusDone", "CHECK_GOODS_ORDERS_PAYMENT_STATUS_DONE", "getSimCardTypesDone", "serialNumbers", "FETCH_SIM_CARD_TYPES_DONE", "checkPaymentStatusStart", "CHECK_PAYMENT_STATUS_START", "pickupActivationStart", "PICKUP_ORDER_ACTIVATION_START", "pickupActivationDone", "PICKUP_ORDER_ACTIVATION_DONE", "pickupGeneralError", "error", "PICKUP_GENERAL_ERROR", "responseJSON", "pickupPaymentStateusError", "PICKUP_ORDER_PAYMENT_STATUS_ERROR", "pickupDocumentsDone", "PICKUP_DOCUMENTS_DONE", "documents", "pickupSerialNumberError", "PICKUP_SERIAL_NUMBERS_ERROR", "getBpgDataDone", "GET_BPG_DATA_DONE", "getBpgDataStart", "GET_BPG_DATA_START"],
    "mappings": ";;;;;;;AAAA;;AAIA;AACO,MAAMA,mBAAmB,GAC5B,SADSA,mBACT,CAACC,YAAD;AAAA,WAAmB;AACfC,MAAAA,IAAI,EAAEC,OAAO,CAACC,sBADC;AAEfH,MAAAA,YAAY,EAAEA;AAFC,KAAnB;AAAA,GADG;;;;AAMA,MAAMI,kBAAkB,GAC3B,SADSA,kBACT,CAACC,IAAD;AAAA,WAAW;AACPJ,MAAAA,IAAI,EAAEC,OAAO,CAACI,qBADP;AAEPC,MAAAA,IAAI,EAAEF,IAAI,CAACE;AAFJ,KAAX;AAAA,GADG;;;;AAMA,MAAMC,mBAAmB,GAC5B,SADSA,mBACT,CAACC,SAAD;AAAA,WAAgB;AACZR,MAAAA,IAAI,EAAEC,OAAO,CAACQ,sBADF;AAEZH,MAAAA,IAAI,EAAEE,SAAS,CAACF,IAFJ;AAGZI,MAAAA,MAAM,EAAEF,SAAS,CAACE,MAHN;AAIZC,MAAAA,OAAO,EAAEH,SAAS,CAACG,OAJP;AAKZC,MAAAA,OAAO,EAAEJ,SAAS,CAACI;AALP,KAAhB;AAAA,GADG,C,CASP;;;;;AACO,MAAMC,oBAAoB,GAC7B,SADSA,oBACT;AAAA,WAAO;AACHb,MAAAA,IAAI,EAAEC,OAAO,CAACa;AADX,KAAP;AAAA,GADG;;;;AAKA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAX,IAAI,EAAI;AACvC,QAAIY,SAAS,GAAG,4BAAgBZ,IAAhB,CAAhB;AACA,WAAO;AACHJ,MAAAA,IAAI,EAAEC,OAAO,CAACgB,sBADX;AAEHb,MAAAA,IAAI,EAAEY,SAFH;AAGHE,MAAAA,MAAM,EAAE,kCAAsBF,SAAtB;AAHL,KAAP;AAKH,GAPM,C,CASP;;;;;AACO,MAAMG,gBAAgB,GACzB,SADSA,gBACT;AAAA,WAAO;AACHnB,MAAAA,IAAI,EAAEC,OAAO,CAACmB;AADX,KAAP;AAAA,GADG;;;;AAKA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAjB,IAAI,EAAI;AACnC,QAAIY,SAAS,GAAG,4BAAgBZ,IAAhB,CAAhB;AACA,WAAO;AACHJ,MAAAA,IAAI,EAAEC,OAAO,CAACqB,iBADX;AAEHlB,MAAAA,IAAI,EAAEY,SAFH;AAGHE,MAAAA,MAAM,EAAE,kCAAsBF,SAAtB;AAHL,KAAP;AAKH,GAPM;;;;AASA,MAAMO,0BAA0B,GACnC,SADSA,0BACT;AAAA,WAAO;AACHvB,MAAAA,IAAI,EAAEC,OAAO,CAACuB;AADX,KAAP;AAAA,GADG;;;;AAKA,MAAMC,yBAAyB,GAClC,SADSA,yBACT,CAACrB,IAAD;AAAA,WAAW;AACPJ,MAAAA,IAAI,EAAEC,OAAO,CAACyB,iCADP;AAEPtB,MAAAA,IAAI,EAAJA;AAFO,KAAX;AAAA,GADG;;;;AAKA,MAAMuB,8BAA8B,GACvC,SADSA,8BACT;AAAA,WAAO;AACH3B,MAAAA,IAAI,EAAEC,OAAO,CAAC2B;AADX,KAAP;AAAA,GADG;;;;AAKA,MAAMC,6BAA6B,GACtC,SADSA,6BACT,CAACzB,IAAD;AAAA,WAAW;AACPJ,MAAAA,IAAI,EAAEC,OAAO,CAAC6B,kCADP;AAEP1B,MAAAA,IAAI,EAAJA;AAFO,KAAX;AAAA,GADG;;;;AAMA,MAAM2B,wBAAwB,GACjC,SADSA,wBACT;AAAA,WAAO;AACH/B,MAAAA,IAAI,EAAEC,OAAO,CAAC+B;AADX,KAAP;AAAA,GADG;;;;AAKA,MAAMC,uBAAuB,GAChC,SADSA,uBACT,CAAC7B,IAAD;AAAA,WAAW;AACPJ,MAAAA,IAAI,EAAEC,OAAO,CAACiC,2BADP;AAEP9B,MAAAA,IAAI,EAAJA;AAFO,KAAX;AAAA,GADG;;;;AAMA,MAAM+B,sCAAsC,GAC/C,SADSA,sCACT;AAAA,WAAO;AACHnC,MAAAA,IAAI,EAAEC,OAAO,CAACmC;AADX,KAAP;AAAA,GADG;;;;AAKA,MAAMC,qCAAqC,GAC9C,SADSA,qCACT,CAACjC,IAAD;AAAA,WAAW;AACPJ,MAAAA,IAAI,EAAEC,OAAO,CAACqC,oDADP;AAEPlC,MAAAA,IAAI,EAAJA;AAFO,KAAX;AAAA,GADG;;;;AAMA,MAAMmC,gBAAgB,GACzB,SADSA,gBACT,CAACnC,IAAD;AAAA,WAAW;AACPJ,MAAAA,IAAI,EAAEC,OAAO,CAACuC,kBADP;AAEPpC,MAAAA,IAAI,EAAJA;AAFO,KAAX;AAAA,GADG;;;;AAMA,MAAMqC,eAAe,GACxB,SADSA,eACT,CAACrC,IAAD;AAAA,WAAW;AACPJ,MAAAA,IAAI,EAAEC,OAAO,CAACyC,iBADP;AAEPtC,MAAAA,IAAI,EAAJA;AAFO,KAAX;AAAA,GADG;;;;AAMA,MAAMuC,kBAAkB,GAC3B,SADSA,kBACT,CAACC,WAAD,EAAcC,QAAd;AAAA,WAA4B;AACxB7C,MAAAA,IAAI,EAAEC,OAAO,CAAC6C,qBADU;AAExBF,MAAAA,WAAW,EAAXA,WAFwB;AAGxBC,MAAAA,QAAQ,EAARA;AAHwB,KAA5B;AAAA,GADG;;;;AAOA,MAAME,aAAa,GACtB,SADSA,aACT,CAAC3C,IAAD;AAAA,WAAW;AACPJ,MAAAA,IAAI,EAAEC,OAAO,CAAC+C,eADP;AAEP5C,MAAAA,IAAI,EAAJA;AAFO,KAAX;AAAA,GADG;;;;AAMA,MAAM6C,cAAc,GACvB,SADSA,cACT;AAAA,WAAO;AACHjD,MAAAA,IAAI,EAAEC,OAAO,CAACiD;AADX,KAAP;AAAA,GADG;;;AAKA,MAAMC,0BAA0B,GAAG,iDAAqBlD,OAAO,CAACmD,mBAA7B,CAAnC;;AACA,MAAMC,8BAA8B,GAAG,iDAAqBpD,OAAO,CAACqD,qCAA7B,CAAvC;;AAEA,MAAMC,iCAAiC,GAAG,iDAAqBtD,OAAO,CAACuD,0CAA7B,CAA1C;;AAEA,MAAMC,iCAAiC,GAAG,iDAAqBxD,OAAO,CAACyD,0CAA7B,CAA1C;;AAEA,MAAMC,+BAA+B,GAAG,iDAAqB1D,OAAO,CAAC2D,wCAA7B,CAAxC;;AAEA,MAAMC,mBAAmB,GAAG,iDAAqB5D,OAAO,CAAC6D,0BAA7B,CAA5B;;;AAEA,MAAMC,oBAAoB,GAC7B,SADSA,oBACT;AAAA,WAAO;AACH/D,MAAAA,IAAI,EAAEC,OAAO,CAAC+D;AADX,KAAP;AAAA,GADG;;;;AAKA,MAAMC,mBAAmB,GAC5B,SADSA,mBACT,CAAC7D,IAAD,EAAO8D,QAAP;AAAA,WAAqB;AACjBlE,MAAAA,IAAI,EAAEC,OAAO,CAACkE,sBADG;AAEjB/D,MAAAA,IAAI,EAAJA,IAFiB;AAGjB8D,MAAAA,QAAQ,EAARA;AAHiB,KAArB;AAAA,GADG;;;;AAOA,MAAME,uBAAuB,GAChC,SADSA,uBACT,CAACC,KAAD;AAAA,WAAY;AACRrE,MAAAA,IAAI,EAAEC,OAAO,CAACqE,0BADN;AAERD,MAAAA,KAAK,EAALA;AAFQ,KAAZ;AAAA,GADG;;;;AAMA,MAAME,sBAAsB,GAC/B,SADSA,sBACT,CAACC,QAAD;AAAA,WAAe;AACXxE,MAAAA,IAAI,EAAEC,OAAO,CAACwE,yBADH;AAEXD,MAAAA,QAAQ,EAARA;AAFW,KAAf;AAAA,GADG;;;;AAMA,MAAME,uBAAuB,GAChC,SADSA,uBACT,CAACL,KAAD;AAAA,WAAY;AACRrE,MAAAA,IAAI,EAAEC,OAAO,CAAC0E,2BADN;AAERN,MAAAA,KAAK,EAALA;AAFQ,KAAZ;AAAA,GADG;;;;AAMA,MAAMO,sBAAsB,GAC/B,SADSA,sBACT,CAACJ,QAAD;AAAA,WAAe;AACXxE,MAAAA,IAAI,EAAEC,OAAO,CAAC4E,0BADH;AAEXL,MAAAA,QAAQ,EAARA;AAFW,KAAf;AAAA,GADG;;;;AAMA,MAAMM,mBAAmB,GAC5B,SADSA,mBACT,CAACT,KAAD;AAAA,WAAY;AACRrE,MAAAA,IAAI,EAAEC,OAAO,CAAC8E,uBADN;AAERV,MAAAA,KAAK,EAALA;AAFQ,KAAZ;AAAA,GADG;;;;AAMA,MAAMW,kBAAkB,GAC3B,SADSA,kBACT,CAACC,OAAD;AAAA,WAAc;AACVjF,MAAAA,IAAI,EAAEC,OAAO,CAACiF,sBADJ;AAEVD,MAAAA,OAAO,EAAPA;AAFU,KAAd;AAAA,GADG;;;;AAMA,MAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/E,IAAD;AAAA,WAAW;AAC/CJ,MAAAA,IAAI,EAAEC,OAAO,CAACmF,6BADiC;AAE/ChF,MAAAA,IAAI,EAAJA;AAF+C,KAAX;AAAA,GAAjC;;;;AAKA,MAAMiF,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACb,QAAD;AAAA,WAAe;AACjDxE,MAAAA,IAAI,EAAEC,OAAO,CAACqF,gCADmC;AAEjDd,MAAAA,QAAQ,EAARA;AAFiD,KAAf;AAAA,GAA/B;;;;AAKA,MAAMe,wBAAwB,GAAG,SAA3BA,wBAA2B;AAAA,WAAO;AAC3CvF,MAAAA,IAAI,EAAEC,OAAO,CAACuF;AAD6B,KAAP;AAAA,GAAjC;;;;AAIA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACjB,QAAD;AAAA,WAAe;AAClDxE,MAAAA,IAAI,EAAEC,OAAO,CAACyF,0BADoC;AAElDlB,MAAAA,QAAQ,EAARA;AAFkD,KAAf;AAAA,GAAhC;;;;AAKA,MAAMmB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACnB,QAAD;AAAA,WAAe;AACjDxE,MAAAA,IAAI,EAAEC,OAAO,CAAC2F,sCADmC;AAEjDpB,MAAAA,QAAQ,EAARA;AAFiD,KAAf;AAAA,GAA/B;;;;AAMA,MAAMqB,mBAAmB,GAC5B,SADSA,mBACT,CAACzF,IAAD,EAAO0F,aAAP;AAAA,WAA0B;AACtB9F,MAAAA,IAAI,EAAEC,OAAO,CAAC8F,yBADQ;AAEtB3F,MAAAA,IAAI,EAAEA,IAFgB;AAGtB0F,MAAAA,aAAa,EAAEA;AAHO,KAA1B;AAAA,GADG;;;;AAOA,MAAME,uBAAuB,GAChC,SADSA,uBACT,CAAC3B,KAAD;AAAA,WAAY;AACRrE,MAAAA,IAAI,EAAEC,OAAO,CAACgG,0BADN;AAER5B,MAAAA,KAAK,EAALA;AAFQ,KAAZ;AAAA,GADG;;;;AAMA,MAAM6B,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,WAAO;AACxClG,MAAAA,IAAI,EAAEC,OAAO,CAACkG;AAD0B,KAAP;AAAA,GAA9B;;;;AAIA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,WAAO;AACxCpG,MAAAA,IAAI,EAAEC,OAAO,CAACoG;AAD0B,KAAP;AAAA,GAA7B;;;;AAIA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD;AAAA,WAAY;AAC1CvG,MAAAA,IAAI,EAAEC,OAAO,CAACuG,oBAD4B;AAE1CD,MAAAA,KAAK,EAAEA,KAAK,CAACE;AAF6B,KAAZ;AAAA,GAA3B;;;;AAKA,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B;AAAA,WAAO;AAC5C1G,MAAAA,IAAI,EAAEC,OAAO,CAAC0G;AAD8B,KAAP;AAAA,GAAlC;;;;AAIA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACxG,IAAD;AAAA,WAAW;AAC1CJ,MAAAA,IAAI,EAAEC,OAAO,CAAC4G,qBAD4B;AAE1CC,MAAAA,SAAS,EAAE1G;AAF+B,KAAX;AAAA,GAA5B;;;;AAKA,MAAM2G,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAC3G,IAAD;AAAA,WAAW;AAC9CJ,MAAAA,IAAI,EAAEC,OAAO,CAAC+G,2BADgC;AAE9C9F,MAAAA,MAAM,EAAEd;AAFsC,KAAX;AAAA,GAAhC;;;;AAKA,MAAM6G,cAAc,GAAG,SAAjBA,cAAiB,CAAC7G,IAAD;AAAA,WAAW;AACrCJ,MAAAA,IAAI,EAAEC,OAAO,CAACiH,iBADuB;AAErC9G,MAAAA,IAAI,EAAEA;AAF+B,KAAX;AAAA,GAAvB;;;;AAKA,MAAM+G,eAAe,GAAG,SAAlBA,eAAkB;AAAA,WAAO;AAClCnH,MAAAA,IAAI,EAAEC,OAAO,CAACmH;AADoB,KAAP;AAAA,GAAxB",
    "sourcesContent": ["import * as ACTIONS from \"../actionTypes\";\nimport {createRequestActions} from \"../../core/utils/request-actions-creator\";\nimport {fixCustomerData, getCustomerDataErrors} from \"./../utils/utils\";\n\n// Checkout flow\nexport const doCheckoutStepStart =\n    (checkoutData) => ({\n        type: ACTIONS.DO_CHECKOUT_STEP_START,\n        checkoutData: checkoutData\n    });\n\nexport const doCheckoutStepDone =\n    (data) => ({\n        type: ACTIONS.DO_CHECKOUT_STEP_DONE,\n        code: data.code\n    });\n\nexport const doCheckoutStepError =\n    (errorData) => ({\n        type: ACTIONS.DO_CHECKOUT_STEP_ERROR,\n        code: errorData.code,\n        status: errorData.status,\n        message: errorData.message,\n        results: errorData.results\n    });\n\n// Checkout data\nexport const getCartCustomerStart =\n    () => ({\n        type: ACTIONS.GET_CART_CUSTOMER_START\n    });\n\nexport const getCartCustomerDone = data => {\n    let fixedData = fixCustomerData(data);\n    return {\n        type: ACTIONS.GET_CART_CUSTOMER_DONE,\n        data: fixedData,\n        errors: getCustomerDataErrors(fixedData)\n    };\n};\n\n// Customer data\nexport const getCustomerStart =\n    () => ({\n        type: ACTIONS.GET_CUSTOMER_START\n    });\n\nexport const getCustomerDone = data => {\n    let fixedData = fixCustomerData(data);\n    return {\n        type: ACTIONS.GET_CUSTOMER_DONE,\n        data: fixedData,\n        errors: getCustomerDataErrors(fixedData)\n    };\n};\n\nexport const getCartRepresentativeStart =\n    () => ({\n        type: ACTIONS.GET_CART_REPRESENTATIVE_DATA_START\n    });\n\nexport const getCartRepresentativeDone =\n    (data) => ({\n        type: ACTIONS.GET_CART_REPRESENTATIVE_DATA_DONE,\n        data\n    });\nexport const getBillingAccountFormDataStart =\n    () => ({\n        type: ACTIONS.GET_BILLING_ACCOUNT_FORM_DATA_START\n    });\n\nexport const getBillingAccountFormDataDone =\n    (data) => ({\n        type: ACTIONS.GET_BILLING_ACCOUNT_FORM_DATA_DONE,\n        data\n    });\n\nexport const getCartDeliveryDataStart =\n    () => ({\n        type: ACTIONS.GET_CART_DELIVERY_DATA_START\n    });\n\nexport const getCartDeliveryDataDone =\n    (data) => ({\n        type: ACTIONS.GET_CART_DELIVERY_DATA_DONE,\n        data\n    });\n\nexport const getInstallationAvailableTimeSlotsStart =\n    () => ({\n        type: ACTIONS.GET_CART_INSTALLATION_AVAILABLE_TIME_SLOTS_DATA_START\n    });\n\nexport const getInstallationAvailableTimeSlotsDone =\n    (data) => ({\n        type: ACTIONS.GET_CART_INSTALLATION_AVAILABLE_TIME_SLOTS_DATA_DONE,\n        data\n    });\n\nexport const getConsentsStart =\n    (data) => ({\n        type: ACTIONS.GET_CONSENTS_START,\n        data\n    });\n\nexport const getConsentsDone =\n    (data) => ({\n        type: ACTIONS.GET_CONSENTS_DONE,\n        data\n    });\n\nexport const setConsentReadOnly =\n    (consentCode, readOnly) => ({\n        type: ACTIONS.MAKE_CONSENT_READONLY,\n        consentCode,\n        readOnly\n    });\n\nexport const getPeriodDone =\n    (data) => ({\n        type: ACTIONS.GET_PERIOD_DONE,\n        data\n    });\n\nexport const getPeriodStart =\n    () => ({\n        type: ACTIONS.GET_PERIOD_START\n    });\n\nexport const fetchZipCodeFromWWTActions = createRequestActions(ACTIONS.fetchZipCodeFromWWT);\nexport const fetchSelectedWwtAddressActions = createRequestActions(ACTIONS.GET_SELECTED_WWT_ADDRESS_ACTION_TYPES);\n\nexport const getFutureInvestmentAddressActions = createRequestActions(ACTIONS.GET_FUTURE_INVESTMENT_ADDRESS_ACTION_TYPES);\n\nexport const getFutureInvestmentConsentActions = createRequestActions(ACTIONS.GET_FUTURE_INVESTMENT_CONSENT_ACTION_TYPES);\n\nexport const getFutureInvestmentOfferActions = createRequestActions(ACTIONS.GET_FUTURE_INVESTMENT_OFFER_ACTION_TYPES);\n\nexport const registerLeadActions = createRequestActions(ACTIONS.REGISTER_LEAD_ACTION_TYPES);\n\nexport const getCartConsentsStart =\n    () => ({\n        type: ACTIONS.GET_CART_CONSENTS_START\n    });\n\nexport const getCartConsentsDone =\n    (data, consents) => ({\n        type: ACTIONS.GET_CART_CONSENTS_DONE,\n        data,\n        consents\n    });\n\nexport const updateCartConsentsStart =\n    (codes) => ({\n        type: ACTIONS.UPDATE_CONSENT_STATE_START,\n        codes\n    });\n\nexport const updateCartConsentsDone =\n    (response) => ({\n        type: ACTIONS.UPDATE_CONSENT_STATE_DONE,\n        response\n    });\n\nexport const getCustomerMnpDataStart =\n    (codes) => ({\n        type: ACTIONS.GET_CUSTOMER_MNP_DATA_START,\n        codes\n    });\n\nexport const getCustomerMnpDataDone =\n    (response) => ({\n        type: ACTIONS.GET_CUSTOMER_MNP_DATA_DONE,\n        response\n    });\n\nexport const getCartMnpDataStart =\n    (codes) => ({\n        type: ACTIONS.GET_CART_MNP_DATA_START,\n        codes\n    });\n\nexport const getCartMnpDataDone =\n    (sources) => ({\n        type: ACTIONS.GET_CART_MNP_DATA_DONE,\n        sources\n    });\n\nexport const fetchPosSimCardTypesDone = (data) => ({\n    type: ACTIONS.FETCH_POS_SIM_CARD_TYPES_DONE,\n    data\n});\n\nexport const fetchSerialNumbersDone = (response) => ({\n    type: ACTIONS.FETCH_PICKUP_SERIAL_NUMBERS_DONE,\n    response\n});\n\nexport const updateSerialNumbersStart = () => ({\n    type: ACTIONS.UPDATE_SERIAL_NUMBERS_START,\n});\n\nexport const updateSerialNumbersDone = (response) => ({\n    type: ACTIONS.UPDATE_SERIAL_NUMBERS_DONE,\n    response\n});\n\nexport const fetchPaymentStatusDone = (response) => ({\n    type: ACTIONS.CHECK_GOODS_ORDERS_PAYMENT_STATUS_DONE,\n    response\n});\n\n\nexport const getSimCardTypesDone =\n    (data, serialNumbers) => ({\n        type: ACTIONS.FETCH_SIM_CARD_TYPES_DONE,\n        data: data,\n        serialNumbers: serialNumbers\n    });\n\nexport const checkPaymentStatusStart =\n    (codes) => ({\n        type: ACTIONS.CHECK_PAYMENT_STATUS_START,\n        codes\n    });\n\nexport const pickupActivationStart = () => ({\n    type: ACTIONS.PICKUP_ORDER_ACTIVATION_START\n});\n\nexport const pickupActivationDone = () => ({\n   type: ACTIONS.PICKUP_ORDER_ACTIVATION_DONE\n});\n\nexport const pickupGeneralError = (error) => ({\n    type: ACTIONS.PICKUP_GENERAL_ERROR,\n    error: error.responseJSON\n});\n\nexport const pickupPaymentStateusError = () => ({\n    type: ACTIONS.PICKUP_ORDER_PAYMENT_STATUS_ERROR\n});\n\nexport const pickupDocumentsDone = (data) => ({\n    type: ACTIONS.PICKUP_DOCUMENTS_DONE,\n    documents: data\n});\n\nexport const pickupSerialNumberError = (data) => ({\n    type: ACTIONS.PICKUP_SERIAL_NUMBERS_ERROR,\n    errors: data\n});\n\nexport const getBpgDataDone = (data) => ({\n    type: ACTIONS.GET_BPG_DATA_DONE,\n    data: data\n});\n\nexport const getBpgDataStart = () => ({\n    type: ACTIONS.GET_BPG_DATA_START\n});\n"],
    "file": "remote.js"
}