{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/checkout/components/modals/FixClientExistsErrorModal.jsx"],
    "names": ["FixClientExistsErrorView", "props", "dismiss", "isExistingCustomer", "errors", "length", "onClose", "bind", "renderInfo", "Component", "mapStateToProps", "state", "customerData", "cartCode", "mapDispatchToProps", "dispatch", "action", "FixClientExistsErrorModal"],
    "mappings": ";;;;;;;AACA;AACA;;;;;;MAOMA,wB;;;;;;;;;;;;gCAEO;AACL,aAAKC,KAAL,CAAWC,OAAX;AACH;;;iCAEUC,kB,EAAoB;AAC3B,4BACI,0CACOA,kBAAD,gBACE,gLADF,gBAGE,yKAJR,CADJ;AAWH;;;+BAEQ;AACL,4BACI,6BAAC,cAAD;AAAU,UAAA,SAAS,EAAE,IAArB;AAA2B,UAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,MAAX,IAAqB,KAAKH,KAAL,CAAWG,MAAX,CAAkBC,MAAlB,GAA2B,CAAjF;AAAoF,UAAA,OAAO,EAAE,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAA7F;AAAsH,UAAA,IAAI,EAAC;AAA3H,wBACI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI;AAAK,UAAA,SAAS,EAAC;AAAf,WACK,KAAKC,UAAL,CAAgB,CAAC,CAAC,KAAKP,KAAL,CAAWE,kBAA7B,CADL,CADJ,CADJ,CADJ,CADJ;AAUH;;;IA/BkCM,gB;;AAmCvC,MAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC5BP,MAAAA,MAAM,EAAE,iDAAiCO,KAAjC,CADoB;AAE5BC,MAAAA,YAAY,EAAE,gCAAgBD,KAAhB,CAFc;AAG5BE,MAAAA,QAAQ,EAAE,6BAAYF,KAAZ,CAHkB;AAI5BR,MAAAA,kBAAkB,EAAE,mCAAmBQ,KAAnB;AAJQ,KAAL;AAAA,GAA3B;;AAMA,MAAIG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,WAAK;AAClCb,MAAAA,OAAO,EAAE;AAAA,eAAMa,QAAQ,CAAC,0CAAD,CAAd;AAAA,OADyB;AAElCC,MAAAA,MAAM,EAAE;AAAA,eAAMD,QAAQ,CAAC,2BAAD,CAAd;AAAA;AAF0B,KAAL;AAAA,GAAjC;;AAKA,MAAME,yBAAyB,GAAG,yBAAQP,eAAR,EAAyBI,kBAAzB,EAA6Cd,wBAA7C,CAAlC;iBACeiB,yB",
    "sourcesContent": ["import {connect} from \"react-redux\";\nimport React, {Component} from \"react\";\nimport OraModal from \"eshop/modules/core/components/ui/Modal\";\nimport {OraButton} from \"eshop/components/OraCommonComponents\";\nimport {getFixClientExistsCheckoutErrors, getCustomerData, isExistingCustomer} from \"../../selectors\";\nimport {getCartCode} from \"eshop/modules/cart/selectors\";\nimport {dismissBackendValidationErrors, gotoCartSummary} from \"../../actions/app\";\n\n\nclass FixClientExistsErrorView extends Component {\n\n    onClose(){\n        this.props.dismiss();\n    }\n\n    renderInfo(isExistingCustomer) {\n        return (\n            <div>\n                { (isExistingCustomer) ?\n                    <span>Dane niemożliwe do poprawy na etapie rejestracji zamówienia. Popraw dane w Konsoli i ponownie rozpocznij rejestrację.</span>\n                    :\n                    <span>Podany numer PESEL należy do istniejącego Klienta. Proszę o powrót do strony oferty i wyszukanie Klienta.</span>\n                }\n\n\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <OraModal showClose={true} open={this.props.errors && this.props.errors.length > 0} onClose={this.onClose.bind(this)} size=\"medium\">\n                <div className=\"u-padding-all-m u-small-padding-s\">\n                    <div className=\"l-row u-spacing-top-m\">\n                        <div className=\"l-col l-col-12\">\n                            {this.renderInfo(!!this.props.isExistingCustomer)}\n                        </div>\n                    </div>\n                </div>\n            </OraModal>);\n    }\n}\n\n\nlet mapStateToProps = state => ({\n    errors: getFixClientExistsCheckoutErrors(state),\n    customerData: getCustomerData(state),\n    cartCode: getCartCode(state),\n    isExistingCustomer: isExistingCustomer(state)\n});\nlet mapDispatchToProps = dispatch => ({\n    dismiss: () => dispatch(dismissBackendValidationErrors()),\n    action: () => dispatch(gotoCartSummary())\n});\n\nconst FixClientExistsErrorModal = connect(mapStateToProps, mapDispatchToProps)(FixClientExistsErrorView);\nexport default FixClientExistsErrorModal;\n"],
    "file": "FixClientExistsErrorModal.js"
}