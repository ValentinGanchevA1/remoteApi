{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/checkout/components/representative/common.js"],
    "names": ["getCommonPropsForInput", "props", "name", "prefix", "options", "index", "composedName", "errors", "valid", "length", "id", "value", "labelType", "onBlur", "args", "onChange", "validate", "validationMark"],
    "mappings": ";;;;;;;;;;;;AAAO,MAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAQC,IAAR,EAAcC,MAAd,EAAsBC,OAAtB,EAAkC;AACpE,QAAMC,KAAK,GAAGJ,KAAK,CAACI,KAApB;AACA,QAAMC,YAAY,GAAGH,MAAM,GAAC,GAAP,GAAWE,KAAX,GAAiB,GAAjB,GAAqBH,IAA1C;AACA,QAAMK,MAAM,GAAGN,KAAK,CAACM,MAAN,IAAgBN,KAAK,CAACM,MAAN,CAAaL,IAAb,CAAjB,IAAwC,EAAtD;AACA,QAAMM,KAAK,GAAGD,MAAM,CAACE,MAAP,IAAiB,CAA/B;AACA;AACIP,MAAAA,IAAI,EAAEI,YADV;AAEII,MAAAA,EAAE,EAAEJ,YAFR;AAGIK,MAAAA,KAAK,EAAEV,KAAK,CAACC,IAAD,CAAL,IAAe,EAH1B;AAIIK,MAAAA,MAAM,EAANA,MAJJ;AAKIK,MAAAA,SAAS,EAAE,UALf;AAMIC,MAAAA,MAAM,EAAE,gBAACC,IAAD,EAAQ;AACZ,YAAMH,KAAK,GAAGG,IAAI,CAACH,KAAnB;AACAV,QAAAA,KAAK,CAACc,QAAN,CAAe;AAACV,UAAAA,KAAK,EAALA,KAAD;AAAQH,UAAAA,IAAI,EAAJA,IAAR;AAAcS,UAAAA,KAAK,EAALA,KAAd;AAAqBK,UAAAA,QAAQ,EAAC;AAA9B,SAAf,EAFY,CAEyC;AACxD,OATL;AAUID,MAAAA,QAAQ,EAAE,kBAACD,IAAD,EAAQ;AACd,YAAMH,KAAK,GAAGG,IAAI,CAACH,KAAnB;AACAV,QAAAA,KAAK,CAACc,QAAN,CAAe;AAACV,UAAAA,KAAK,EAALA,KAAD;AAAQH,UAAAA,IAAI,EAAJA,IAAR;AAAcS,UAAAA,KAAK,EAALA,KAAd;AAAqBK,UAAAA,QAAQ,EAAC;AAA9B,SAAf,EAFc,CAEwC;AACzD,OAbL;AAcIC,MAAAA,cAAc,EAAE,IAdpB;AAeIT,MAAAA,KAAK,EAALA;AAfJ,OAgBOJ,OAhBP;AAkBH,GAvBM",
    "sourcesContent": ["export const getCommonPropsForInput = (props, name, prefix, options) => {\n    const index = props.index;\n    const composedName = prefix+\"-\"+index+\"-\"+name;\n    const errors =(props.errors && props.errors[name]) || [];\n    const valid = errors.length == 0;\n    return {\n        name: composedName,\n        id: composedName,\n        value: props[name] || \"\",\n        errors,\n        labelType: \"floating\",\n        onBlur: (args)=>{\n            const value = args.value;\n            props.onChange({index, name, value, validate:true}); //with validation\n        },\n        onChange: (args)=>{\n            const value = args.value;\n            props.onChange({index, name, value, validate:false}); // no validation\n        },\n        validationMark: true,\n        valid,\n        ...options\n        };\n};"],
    "file": "common.js"
}