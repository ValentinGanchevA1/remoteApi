{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/checkout/reducers/consents.js"],
    "names": ["emptyConsentData", "consentCode", "code", "stateRequired", "description", "title", "message", "type", "priority", "required", "states", "validEntries", "isRelatedWithBonus", "bonuses", "installationLevel", "emptyConsentCurrentState", "bundleNo", "stateCode", "consents", "state", "action", "GET_CONSENTS_DONE", "data", "MAKE_CONSENT_READONLY", "copyState", "slice", "foundIndex", "findIndex", "element", "readonly", "readOnly", "modifyConsentsInCartQueue", "PUSH_TO_MODIFY_CONSENTS_IN_CART_QUEUE", "aggregateStatesInQueue", "toAdd", "SET_MODIFY_CONSENTS_IN_CART_QUEUE", "toAddArray", "stateWithoutToAddArray", "forEach", "matchToRemove", "x", "filter", "concat", "consentStates", "GET_CART_CONSENTS_DONE", "consentsWithMsisdn", "consent", "consentState", "find", "msisdns", "length", "consentsWithMsisdnCodes", "map", "consentStatesWithMsisdn", "msisdn", "push", "consentStateCode", "permanentlyAgreed", "consentStatesWithoutMsisdn", "includes", "cartConsent", "makeBundleNoOptionallyExplicit", "CHANGE_CONSENT_STATE", "changeDecisions", "consentBundleNo", "consentCurrentState", "e", "ccs", "UPDATE_CONSENT_STATE_DONE", "updateDecisions", "response", "consentCodes", "result", "c", "conf", "REGISTER_CMS_CONFIGURATION", "config", "consentDocumentsLoader", "CONSENT_DOCUMENTS_LOADER", "consentDocumentsPrintState", "CONSENT_PRINT_DOCUMENTS", "CHANGE_CUSTOMER_CONTACT_FORM_FIELD", "CHANGE_CUSTOMER_MAINADDRESS_FORM_FIELD", "CHANGE_CUSTOMER_DATA_FORM_FIELD", "REQUIRED_CONSENT_CHANGED", "consentDocumentsPrintStateForMobile", "consentTypeInPrintConsentsValidator", "consentType", "CONSENT_TYPE_IN_PRINT_CONSENTS_VALIDATOR", "verificationConsentType", "REGISTER_VERIFICATION_CONSENT_TYPE", "documentsConfirmation", "CHANGE_DOCUMENTS_CONFIRMATION", "value", "permanentlyAgreedVisibleForGroup", "SET_PERMANENTLY_AGREED_CONSENTS_VISIBLE_FOR_GROUP", "groupNumber", "visible", "consentGroupExpanded", "CONSENT_GROUP_EXPANDED", "listNo", "isRegisteredAgreementConfirmationComponent", "ACTIONS", "REGISTER_AGREEMENT_VALIDATION_COMPONENT", "wasBonusAgreementConfirmationModalConfirmed", "CLOSE_AGREEMENT_VALIDATION_MODAL", "modalVariant", "wasConfirmed", "wasBigAndZonkAgreementConfirmationModalConfirmed", "checkoutConsentStates", "checkoutConsents", "consentsWithBundleAssignments", "bundleAssignments", "makeBundleNoExplicitFor", "currentConsentStates", "cs", "nullConsentState", "nonNullConsentStates", "doNonTouchThisConsentState", "mbnef", "ret", "consentStatesWithExplicitBundleNo", "_", "flatMap", "ba", "consentDocumentStatus", "status", "CONSENTS_GET_STATUS", "payload", "consentEmailAddress", "emailAddress", "ENTER_CONSENTS_EMAIL_ADDRESS", "GET_CUSTOMER_DONE", "GET_CART_CUSTOMER_DONE", "consentPhoneNumber", "phoneNumber", "ENTER_CONSENTS_PHONE_NUMBER", "consentAcknowledgmentsReadWhileTalking", "acknowledged", "ENTER_CONSENTS_ACCEPTED_ACKNOWLEDGMENTS"],
    "mappings": "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",
    "sourcesContent": ["import {\n    CHANGE_CONSENT_STATE,\n    GET_CONSENTS_DONE,\n    GET_CART_CONSENTS_DONE,\n    UPDATE_CONSENT_STATE_DONE,\n    REGISTER_CMS_CONFIGURATION,\n    CONSENT_DOCUMENTS_LOADER,\n    CONSENT_PRINT_DOCUMENTS,\n    CHANGE_CUSTOMER_CONTACT_FORM_FIELD,\n    CHANGE_CUSTOMER_MAINADDRESS_FORM_FIELD,\n    CHANGE_CUSTOMER_DATA_FORM_FIELD,\n    CONSENT_TYPE_IN_PRINT_CONSENTS_VALIDATOR,\n    CHANGE_DOCUMENTS_CONFIRMATION,\n    MAKE_CONSENT_READONLY,\n    GET_CART_CUSTOMER_DONE,\n    PUSH_TO_MODIFY_CONSENTS_IN_CART_QUEUE,\n    SET_MODIFY_CONSENTS_IN_CART_QUEUE,\n    SET_PERMANENTLY_AGREED_CONSENTS_VISIBLE_FOR_GROUP,\n    CONSENT_GROUP_EXPANDED,\n    REQUIRED_CONSENT_CHANGED,\n    REGISTER_VERIFICATION_CONSENT_TYPE\n} from \"../actionTypes\";\nimport * as ACTIONS from \"../actionTypes\";\nimport _ from \"lodash\";\n\nvar emptyConsentData = {consentCode: \"\",\n                    code: \"\",\n                    stateRequired: false,\n                    description: \"\",\n                    title: \"\",\n                    message: \"\",\n                    type: \"\",\n                    priority: 0,\n                    required: false,\n                    states: [],\n                    validEntries: [],\n                    isRelatedWithBonus: false,\n                    bonuses: [],\n                    installationLevel: \"\"};\n\nvar emptyConsentCurrentState = {consentCode: \"\", bundleNo: null, stateCode: \"\"};\n\nexport var consents = (state = [], action) => {\n    switch(action.type) {\n        case GET_CONSENTS_DONE:\n            return action.data;\n        case MAKE_CONSENT_READONLY:\n            let copyState=state.slice();\n            let foundIndex=state.findIndex(element => element.consentCode === action.consentCode);\n            if(foundIndex!=-1) {\n                copyState[foundIndex].readonly = action.readOnly;\n            }\n            return copyState;\n        default:\n            return state;\n    }\n};\n\nexport var modifyConsentsInCartQueue = (state = [], action) => {\n    switch(action.type){\n        case PUSH_TO_MODIFY_CONSENTS_IN_CART_QUEUE:\n            return aggregateStatesInQueue(state, action.toAdd);\n        case SET_MODIFY_CONSENTS_IN_CART_QUEUE:\n            return action.data;\n        default:\n            return state;\n    }\n}\n\nfunction aggregateStatesInQueue(state, toAddArray){\n    //remove old versions\n    let stateWithoutToAddArray = state\n    toAddArray.forEach(toAdd =>{\n        var matchToRemove = x=>x.consentCode == toAdd.consentCode && (toAdd.bundleNo==x.bundleNo || !toAdd.bundleNo || !x.bundleNo)\n        stateWithoutToAddArray = stateWithoutToAddArray.filter(x=>!matchToRemove(x))\n    })\n\n    return stateWithoutToAddArray.concat(toAddArray)\n}\n\nexport var consentStates = (state = [], action) => {\n    switch(action.type) {\n        case GET_CART_CONSENTS_DONE:\n            let consentsWithMsisdn = action.consents.filter(consent => {\n                let consentState = action.data.find(consentState => consentState.consentCode === consent.consentCode);\n                return consent.msisdns && consent.msisdns.length != 0 && consentState && consentState.bundleNo == null;\n            });\n            let consentsWithMsisdnCodes = consentsWithMsisdn.map(consent => consent.consentCode);\n            let consentStatesWithMsisdn = [];\n            consentsWithMsisdn.forEach(consent => {\n                let consentState = action.data.find(consentState => consentState.consentCode === consent.consentCode);\n                consent.msisdns.forEach(msisdn => {\n                    consentStatesWithMsisdn.push({\n                        consentCode: consentState.consentCode,\n                        bundleNo: msisdn.bundleNo,\n                        stateCode: consentState.consentStateCode,\n                        permanentlyAgreed: consentState.permanentlyAgreed\n                    })\n                });\n            });\n            let consentStatesWithoutMsisdn = action.data.filter(consentState => !consentsWithMsisdnCodes.includes(consentState.consentCode)).map(cartConsent => ({\n                consentCode: cartConsent.consentCode,\n                bundleNo: cartConsent.bundleNo,\n                stateCode: cartConsent.consentStateCode,\n                permanentlyAgreed: cartConsent.permanentlyAgreed\n            }));\n            let consentStates = [...consentStatesWithMsisdn, ...consentStatesWithoutMsisdn];\n            return makeBundleNoOptionallyExplicit(consentStates, action.consents)\n        case CHANGE_CONSENT_STATE:\n            var changeDecisions = [];\n            action.data.map(consentState => {\n                var consentBundleNo = consentState.bundleNo || null;\n                var consentCurrentState = state.filter(e => e.consentCode === consentState.consentCode && (consentBundleNo == null || e.bundleNo == consentBundleNo));\n                if(consentCurrentState[0]) {\n                    consentCurrentState.forEach(ccs => ccs.stateCode = consentState.stateCode);\n                } else {\n                    changeDecisions =\n                        changeDecisions.concat(\n                            [\n                                ({\n                                    consentCode: consentState.consentCode,\n                                    stateCode: consentState.stateCode,\n                                    bundleNo: consentBundleNo,\n                                    permanentlyAgreed: false\n                                })\n                            ]\n                        );\n                }\n\n            });\n            return state.concat(changeDecisions);\n        case UPDATE_CONSENT_STATE_DONE:\n            var updateDecisions = [];\n            action.response.map(consentState => {\n                var consentBundleNo = consentState.bundleNo || null;\n                var consentCurrentState = state.find(e => e.consentCode === consentState.consentCode && e.bundleNo == consentBundleNo);\n                if(consentCurrentState) {\n                    state.find(e => e.consentCode === consentState.consentCode && e.bundleNo == consentBundleNo)\n                         .stateCode = consentState.stateCode;\n                } else {\n                    updateDecisions =\n                        updateDecisions.concat(\n                            [\n                                ({\n                                    consentCode: consentState.consentCode,\n                                    stateCode: consentState.stateCode,\n                                    bundleNo: consentBundleNo,\n                                    permanentlyAgreed: false\n                                })\n                            ]\n                        );\n                }\n            });\n            return state.concat(updateDecisions);\n        case GET_CONSENTS_DONE:\n            const consentCodes = action.data.map((consent => consent.consentCode));\n            return state.filter(consentState => {\n                var result = false;\n                consentCodes.map(c => {\n                    if(c === consentState.consentCode){\n                        result = true;\n                        return;\n                    }\n                });\n                return result;\n            });\n        default:\n            return state;\n    }\n};\n\n\nexport var conf = (state = [], action) => {\n    switch(action.type) {\n        case REGISTER_CMS_CONFIGURATION:\n            return state.concat(action.config || []);\n        default:\n            return state;\n    }\n};\n\n\nexport var consentDocumentsLoader = (state = false, action) => {\n    switch(action.type) {\n        case CONSENT_DOCUMENTS_LOADER:\n            return action.data;\n        default:\n            return state;\n    }\n};\n\nexport var consentDocumentsPrintState = (state = false, action) => {\n    switch(action.type) {\n        case CONSENT_PRINT_DOCUMENTS:\n            return true;\n        case CHANGE_CUSTOMER_CONTACT_FORM_FIELD:\n            return false;\n        case CHANGE_CUSTOMER_MAINADDRESS_FORM_FIELD:\n            return false;\n        case CHANGE_CUSTOMER_DATA_FORM_FIELD:\n            return false;\n        case REQUIRED_CONSENT_CHANGED:\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport var consentDocumentsPrintStateForMobile = (state = false, action) => {\n    switch(action.type) {\n        case CONSENT_PRINT_DOCUMENTS:\n            return true;\n        default:\n            return state;\n    }\n};\n\nexport var consentTypeInPrintConsentsValidator = (consentType = \"WZRK\", action) => {\n    switch(action.type) {\n        case CONSENT_TYPE_IN_PRINT_CONSENTS_VALIDATOR:\n            return action.consentType;\n        default:\n            return consentType;\n    }\n};\n\nexport var verificationConsentType = (verificationConsentType = null, action) => {\n    switch(action.type) {\n        case REGISTER_VERIFICATION_CONSENT_TYPE:\n            return action.verificationConsentType;\n        default:\n            return verificationConsentType;\n    }\n};\n\nexport var documentsConfirmation = (state = false, action) => {\n    switch(action.type) {\n        case CHANGE_DOCUMENTS_CONFIRMATION:\n            return action.value;\n        default:\n            return state;\n    }\n};\n\nexport var permanentlyAgreedVisibleForGroup = (state = {}, action) => {\n    switch(action.type) {\n        case SET_PERMANENTLY_AGREED_CONSENTS_VISIBLE_FOR_GROUP:\n            return {...state, [action.groupNumber]: action.visible};\n        default:\n            return state;\n    }\n};\n\nexport var consentGroupExpanded = (state = [], action) => {\n    switch(action.type) {\n        case CONSENT_GROUP_EXPANDED:\n            return {...state, [action.listNo]: action.value};\n        default:\n            return state;\n    }\n};\n\nexport const isRegisteredAgreementConfirmationComponent = (state = false, action) => {\n    switch (action.type) {\n        case ACTIONS.REGISTER_AGREEMENT_VALIDATION_COMPONENT:\n            return true;\n        default:\n            return state;\n    }\n};\n\nexport const wasBonusAgreementConfirmationModalConfirmed = (state = false, action) => {\n    switch (action.type) {\n        case ACTIONS.CLOSE_AGREEMENT_VALIDATION_MODAL:\n            if ((action.modalVariant === 'BONUS'  || action.modalVariant === 'COMMON') && !!action.wasConfirmed) {\n                return true;\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport const wasBigAndZonkAgreementConfirmationModalConfirmed = (state = false, action) => {\n    switch (action.type) {\n        case ACTIONS.CLOSE_AGREEMENT_VALIDATION_MODAL:\n            if ((action.modalVariant === 'BIGZONK' || action.modalVariant === 'COMMON') && !!action.wasConfirmed) {\n                return true;\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\nfunction makeBundleNoOptionallyExplicit(checkoutConsentStates, checkoutConsents){\n    let consentsWithBundleAssignments = (checkoutConsents || []).filter(consent => consent.bundleAssignments && consent.bundleAssignments[0])\n    checkoutConsentStates = checkoutConsentStates || []\n\n    let makeBundleNoExplicitFor = consentsWithBundleAssignments.map(c => {\n        let currentConsentStates = checkoutConsentStates.filter(cs => cs.consentCode == c.consentCode)\n        let nullConsentState = currentConsentStates.filter(cs=>cs.bundleNo == null)[0]\n        let nonNullConsentStates = currentConsentStates.filter(cs=>cs.bundleNo != null)\n\n        if(nullConsentState){\n            return {...c, nullConsentState, nonNullConsentStates}\n        } else {\n            return null\n        }\n    }).filter(c=>!!c)//not null\n\n    let doNonTouchThisConsentState = cs => !makeBundleNoExplicitFor.find(mbnef=>mbnef.consentCode == cs.consentCode)\n\n    let ret = checkoutConsentStates.filter(doNonTouchThisConsentState)\n\n    let consentStatesWithExplicitBundleNo = _.flatMap(makeBundleNoExplicitFor, c => {\n        if(c.nonNullConsentStates[0]){\n            return c.nonNullConsentStates;\n        } else {\n            return c.bundleAssignments.map(ba => ({...c.nullConsentState, bundleNo:ba.bundleNo}))\n        }\n    });\n\n    return ret.concat(consentStatesWithExplicitBundleNo)\n\n}\n\n\nexport const consentDocumentStatus = (status = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.CONSENTS_GET_STATUS:\n             return action.payload;\n        default:\n            return status;\n    }\n};\n\nexport const consentEmailAddress = (emailAddress = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.ENTER_CONSENTS_EMAIL_ADDRESS:\n             return action.payload;\n        case ACTIONS.GET_CUSTOMER_DONE:\n        case ACTIONS.GET_CART_CUSTOMER_DONE:\n            return action.data.emailAddress ? action.data.emailAddress : '';\n        default:\n            return emailAddress;\n    }\n};\n\nexport const consentPhoneNumber = (phoneNumber = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.ENTER_CONSENTS_PHONE_NUMBER:\n             return action.payload;\n        case ACTIONS.GET_CUSTOMER_DONE:\n        case ACTIONS.GET_CART_CUSTOMER_DONE:\n            return action.data.phoneNumber ? action.data.phoneNumber : '';\n        default:\n            return phoneNumber;\n    }\n};\nexport const consentAcknowledgmentsReadWhileTalking= (acknowledged = false, action) => {\n    switch (action.type) {\n        case ACTIONS.ENTER_CONSENTS_ACCEPTED_ACKNOWLEDGMENTS:\n             return action.payload;\n        default:\n            return acknowledged;\n    }\n};\n"],
    "file": "consents.js"
}