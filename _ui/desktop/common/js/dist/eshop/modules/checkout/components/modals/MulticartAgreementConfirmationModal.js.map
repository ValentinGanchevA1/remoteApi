{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/checkout/components/modals/MulticartAgreementConfirmationModal.jsx"],
    "names": ["MulticartAgreementConfirmationModal", "props", "state", "getCleanStateObject", "wasConfirmed", "originalConsentStates", "shouldPreserveVisibleState", "registerAgreementConfirmationComponent", "handleValidationAfterConfirmationAndConsentsUpdate", "handleConsentsUpdateAndCartRecalculation", "setState", "closeAgreementConfirmationModal", "modalVariant", "handleRevertConsentChanges", "length", "changeConsentState", "consentProps", "updatingAnyConsent", "validateData", "updateConsentsStates", "consentStates", "data", "backupConsentState", "map", "consentData", "find", "consentCode", "push", "console", "log", "setCheckboxConsentStateWithoutRemoteCall", "key", "readOnly", "descriptions", "consentsWithBonusLoading", "isRelatedWithBonus", "isUpdating", "isMandatory", "required", "consent", "filter", "consentState", "updating", "updatingConsents", "onChange", "bind", "onUpdate", "onUpdateForSingleConsent", "formInputType", "id", "list", "getPropsForConsent", "consents", "bigAndZonkConsents", "titleBonus", "titleBigZonk", "getInvoiceDescription", "descriptionBigZonk", "emailPrefix", "invoiceMapping", "invoiceEmail", "onClose", "showAgreementConfirmationModal", "__html", "getTitle", "getDescription", "renderConsentsSection", "getConsentListToRender", "onReturn", "onConfirm", "Component", "mapStateToProps", "mapDispatchToProps", "dispatch"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\"\nimport OraModal from \"eshop/modules/core/components/ui/Modal\";\nimport {getAgreementConfirmationModalVariant, getShowAgreementConfirmationModal} from \"eshop/modules/checkout/selectors\";\nimport {closeAgreementConfirmationModal} from \"eshop/modules/checkout/actions/errors\";\nimport {registerAgreementConfirmationComponent, updateConsentsStates} from \"eshop/modules/checkout/actions/data\";\nimport {OraButton} from \"eshop/components/OraCommonComponents\";\nimport {changeConsentState} from \"eshop/modules/checkout/actions/app\";\nimport MulticartSingleConsentRow from \"eshop/modules/checkout/components/consents/MulticartSingleConsentRow\";\nimport {getConsentsProps, updatingConsents, getBigAndZonkConsents} from \"eshop/modules/checkout/selectors\";\nimport {validateData} from \"eshop/modules/checkout/actions/validation\";\nimport {getInvoiceEmail, getInvoiceEmailMapping} from \"eshop/modules/checkout/selectors\";\n\nclass MulticartAgreementConfirmationModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.getCleanStateObject();\n    }\n\n    getCleanStateObject() {\n        return {\n            wasConfirmed: false,\n            originalConsentStates: [],\n            shouldPreserveVisibleState: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.registerAgreementConfirmationComponent();\n    }\n\n    componentDidUpdate() {\n        this.handleValidationAfterConfirmationAndConsentsUpdate();\n    }\n\n    onReturn() {\n        this.handleConsentsUpdateAndCartRecalculation();\n        this.setState({shouldPreserveVisibleState: true});\n        this.props.closeAgreementConfirmationModal(this.props.modalVariant);\n    }\n\n    onConfirm() {\n        this.handleConsentsUpdateAndCartRecalculation();\n        this.setState({wasConfirmed: true, shouldPreserveVisibleState: true});\n    }\n\n    onClose() {\n        this.handleRevertConsentChanges();\n        this.setState(this.getCleanStateObject());\n        this.props.closeAgreementConfirmationModal(this.props.modalVariant);\n    }\n\n    handleRevertConsentChanges() {\n        if (!this.state.shouldPreserveVisibleState && this.state.originalConsentStates.length > 0) {\n            this.props.changeConsentState(this.state.originalConsentStates);\n        }\n    }\n\n    handleValidationAfterConfirmationAndConsentsUpdate() {\n        if (this.state.wasConfirmed && !this.props.consentProps.updatingAnyConsent) {\n            this.setState({wasConfirmed: false});\n            this.props.closeAgreementConfirmationModal(this.props.modalVariant, true);\n            this.props.validateData();\n        }\n    }\n\n    handleConsentsUpdateAndCartRecalculation() {\n        if (this.props.modalVariant === \"BONUS\") {\n            this.props.updateConsentsStates(this.props.consentProps.consentStates);\n        }\n    }\n\n    changeConsentState(data) {\n        if (data.length > 0) {\n            this.backupConsentState(data);\n            this.props.changeConsentState(data);\n        }\n    }\n\n    backupConsentState(data) {\n        data.map(consentData => {\n            if (!this.state.originalConsentStates.find(state => state.consentCode === consentData.consentCode)) {\n                this.state.originalConsentStates.push(this.props.consentProps.consentStates.find(state => state.consentCode === consentData.consentCode));\n            }\n        });\n    }\n\n    setCheckboxConsentStateWithoutRemoteCall(data) {\n        console.log(\"Locally set consents\");\n        this.changeConsentState(data);\n    }\n\n    onUpdateForSingleConsent(data) {\n        this.setCheckboxConsentStateWithoutRemoteCall(data);\n    }\n\n    getPropsForConsent(consentData) {\n        return {\n            key: consentData.consentCode + \"AGR_CONF\",\n            readOnly: this.props.descriptions.readOnly,\n            consentsWithBonusLoading: consentData.isRelatedWithBonus,\n            isUpdating: this.props.consentProps.updatingAnyConsent,\n            isMandatory: consentData.required,\n            consent: consentData,\n            state: this.props.consentProps.consentStates.filter((consentState) => (consentState.consentCode === consentData.consentCode)),\n            updating: this.props.consentProps.updatingConsents[consentData.consentCode],\n            onChange: this.changeConsentState.bind(this),\n            onUpdate: this.onUpdateForSingleConsent.bind(this),\n            formInputType: \"CHECKBOX\",\n            id: \"AGR_CONF\"\n        };\n    }\n\n    renderConsentsSection(list) {\n        return !!list && list.length > 0 ? (\n            <div>\n                <ul className=\"opl-agreements-list u-no-margin\">\n                    {list.map((consent) => <MulticartSingleConsentRow {...this.getPropsForConsent(consent)}\n                                                                      descriptions={this.props.descriptions}\n                                                                      isDeliveryStep=\"false\"\n                                                                      consents={this.props.consentProps.consents}\n                                                                      consentStates={this.props.consentProps.consentStates}/>)}\n                </ul>\n            </div>\n        ) : \"\";\n    }\n\n    getConsentListToRender() {\n        switch(this.props.modalVariant) {\n            case \"BONUS\":\n                return this.props.consentProps.consents.filter(consent => consent.isRelatedWithBonus);\n            case \"BIGZONK\":\n                return this.props.bigAndZonkConsents;\n            default:\n                return [];\n        }\n    }\n\n    getTitle() {\n        switch(this.props.modalVariant) {\n            case \"BONUS\":\n                return this.props.descriptions.titleBonus;\n            case \"BIGZONK\":\n                return this.props.descriptions.titleBigZonk;\n            default:\n                return \"\";\n        }\n    }\n\n    getDescription() {\n        switch(this.props.modalVariant) {\n            case \"BONUS\":\n                return this.getInvoiceDescription();\n            case \"BIGZONK\":\n                return this.props.descriptions.descriptionBigZonk;\n            default:\n                return \"\";\n        }\n    }\n\n    getInvoiceDescription() {\n        const emailPrefix = this.props.invoiceMapping !== 'invoiceEmail' || (this.props.invoiceEmail && this.props.invoiceEmail.length > 0) ? 'FilledEmail' : '';\n        const key = 'descriptionBonus' + emailPrefix;\n        return this.props.descriptions[key];\n    }\n\n    render() {\n        return (\n            <OraModal onClose={this.onClose.bind(this)}\n                      open={this.props.showAgreementConfirmationModal}\n                      id={\"agreementConfirmationModal\"}\n                      showClose={true}\n                      escapeClose={false}\n                      clickClose={false}\n                      size=\"narrow\">\n                <div className=\"u-padding-left-m\">\n                    <div className=\"l-row\">\n                        <div className=\"l-col l-col-12 u-no-spacing u-padding-top-l\">\n                            <div className=\"opl-msg--box validation message\"\n                                 dangerouslySetInnerHTML={{__html: this.getTitle()}}/>\n                        </div>\n                    </div>\n                    <div className=\"l-row\">\n                        <div className=\"l-col l-col-12 u-no-spacing u-padding-l\">\n                            <div className=\"opl-msg--box validation message\"\n                                 dangerouslySetInnerHTML={{__html: this.getDescription()}}/>\n                        </div>\n                    </div>\n                    {this.renderConsentsSection(this.getConsentListToRender())}\n                    <div className=\"l-row u-padding-l\">\n                        <div className=\"l-col l-col-small-6 l-col-4 medium-offset-by-4 large-offset-by-4\">\n                            <OraButton onClick={this.onReturn.bind(this)} type=\"secondary\" size=\"medium\"\n                                       className=\"u-w-100\">Wróć</OraButton>\n                        </div>\n                        <div className=\"l-col l-col-small-6 l-col-4 \">\n                            <OraButton onClick={this.onConfirm.bind(this)} type=\"primary\" size=\"medium\"\n                                       className=\"u-w-100\">Potwierdź</OraButton>\n                        </div>\n                    </div>\n                </div>\n            </OraModal>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    showAgreementConfirmationModal: getShowAgreementConfirmationModal(state),\n    modalVariant: getAgreementConfirmationModalVariant(state),\n    consentProps: getConsentsProps(state),\n    bigAndZonkConsents: getBigAndZonkConsents(state),\n    invoiceEmail: getInvoiceEmail(state),\n    invoiceMapping: getInvoiceEmailMapping(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    closeAgreementConfirmationModal: (modalVariant, wasConfirmed) => dispatch(closeAgreementConfirmationModal(modalVariant, wasConfirmed)),\n    registerAgreementConfirmationComponent: () => dispatch(registerAgreementConfirmationComponent()),\n    updateConsentsStates: (data) => dispatch(updateConsentsStates(data)),\n    changeConsentState: (data) => dispatch(changeConsentState(data)),\n    validateData: () => dispatch(validateData())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MulticartAgreementConfirmationModal);"],
    "file": "MulticartAgreementConfirmationModal.js"
}