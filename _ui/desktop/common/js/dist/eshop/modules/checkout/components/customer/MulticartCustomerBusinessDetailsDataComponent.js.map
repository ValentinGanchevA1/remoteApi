{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/checkout/components/customer/MulticartCustomerBusinessDetailsDataComponent.jsx"],
    "names": ["MulticartCustomerBusinessDetailsView", "name", "validationDisabled", "props", "disabled", "params", "value", "errors", "onBlur", "handleChange", "bind", "onChange", "label", "descriptions", "labelType", "valid", "isValidField", "validate", "id", "changeCustomerDataFormField", "fieldValue", "fieldErrors", "length", "undefined", "getPropsForInput", "mask", "placeholder", "handleNipChange", "isSalesOfGoodsOnly", "nip", "refs", "clearFocus", "requestBpgData", "changeCustomerRegonFormField", "handleRegonChange", "requestCartCustomerData", "handleSelectChange", "withEmptyOption", "getDescription", "className", "emptyOption", "description", "hidden", "labelName", "dateMask", "dateValue", "test", "isNaN", "Date", "parse", "dateObject", "toISOString", "split", "propName", "values", "map", "option", "code", "current", "dd", "getDate", "mm", "getMonth", "yyyy", "getFullYear", "getPropsForNip", "getPropsForRegon", "legalForm", "getPropsForSelect", "getOptionsFromState", "statusAndDateFromBpg", "registrationDate", "handleDateChange", "handleDateBlur", "disabledWeekDays", "companyStatus", "Component", "propTypes", "companyName", "PropTypes", "string", "regon", "readOnly", "bool", "func", "legalFormArray", "array", "companyStatusArray", "legalFormLabel", "companyStatusLabel", "defaultProps", "MulticartCustomerBusinessDetailsDataComponent", "getCustomerDataForm"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component, PropTypes} from \"react\";\nimport LabeledInput from \"eshop/modules/core/components/hoc/LabeledInput\";\nimport ErrorRow from \"eshop/modules/core/components/hoc/ErrorRow\";\nimport {connect} from \"react-redux\";\nimport {getCustomerDataForm} from \"../../selectors\";\nimport {changeCustomerDataFormField, changeCustomerRegonFormField} from \"../../actions/app\";\nimport {requestCartCustomerData, requestBpgData} from \"../../actions/data\";\nimport {isFieldDisabledForValidation, isFieldDisabled} from \"../../utils/utils\";\nimport {OraFloatingSelect} from \"eshop/components/OraCommonComponents\";\nimport {DatePicker} from \"eshop/modules/core/components/ui/Datepicker\";\nimport {validateNIP} from \"eshop/modules/core/validationHelper\";\n\nexport class MulticartCustomerBusinessDetailsView extends Component {\n\n    getPropsForInput(name) {\n        const validationDisabled = isFieldDisabledForValidation(this.props, name);\n        const disabled = isFieldDisabled(this.props, name);\n        let params = {\n            name,\n            value: this.props[name] || \"\",\n            errors: this.props.errors && this.props.errors[name],\n            disabled: disabled,\n            onBlur: this.handleChange.bind(this, true),\n            onChange: this.handleChange.bind(this, false),\n            label: this.props.descriptions[name],\n            labelType: \"floating\"\n        };\n        const valid = this.isValidField(name);\n        if(!disabled || (!validationDisabled && !valid)) {\n            params.valid = valid;\n        }\n        return params;\n    }\n\n    handleChange(validate, {id, name, value}) {\n        this.props.changeCustomerDataFormField({id, name, value}, validate);\n    }\n\n    isValidField(name) {\n        let fieldValue = this.props[name];\n        let fieldErrors = (!!this.props.errors && !!this.props.errors[name]) ? this.props.errors[name] : [];\n        if(!fieldValue) {\n            if(fieldErrors.length === 0) {\n                return undefined;\n            } else {\n                return false;\n            }\n        } else {\n            return fieldErrors.length === 0;\n        }\n    }\n\n    getPropsForNip(name) {\n        return {\n            ...this.getPropsForInput(name),\n            mask: \"9999999999\",\n            placeholder: \"__________\",\n            onChange: this.handleNipChange.bind(this)\n        };\n    }\n\n    handleNipChange({id, name, value}) {\n        if(!this.props.isSalesOfGoodsOnly && validateNIP(value) && (this.props.nip !== value)) {\n            this.props.changeCustomerDataFormField({id, name, value});\n            this.refs.nip.clearFocus();\n            this.props.requestBpgData(value);\n        } else {\n            this.props.changeCustomerDataFormField({id, name, value}, false);\n        }\n    }\n\n    handleRegonChange(validate, {id, name, value}) {\n        this.props.changeCustomerRegonFormField({id, name, value}, validate, this.props.isSalesOfGoodsOnly);\n    }\n\n    getPropsForRegon(name) {\n        return {\n            ...this.getPropsForInput(name),\n            mask: \"99999999999999\",\n            placeholder: \"\",\n            onChange: this.handleRegonChange.bind(this, false),\n            onBlur: this.handleRegonChange.bind(this, true)\n        };\n    }\n\n    componentDidMount() {\n        this.props.requestCartCustomerData();\n    }\n\n    handleSelectChange({id, name, value}){\n        this.props.changeCustomerDataFormField({id, name, value});\n    }\n\n    getPropsForSelect(name) {\n        return {\n            name,\n            id: name,\n            onChange: this.handleSelectChange.bind(this),\n            withEmptyOption: true,\n            label: this.getDescription(name),\n            disabled: isFieldDisabled(this.props, name),\n            className: !!this.props[name] ? \"u-w-100 is-not-empty\" : \"u-w-100\",\n            value: this.props[name],\n            emptyOption: {\n                value: \"\",\n                description: \"\",\n                hidden: true,\n                disabled: false\n            }\n        };\n    }\n\n    getDescription(name) {\n        let labelName = name + \"Label\";\n        return this.props.descriptions[name] || this.props[labelName];\n    }\n\n    handleDateChange(name, {value}) {\n        this.props.changeCustomerDataFormField({\n            id: name,\n            name: name,\n            value: value\n        });\n    }\n\n    handleDateBlur(name, {value}) {\n        const dateMask=/^[\\d_]{4}-[\\d_]{2}-[\\d_]{2}$/;\n        let dateValue = \"\";\n        if(dateMask.test(value) && !isNaN(Date.parse(value))) {\n            const dateObject = new Date(Date.parse(value));\n            dateValue = dateObject.toISOString().split('T')[0];\n        }\n        this.props.changeCustomerDataFormField({\n            id: name,\n            name: name,\n            value: dateValue\n        });\n    }\n\n    getOptionsFromState(name) {\n        let propName = name + \"Array\";\n        let values = this.props[propName] || [];\n        return values.map(option => ({\n                value: option.code,\n                description: option.description,\n                hidden: false,\n                disabled: false\n            })\n        );\n    }\n\n    getCurrentDate() {\n        let current = new Date();\n        let dd = current.getDate();\n        let mm = current.getMonth()+1;\n        let yyyy = current.getFullYear();\n        if(dd < 10) {\n            dd = '0'+dd;\n        }\n        if(mm < 10) {\n            mm = '0'+mm;\n        }\n        return yyyy+\"-\"+mm+\"-\"+dd;\n    }\n\n    render() {\n        return (\n            <div className=\"l-row u-no-margin-top\">\n                <div className=\"l-col l-col-small-6 l-col-medium-6 l-col-6\">\n                    <LabeledInput {...this.getPropsForNip(\"nip\")} ref=\"nip\"/>\n                </div>\n                <div className=\"l-col l-col-small-6 l-col-medium-6 l-col-6\">\n                    <LabeledInput {...this.getPropsForRegon(\"regon\")}/>\n                </div>\n                <div className=\"l-col l-col-small-12 l-col-medium-12 l-col-12 u-spacing-top-l\">\n                    <ErrorRow errors={this.props.errors && this.props.errors.legalForm}>\n                        <OraFloatingSelect {...this.getPropsForSelect('legalForm')} options={this.getOptionsFromState('legalForm')}/>\n                    </ErrorRow>\n                </div>\n                <div className=\"l-col l-col-small-12 l-col-medium-12 l-col-12 u-spacing-top-l  u-spacing-l\">\n                    <LabeledInput {...this.getPropsForInput(\"companyName\")}/>\n                </div>\n                {!this.props.isSalesOfGoodsOnly && !this.props.statusAndDateFromBpg &&\n                    <div className=\"l-col l-col-small-6 l-col-medium-6 l-col-6\">\n                        <ErrorRow errors={this.props.errors && this.props.errors.registrationDate}>\n                            <DatePicker id=\"registrationDate\" name=\"registrationDate\"\n                                onChange={this.handleDateChange.bind(this, \"registrationDate\")}\n                                onBlur={this.handleDateBlur.bind(this, \"registrationDate\")}\n                                value={this.props.registrationDate || \"\"}\n                                disabled={isFieldDisabled(this.props, \"registrationDate\")}\n                                mask=\"9999-99-99\" placeholder=\"____-__-__\"\n                                options={{\n                                    disabledWeekDays: []//, maxDate: this.getCurrentDate()\n                                }}\n                                floatingLabel=\"Data zarejestrowania\"/>\n                        </ErrorRow>\n                    </div>\n                }\n                {!this.props.isSalesOfGoodsOnly && !this.props.statusAndDateFromBpg &&\n                    <div className=\"l-col l-col-small-6 l-col-medium-6 l-col-6\">\n                        <ErrorRow errors={this.props.errors && this.props.errors.companyStatus}>\n                            <OraFloatingSelect {...this.getPropsForSelect('companyStatus')} options={this.getOptionsFromState('companyStatus')}/>\n                        </ErrorRow>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nMulticartCustomerBusinessDetailsView.propTypes = {\n    companyName: PropTypes.string,\n    nip: PropTypes.string,\n    regon: PropTypes.string,\n    readOnly: PropTypes.bool,\n    requestCartCustomerData: PropTypes.func,\n    changeCustomerDataFormField: PropTypes.func,\n    legalFormArray: PropTypes.array,\n    companyStatusArray: PropTypes.array,\n    legalFormLabel: PropTypes.string,\n    companyStatusLabel: PropTypes.string\n};\n\nMulticartCustomerBusinessDetailsView.defaultProps = {\n    legalFormLabel: \"Forma prawna\",\n    companyStatusLabel : \"Status firmy\"\n};\n\nconst MulticartCustomerBusinessDetailsDataComponent = connect(\n        getCustomerDataForm,\n        {changeCustomerDataFormField, changeCustomerRegonFormField, requestCartCustomerData, requestBpgData}\n    )(MulticartCustomerBusinessDetailsView);\nexport default MulticartCustomerBusinessDetailsDataComponent;\n"],
    "file": "MulticartCustomerBusinessDetailsDataComponent.js"
}