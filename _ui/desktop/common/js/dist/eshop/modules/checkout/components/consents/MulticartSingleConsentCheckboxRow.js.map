{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/checkout/components/consents/MulticartSingleConsentCheckboxRow.jsx"],
    "names": ["renderCount", "MulticartSingleConsentCheckboxRow", "props", "state", "showModal", "descriptionExpanded", "selectedConsentCode", "consents", "length", "allSelected", "positiveState", "selectedPositive", "selectedConsent", "find", "con", "consentCode", "states", "positive", "msisdns", "forEach", "ba", "consentStates", "consentState", "bundleNo", "undefined", "stateCode", "code", "isBundleAssigmentsAllSelected", "uncheckBundleAssigmentsAllConsents", "acceptBundleAssigmentsAllConsents", "onBundleAssigmentChangeCallback", "getConsentMapping", "checkConsents", "matchingConsents", "consent", "readonly", "bundleAssignments", "bundleConsent", "push", "relatedWithBonus", "isRelatedWithBonus", "concat", "map", "consentPositiveState", "consentNegativeState", "bundleAssignment", "title", "shouldNotAddExpander", "isChecked", "checked", "onChange", "agreeAllBundleAssigmentsCheckboxChange", "bind", "labelClassName", "text", "prepareCheckboxText", "boldLabel", "showTitle", "nameSuffix", "s", "bundleState", "a", "actualConsentValue", "errorInput", "consentsErrorList", "isMandatory", "description", "name", "key", "label", "readOnly", "consentsWithBonusLoading", "isUpdating", "value", "onStateChange", "inputClassName", "onChangeCallback", "data", "onUpdate", "defaultState", "isDefault", "msisdn", "factoryType", "FactoryType", "FIX", "substring", "businessImplicationsElement", "getPropsForCheckbox", "entry", "getMsisdnCheckBoxRow", "formatMsisdn", "showNotAddExpander", "prepareDescriptionExpander", "smallPaddings", "mediumPaddings", "largePaddings", "id", "getPropsForBACheckbox", "__html", "renderMsisdnMatrix", "React", "Component"],
    "mappings": ";;;;;;;AAAA;AAGA;AACA;;;;;;AAGA,MAAIA,WAAW,GAAG,CAAlB;;MACqBC,iC;;;;;AACjB,+CAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACf,gCAAMA,KAAN;AACA,YAAKC,KAAL,GAAc;AAACC,QAAAA,SAAS,EAAE,KAAZ;AAAmBC,QAAAA,mBAAmB,EAAE;AAAxC,OAAd;AAFe;AAGlB;;;;oDAE6BC,mB,EAAqB;AAAA;;AAC/C,YAAI,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AAClC,iBAAO,KAAP;AACH;;AAED,YAAIC,WAAW,GAAG,IAAlB;AACA,YAAIN,KAAJ;AACA,YAAIO,aAAJ;AACA,YAAIC,gBAAJ;AACA,YAAIC,eAAe,GAAG,KAAKV,KAAL,CAAWK,QAAX,CAAoBM,IAApB,CAAyB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,WAAJ,KAAoBT,mBAAxB;AAAA,SAA5B,CAAtB;;AACA,YAAIM,eAAJ,EAAqB;AACjBF,UAAAA,aAAa,GAAGE,eAAe,CAACI,MAAhB,CAAuBH,IAAvB,CAA4B,UAACV,KAAD;AAAA,mBAAWA,KAAK,CAACc,QAAjB;AAAA,WAA5B,CAAhB;AACAL,UAAAA,eAAe,CAACM,OAAhB,CAAwBC,OAAxB,CAAgC,UAAAC,EAAE,EAAI;AAClCjB,YAAAA,KAAK,GAAG,MAAI,CAACD,KAAL,CAAWmB,aAAX,CAAyBR,IAAzB,CAA8B,UAACS,YAAD;AAAA,qBAAmBV,eAAe,CAACG,WAAhB,KAAgCO,YAAY,CAACP,WAA7C,IAA4DO,YAAY,CAACC,QAAb,KAA0BH,EAAE,CAACG,QAA5G;AAAA,aAA9B,CAAR;AACAZ,YAAAA,gBAAgB,GAAKR,KAAK,KAAKqB,SAAX,IAA0BrB,KAAK,CAACsB,SAAN,KAAoBf,aAAa,CAACgB,IAAhF;AACAjB,YAAAA,WAAW,GAAGA,WAAW,IAAIE,gBAA7B;AACH,WAJD;AAKH;;AAED,eAAOF,WAAP;AACH;;;6DAEsCM,W,EAAa;AAChD,YAAI,KAAKY,6BAAL,CAAmCZ,WAAnC,CAAJ,EAAqD;AACjD,eAAKa,kCAAL,CAAwCb,WAAxC;AACH,SAFD,MAEO;AACH,eAAKc,iCAAL,CAAuCd,WAAvC;AACH;AACJ;;;wDAEiCA,W,EAAa;AAC3C,aAAKe,+BAAL,CAAqC,KAAKC,iBAAL,CAAuBhB,WAAvB,EAAoC,IAApC,CAArC;AACH;;;yDAEkCA,W,EAAa;AAC5C,aAAKe,+BAAL,CAAqC,KAAKC,iBAAL,CAAuBhB,WAAvB,EAAoC,KAApC,CAArC;AACH;;;wCAEiBA,W,EAAaiB,a,EAAe;AAC1C,YAAIC,gBAAgB,GAAG,EAAvB;AACA,YAAIC,OAAO,GAAG,KAAKhC,KAAL,CAAWK,QAAX,CAAoBM,IAApB,CAAyB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,WAAJ,KAAoBA,WAAxB;AAAA,SAA5B,CAAd;;AACA,YAAImB,OAAJ,EAAa;AACT,cAAI,CAACA,OAAO,CAACC,QAAb,EAAuB;AACnB,gBAAIV,SAAS,GAAGO,aAAa,GAAGE,OAAO,CAAClB,MAAR,CAAeH,IAAf,CAAoB,UAACV,KAAD;AAAA,qBAAWA,KAAK,CAACc,QAAjB;AAAA,aAApB,EAA+CS,IAAlD,GAAyD,IAAtF;;AACA,gBAAI,CAACQ,OAAO,CAACE,iBAAT,IAA8BF,OAAO,CAACE,iBAAR,CAA0B5B,MAA1B,KAAqC,CAAvE,EAA0E;AACtE,kBAAI,CAAC,CAAC0B,OAAO,CAAChB,OAAV,IAAqBgB,OAAO,CAAChB,OAAR,CAAgBV,MAAhB,GAAyB,CAAlD,EAAqD;AACjD0B,gBAAAA,OAAO,CAAChB,OAAR,CAAgBC,OAAhB,CAAwB,UAAAkB,aAAa,EAAI;AACrCJ,kBAAAA,gBAAgB,CAACK,IAAjB,CAAsB;AAClBvB,oBAAAA,WAAW,EAAEmB,OAAO,CAACnB,WADH;AAElBQ,oBAAAA,QAAQ,EAAEc,aAAa,CAACd,QAFN;AAGlBE,oBAAAA,SAAS,EAAEA,SAHO;AAIlBc,oBAAAA,gBAAgB,EAAEL,OAAO,CAACM;AAJR,mBAAtB;AAMH,iBAPD;AAQH,eATD,MASO;AACHP,gBAAAA,gBAAgB,CAACK,IAAjB,CAAsB;AAClBvB,kBAAAA,WAAW,EAAEmB,OAAO,CAACnB,WADH;AAElBQ,kBAAAA,QAAQ,EAAE,IAFQ;AAGlBE,kBAAAA,SAAS,EAAEA,SAHO;AAIlBc,kBAAAA,gBAAgB,EAAEL,OAAO,CAACM;AAJR,iBAAtB;AAMH;AACJ,aAlBD,MAkBO;AACHP,cAAAA,gBAAgB,GAAGA,gBAAgB,CAACQ,MAAjB,CACfP,OAAO,CAACE,iBAAR,CAA0BM,GAA1B,CAA8B,UAAAtB,EAAE;AAAA,uBAAK;AACjCL,kBAAAA,WAAW,EAAEmB,OAAO,CAACnB,WADY;AAEjCQ,kBAAAA,QAAQ,EAAEH,EAAE,CAACG,QAFoB;AAGjCE,kBAAAA,SAAS,EAAEA,SAHsB;AAIjCc,kBAAAA,gBAAgB,EAAEL,OAAO,CAACM;AAJO,iBAAL;AAAA,eAAhC,CADe,CAAnB;AAQH;AACJ;AACJ;;AACD,eAAOP,gBAAP;AACH;;;4CAEqBU,oB,EAAsBC,oB,EAAsBC,gB,EAAkBC,K,EAAOC,oB,EAAsB;AAC7G,YAAIC,SAAS,GAAG,KAAKrB,6BAAL,CAAmC,KAAKzB,KAAL,CAAWgC,OAAX,CAAmBnB,WAAtD,CAAhB;AACA,eAAO;AACHkC,UAAAA,OAAO,EAAED,SADN;AAEHE,UAAAA,QAAQ,EAAE,KAAKC,sCAAL,CAA4CC,IAA5C,CAAiD,IAAjD,EAAuD,KAAKlD,KAAL,CAAWgC,OAAX,CAAmBnB,WAA1E,CAFP;AAGHsC,UAAAA,cAAc,EAAE,8CAHb;AAIHC,UAAAA,IAAI,EAAE,KAAKC,mBAAL,CAAyBT,KAAzB,EAAgCC,oBAAhC;AAJH,SAAP;AAOH;;;0CAEmBJ,oB,EAAsBC,oB,EAAsBC,gB,EAAkBW,S,EAAWC,S,EAAW;AACpG,YAAMC,UAAU,GAAG,CAAC,CAACb,gBAAF,GAAsB,MAAMA,gBAAgB,CAACtB,QAA7C,GAAyD,EAA5E;AACA,YAAID,YAAJ;;AACA,YAAI,CAAC,CAACuB,gBAAN,EAAwB;AACpBvB,UAAAA,YAAY,GAAG,KAAKpB,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,IAAjB,CAAsB,UAAA8C,CAAC;AAAA,mBAAIA,CAAC,CAACpC,QAAF,KAAesB,gBAAgB,CAACtB,QAApC;AAAA,WAAvB,CAAnC;AACH,SAFD,MAEO;AACHD,UAAAA,YAAY,GAAG,KAAKpB,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,IAAjB,CAAsB,UAAA8C,CAAC;AAAA,mBAAI,CAACA,CAAC,CAACpC,QAAP;AAAA,WAAvB,CAAnC;AACH;;AACD,YAAI0B,OAAO,GAAG,KAAd;;AACA,YAAI,CAAC,CAAC,KAAK/C,KAAL,CAAWC,KAAb,IAAsB,KAAKD,KAAL,CAAWC,KAAX,CAAiBK,MAAjB,KAA4B,CAAtD,EAAyD;AACrD,cAAI,CAAC,CAACqC,gBAAN,EAAwB;AACpB,gBAAIe,WAAW,GAAG,KAAK1D,KAAL,CAAWC,KAAX,CAAiBU,IAAjB,CAAsB,UAAA8C,CAAC;AAAA,qBAAIA,CAAC,CAACpC,QAAF,KAAesB,gBAAgB,CAACtB,QAApC;AAAA,aAAvB,CAAlB;AACA0B,YAAAA,OAAO,GAAG,CAAC,CAACW,WAAF,IAAkBA,WAAW,CAACnC,SAAZ,IAAyBkB,oBAAoB,CAACjB,IAA1E;AACH,WAHD,MAGO;AACHuB,YAAAA,OAAO,GAAG,KAAK/C,KAAL,CAAWC,KAAX,CAAiBU,IAAjB,CAAsB,UAAAgD,CAAC;AAAA,qBAAIA,CAAJ;AAAA,aAAvB,EAA8BpC,SAA9B,IAA2CkB,oBAAoB,CAACjB,IAA1E;AACH;AACJ;;AAED,YAAIoC,kBAAkB,GAAGxC,YAAY,GACjCA,YAAY,CAACG,SADoB,GAE/B,KAAKvB,KAAL,CAAWgC,OAAX,CAAmBlB,MAAnB,CAA0BH,IAA1B,CAA+B,UAACV,KAAD;AAAA,iBAAW,CAACA,KAAK,CAACc,QAAlB;AAAA,SAA/B,EAA2DS,IAFjE;AAGA,YAAIqC,UAAU,GAAG,KAAK7D,KAAL,CAAW8D,iBAAX,IAAgC,KAAK9D,KAAL,CAAW+D,WAA3C,KAA2D,CAAC,KAAK/D,KAAL,CAAWC,KAAZ,IAAqB,KAAKD,KAAL,CAAWC,KAAX,CAAiBK,MAAjB,IAAyB,CAA9C,IAAmD,CAAC,KAAKN,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBsB,SAAnI,CAAjB;AACA,YAAIqB,KAAK,GAAC,KAAK5C,KAAL,CAAWgC,OAAX,CAAmBY,KAA7B;;AACA,YAAG,CAACW,SAAJ,EAAc;AACVX,UAAAA,KAAK,GAAC,KAAK5C,KAAL,CAAWgC,OAAX,CAAmBgC,WAAzB;AACAV,UAAAA,SAAS,GAAC,KAAV;AACF;;AACF,eAAO;AACHW,UAAAA,IAAI,EAAE,KAAKjE,KAAL,CAAWgC,OAAX,CAAmBnB,WAAnB,GAAiC2C,UADpC;AAEHU,UAAAA,GAAG,EAAED,IAFF;AAGHb,UAAAA,IAAI,EAAE,KAAKC,mBAAL,CAAyB,CAAC,CAACV,gBAAF,GAAqBA,gBAAgB,CAACwB,KAAtC,GAA8CvB,KAAvE,EAA8E,CAACW,SAAD,IAAe,KAAKvD,KAAL,CAAWgC,OAAX,CAAmBhB,OAAnB,IAA8B,KAAKhB,KAAL,CAAWgC,OAAX,CAAmBhB,OAAnB,CAA2BV,MAA3B,GAAkC,CAA7J,CAHH;AAIH6C,UAAAA,cAAc,EAAE,sCAAsCG,SAAS,GAAG,EAAH,GAAQ,eAAvD,CAJb;AAKHc,UAAAA,QAAQ,EAAG,KAAKpE,KAAL,CAAWgC,OAAX,CAAmBC,QAAnB,IAAgC,KAAKjC,KAAL,CAAWqE,wBAAX,IAAuC,KAAKrE,KAAL,CAAWsE,UAL1F;AAMHC,UAAAA,KAAK,EAAEX,kBANJ;AAOHb,UAAAA,OAAO,EAAEA,OAPN;AAQHC,UAAAA,QAAQ,EAAE,KAAKwB,aAAL,CAAmBtB,IAAnB,CAAwB,IAAxB,EAA8BU,kBAA9B,EAAkDnB,oBAAlD,EAAwEC,oBAAxE,EAA8FC,gBAA9F,CARP;AASH8B,UAAAA,cAAc,EAAE,CAAC,CAACZ,UAAF,GAAe,QAAf,GAA0B;AATvC,SAAP;AAWH;;;oCAEaD,kB,EAAoBnB,oB,EAAsBC,oB,EAAsBC,gB,EAAkB;AAC5F,YAAMtB,QAAQ,GAAG,CAAC,CAACsB,gBAAF,GAAqBA,gBAAgB,CAACtB,QAAtC,GAAiD,IAAlE;AACA,aAAKqD,gBAAL,CAAsB;AAClB7D,UAAAA,WAAW,EAAE,KAAKb,KAAL,CAAWgC,OAAX,CAAmBnB,WADd;AAElBU,UAAAA,SAAS,EAAEqC,kBAAkB,KAAKlB,oBAAoB,CAAClB,IAA5C,GAAmDiB,oBAAoB,CAACjB,IAAxE,GAA+EkB,oBAAoB,CAAClB,IAF7F;AAGlBH,UAAAA,QAAQ,EAAEA;AAHQ,SAAtB;AAMH;;;uCAEgBsD,I,EAAM;AACnB,YAAI,KAAK3E,KAAL,CAAWqE,wBAAf,EAAyC;AACrC,eAAKrE,KAAL,CAAW4E,QAAX,CAAoB,CAACD,IAAD,CAApB;AACH,SAFD,MAGK;AACD,eAAK3E,KAAL,CAAWgD,QAAX,CAAoB,CAAC2B,IAAD,CAApB;AACH;AACJ;;;sDAE+BA,I,EAAM;AAClC,YAAI,KAAK3E,KAAL,CAAWqE,wBAAf,EAAyC;AACrC,eAAKrE,KAAL,CAAW4E,QAAX,CAAoBD,IAApB;AACH,SAFD,MAGK;AACD,eAAK3E,KAAL,CAAWgD,QAAX,CAAoB2B,IAApB;AACH;AACJ;;;yCAEkB;AACf,YAAIE,YAAY,GAAG,KAAK7E,KAAL,CAAWgC,OAAX,CAAmBlB,MAAnB,CAA0BH,IAA1B,CAA+B,UAACV,KAAD;AAAA,iBAAWA,KAAK,CAAC6E,SAAjB;AAAA,SAA/B,CAAnB;AACA,eAAOD,YAAY,GAAGA,YAAY,CAACrD,IAAhB,GAAuB,KAA1C;AACH;;;mCAEYuD,M,EAAQC,W,EAAa;AAC9B,YAAI,CAAC,CAACD,MAAF,IAAYA,MAAM,CAACzE,MAAP,KAAkB,CAAlC,EAAqC;AACjC,kBAAQ0E,WAAR;AACI,iBAAKC,yBAAYC,GAAjB;AACI,qBAAOH,MAAM,CAACI,SAAP,CAAiB,CAAjB,EAAoB,CAApB,IAAyB,GAAzB,GAA+BJ,MAAM,CAACI,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAA/B,GAAwD,GAAxD,GAA8DJ,MAAM,CAACI,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAA9D,GAAuF,GAAvF,GAA6FJ,MAAM,CAACI,SAAP,CAAiB,CAAjB,EAAoBJ,MAAM,CAACzE,MAA3B,CAApG;;AACJ;AACI,qBAAOyE,MAAM,CAACI,SAAP,CAAiB,CAAjB,EAAoB,CAApB,IAAyB,GAAzB,GAA+BJ,MAAM,CAACI,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAA/B,GAAwD,GAAxD,GAA8DJ,MAAM,CAACI,SAAP,CAAiB,CAAjB,EAAoBJ,MAAM,CAACzE,MAA3B,CAArE;AAJR;AAMH,SAPD,MAOO;AACH,iBAAOyE,MAAP;AACH;AACJ;;;2CAEoBtC,oB,EAAsBC,oB,EAAsBxB,E,EAAIkE,2B,EAA6B;AAC9F,4BACI;AAAU,UAAA,SAAS,EAAC;AAApB,wBACI,6BAAC,sCAAD,EAAuB,KAAKC,mBAAL,CAAyB5C,oBAAzB,EAA+CC,oBAA/C,EAAqExB,EAArE,EAAyE,KAAzE,EAAgF,IAAhF,CAAvB,CADJ,CADJ;AAKH;;;yCAEkBuB,oB,EAAsBC,oB,EAAsB;AAAA;;AAC3D,eACI,KAAK1C,KAAL,CAAWgC,OAAX,CAAmBhB,OAAnB,IAA8B,KAAKhB,KAAL,CAAWgC,OAAX,CAAmBhB,OAAnB,CAA2BV,MAA3B,GAAoC,CAAlE,gBACI;AAAK,UAAA,SAAS,EAAC;AAAf,WACK,KAAKN,KAAL,CAAWgC,OAAX,CAAmBhB,OAAnB,CAA2BwB,GAA3B,CAA+B,UAAA8C,KAAK,EAAI;AACrC,iBAAO,MAAI,CAACC,oBAAL,CAA0B9C,oBAA1B,EAAgDC,oBAAhD,EAAsE;AACzErB,YAAAA,QAAQ,EAAEiE,KAAK,CAACjE,QADyD;AAEzE8C,YAAAA,KAAK,EAAE,+BAA+B,MAAI,CAACqB,YAAL,CAAkBF,KAAK,CAACP,MAAxB,EAAgCO,KAAK,CAACN,WAAtC;AAFmC,WAAtE,CAAP;AAIH,SALA,CADL,CADJ,GAUI,EAXR;AAaH;;;0CAEmB5B,I,EAAMqC,kB,EAAoB;AAC1C,YAAGA,kBAAH,EAAsB;AAClB,8BAAQ,2CAAOrC,IAAP,CAAR;AACH,SAFD,MAEK;AACL,8BACI,wDAAM;AAAM,YAAA,SAAS,EAAC;AAAhB,aAAiDA,IAAjD,CAAN,eAAmE;AAC/D,YAAA,SAAS,EAAC;AADqD,aACG,KAAKsC,0BAAL,EADH,CAAnE,CADJ;AAGC;AACJ;;;mDAE4B;AACzB,YAAIC,aAAa,GAAG,iDAApB;AACA,YAAIC,cAAc,GAAG,yBAArB;AACA,YAAIC,aAAa,GAAG,wBAApB;AACA,4BAAQ;AAAG,UAAA,SAAS,EAAE,uEAAuEF,aAAvE,GAAuFC,cAAvF,GAAwGC,aAAtH;AACG,UAAA,IAAI,EAAC,GADR;AAEG,UAAA,EAAE,EAAE,KAAK7F,KAAL,CAAWgC,OAAX,CAAmBnB,WAAnB,GAAiC,KAAKb,KAAL,CAAW8F,EAA5C,GAAiD,UAFxD;AAGG,UAAA,IAAI,EAAC,KAHR;AAIG,2BAAe,KAAK9F,KAAL,CAAWgC,OAAX,CAAmBnB,WAAnB,GAAiC,KAAKb,KAAL,CAAW8F,EAA5C,GAAiD,MAJnE;AAKG,2BAAc;AALjB,wBAMJ;AAAM,UAAA,SAAS,EAAC;AAAhB,uBANI,eAOJ;AAAM,UAAA,SAAS,EAAC;AAAhB,yBAPI,CAAR;AASH;;;+BAEQ;AACL,YAAIrD,oBAAoB,GAAG,KAAKzC,KAAL,CAAWgC,OAAX,CAAmBlB,MAAnB,CAA0BH,IAA1B,CAA+B,UAACV,KAAD;AAAA,iBAAWA,KAAK,CAACc,QAAjB;AAAA,SAA/B,CAA3B;AACA,YAAI2B,oBAAoB,GAAG,KAAK1C,KAAL,CAAWgC,OAAX,CAAmBlB,MAAnB,CAA0BH,IAA1B,CAA+B,UAACV,KAAD;AAAA,iBAAW,CAACA,KAAK,CAACc,QAAlB;AAAA,SAA/B,CAA3B;AACA,4BACI;AAAQ,UAAA,SAAS,EAAC;AAAlB,WACK,CAAC,CAAC,KAAKf,KAAL,CAAWgC,OAAX,CAAmBhB,OAApB,IAA+B,KAAKhB,KAAL,CAAWgC,OAAX,CAAmBhB,OAAnB,IAA8B,IAA7D,IAAqE,KAAKhB,KAAL,CAAWgC,OAAX,CAAmBhB,OAAnB,CAA2BV,MAA3B,IAAqC,CAA3G,kBACA,6BAAC,sCAAD,EAAuB,KAAK+E,mBAAL,CAAyB5C,oBAAzB,EAA+CC,oBAA/C,EAAqE,IAArE,EAA2E,IAA3E,EAAiF,KAAK1C,KAAL,CAAWuD,SAA5F,CAAvB,CAFL,EAIM,KAAKvD,KAAL,CAAWgC,OAAX,CAAmBhB,OAAnB,IAA8B,KAAKhB,KAAL,CAAWgC,OAAX,CAAmBhB,OAAnB,CAA2BV,MAA3B,GAAoC,CAAnE,iBACD,6BAAC,sCAAD,EAAuB,KAAKyF,qBAAL,CAA2BtD,oBAA3B,EAAiDC,oBAAjD,EAAuE,IAAvE,EAA6E,KAAK1C,KAAL,CAAWgC,OAAX,CAAmBY,KAAhG,EAAuG,KAAvG,CAAvB,CALJ,eAOI,6BAAC,4CAAD,2BAAyC,KAAK5C,KAA9C;AAAqD,UAAA,SAAS,EAAE;AAAhE,WAPJ,EAQK,KAAKA,KAAL,CAAWuD,SAAX,iBAAwB;AAAM,UAAA,SAAS,EAAC;AAAhB,WAA8C,KAAKmC,0BAAL,EAA9C,CAR7B,EASK,KAAK1F,KAAL,CAAWuD,SAAX,iBACA;AAAK,UAAA,SAAS,EAAC,8DAAf;AACI,UAAA,EAAE,EAAE,KAAKvD,KAAL,CAAWgC,OAAX,CAAmBnB,WAAnB,GAAiC,KAAKb,KAAL,CAAW8F,EAA5C,GAAiD,MADzD;AACiE,yBAAY,OAD7E;AACqF,UAAA,IAAI,EAAC,UAD1F;AAEI,6BAAiB,KAAK9F,KAAL,CAAWgC,OAAX,CAAmBnB,WAAnB,GAAiC,KAAKb,KAAL,CAAW8F,EAA5C,GAAiD;AAFtE,wBAGG;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI;AAAG,UAAA,uBAAuB,EAAE;AAACE,YAAAA,MAAM,EAAE,KAAKhG,KAAL,CAAWgC,OAAX,CAAmBgC;AAA5B;AAA5B,UADJ,EAEM,KAAKhE,KAAL,CAAWgC,OAAX,CAAmBhB,OAAnB,IAA8B,KAAKhB,KAAL,CAAWgC,OAAX,CAAmBhB,OAAnB,CAA2BV,MAA3B,GAAoC,CAAnE,iBACD,6BAAC,sCAAD,EAAuB,KAAKyF,qBAAL,CAA2BtD,oBAA3B,EAAiDC,oBAAjD,EAAuE,IAAvE,EAA6E,mDAA7E,EAAkI,IAAlI,CAAvB,CAHJ,EAKK,KAAKuD,kBAAL,CAAwBxD,oBAAxB,EAA8CC,oBAA9C,CALL,CAHH,CAVL,CADJ;AAyBH;;;IAjQ0DwD,eAAMC,S",
    "sourcesContent": ["import React from \"react\";\nimport {OraSimpleCheckbox} from \"eshop/components/OraCommonComponents\";\nimport {Expander, Trigger, Section} from \"eshop/modules/core/components/ui/Expander\";\nimport MulticartConsentValidationComponent from \"eshop/modules/checkout/components/MulticartConsentValidationComponent\";\nimport FactoryType from \"eshop/modules/core/constants/FactoryTypeEnum\";\nimport {OraSimpleRadio, OraButton, OraLoader} from \"eshop/components/OraCommonComponents\";\n\nlet renderCount = 0;\nexport default class MulticartSingleConsentCheckboxRow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ({showModal: false, descriptionExpanded: false});\n    }\n\n    isBundleAssigmentsAllSelected(selectedConsentCode) {\n        if (this.props.consents.length === 0) {\n            return false;\n        }\n\n        let allSelected = true;\n        let state;\n        let positiveState;\n        let selectedPositive;\n        let selectedConsent = this.props.consents.find(con => con.consentCode === selectedConsentCode);\n        if (selectedConsent) {\n            positiveState = selectedConsent.states.find((state) => state.positive);\n            selectedConsent.msisdns.forEach(ba => {\n                state = this.props.consentStates.find((consentState) => (selectedConsent.consentCode === consentState.consentCode && consentState.bundleNo === ba.bundleNo));\n                selectedPositive = ((state !== undefined) && (state.stateCode === positiveState.code));\n                allSelected = allSelected && selectedPositive;\n            });\n        }\n\n        return allSelected;\n    }\n\n    agreeAllBundleAssigmentsCheckboxChange(consentCode) {\n        if (this.isBundleAssigmentsAllSelected(consentCode)) {\n            this.uncheckBundleAssigmentsAllConsents(consentCode);\n        } else {\n            this.acceptBundleAssigmentsAllConsents(consentCode);\n        }\n    }\n\n    acceptBundleAssigmentsAllConsents(consentCode) {\n        this.onBundleAssigmentChangeCallback(this.getConsentMapping(consentCode, true));\n    }\n\n    uncheckBundleAssigmentsAllConsents(consentCode) {\n        this.onBundleAssigmentChangeCallback(this.getConsentMapping(consentCode, false));\n    }\n\n    getConsentMapping(consentCode, checkConsents) {\n        let matchingConsents = [];\n        let consent = this.props.consents.find(con => con.consentCode === consentCode);\n        if (consent) {\n            if (!consent.readonly) {\n                let stateCode = checkConsents ? consent.states.find((state) => state.positive).code : null;\n                if (!consent.bundleAssignments || consent.bundleAssignments.length === 0) {\n                    if (!!consent.msisdns && consent.msisdns.length > 0) {\n                        consent.msisdns.forEach(bundleConsent => {\n                            matchingConsents.push({\n                                consentCode: consent.consentCode,\n                                bundleNo: bundleConsent.bundleNo,\n                                stateCode: stateCode,\n                                relatedWithBonus: consent.isRelatedWithBonus\n                            });\n                        })\n                    } else {\n                        matchingConsents.push({\n                            consentCode: consent.consentCode,\n                            bundleNo: null,\n                            stateCode: stateCode,\n                            relatedWithBonus: consent.isRelatedWithBonus\n                        });\n                    }\n                } else {\n                    matchingConsents = matchingConsents.concat(\n                        consent.bundleAssignments.map(ba => ({\n                            consentCode: consent.consentCode,\n                            bundleNo: ba.bundleNo,\n                            stateCode: stateCode,\n                            relatedWithBonus: consent.isRelatedWithBonus\n                        }))\n                    );\n                }\n            }\n        }\n        return matchingConsents;\n    }\n\n    getPropsForBACheckbox(consentPositiveState, consentNegativeState, bundleAssignment, title, shouldNotAddExpander) {\n        let isChecked = this.isBundleAssigmentsAllSelected(this.props.consent.consentCode);\n        return {\n            checked: isChecked,\n            onChange: this.agreeAllBundleAssigmentsCheckboxChange.bind(this, this.props.consent.consentCode),\n            labelClassName: \"u-margin-top opl-checkbox o-checkbox u-w-100\",\n            text: this.prepareCheckboxText(title, shouldNotAddExpander)\n        }\n\n    }\n\n    getPropsForCheckbox(consentPositiveState, consentNegativeState, bundleAssignment, boldLabel, showTitle) {\n        const nameSuffix = !!bundleAssignment ? (\"_\" + bundleAssignment.bundleNo) : \"\";\n        let consentState\n        if (!!bundleAssignment) {\n            consentState = this.props.state && this.props.state.find(s => s.bundleNo === bundleAssignment.bundleNo);\n        } else {\n            consentState = this.props.state && this.props.state.find(s => !s.bundleNo);\n        }\n        let checked = false;\n        if (!!this.props.state && this.props.state.length !== 0) {\n            if (!!bundleAssignment) {\n                let bundleState = this.props.state.find(s => s.bundleNo === bundleAssignment.bundleNo);\n                checked = !!bundleState && (bundleState.stateCode == consentPositiveState.code);\n            } else {\n                checked = this.props.state.find(a => a).stateCode == consentPositiveState.code;\n            }\n        }\n\n        let actualConsentValue = consentState ?\n            consentState.stateCode\n            : this.props.consent.states.find((state) => !state.positive).code;\n        let errorInput = this.props.consentsErrorList && this.props.isMandatory && (!this.props.state || this.props.state.length==0 || !this.props.state[0].stateCode);\n        let title=this.props.consent.title;\n        if(!showTitle){\n            title=this.props.consent.description;\n            boldLabel=false;\n         }\n        return {\n            name: this.props.consent.consentCode + nameSuffix,\n            key: name,\n            text: this.prepareCheckboxText(!!bundleAssignment ? bundleAssignment.label : title, !showTitle || (this.props.consent.msisdns && this.props.consent.msisdns.length>0)),\n            labelClassName: \"opl-checkbox o-checkbox u-w-100 \" + (boldLabel ? \"\" : \"u-font-normal\"),\n            readOnly: (this.props.consent.readonly || (this.props.consentsWithBonusLoading && this.props.isUpdating)),\n            value: actualConsentValue,\n            checked: checked,\n            onChange: this.onStateChange.bind(this, actualConsentValue, consentPositiveState, consentNegativeState, bundleAssignment),\n            inputClassName: !!errorInput ? \" error\" : \"\"\n        };\n    }\n\n    onStateChange(actualConsentValue, consentPositiveState, consentNegativeState, bundleAssignment) {\n        const bundleNo = !!bundleAssignment ? bundleAssignment.bundleNo : null;\n        this.onChangeCallback({\n            consentCode: this.props.consent.consentCode,\n            stateCode: actualConsentValue === consentNegativeState.code ? consentPositiveState.code : consentNegativeState.code,\n            bundleNo: bundleNo\n        });\n\n    }\n\n    onChangeCallback(data) {\n        if (this.props.consentsWithBonusLoading) {\n            this.props.onUpdate([data]);\n        }\n        else {\n            this.props.onChange([data]);\n        }\n    }\n\n    onBundleAssigmentChangeCallback(data) {\n        if (this.props.consentsWithBonusLoading) {\n            this.props.onUpdate(data);\n        }\n        else {\n            this.props.onChange(data);\n        }\n    }\n\n    defaultStateCode() {\n        var defaultState = this.props.consent.states.find((state) => state.isDefault)\n        return defaultState ? defaultState.code : false;\n    }\n\n    formatMsisdn(msisdn, factoryType) {\n        if (!!msisdn && msisdn.length === 9) {\n            switch (factoryType) {\n                case FactoryType.FIX:\n                    return msisdn.substring(0, 2) + \" \" + msisdn.substring(2, 5) + \" \" + msisdn.substring(5, 7) + \" \" + msisdn.substring(7, msisdn.length);\n                default:\n                    return msisdn.substring(0, 3) + ' ' + msisdn.substring(3, 6) + ' ' + msisdn.substring(6, msisdn.length);\n            }\n        } else {\n            return msisdn;\n        }\n    }\n\n    getMsisdnCheckBoxRow(consentPositiveState, consentNegativeState, ba, businessImplicationsElement) {\n        return (\n            <fieldset className=\"l-row u-margin-l u-large-margin\">\n                <OraSimpleCheckbox {...this.getPropsForCheckbox(consentPositiveState, consentNegativeState, ba, false, true)}/>\n            </fieldset>\n        );\n    }\n\n    renderMsisdnMatrix(consentPositiveState, consentNegativeState) {\n        return (\n            this.props.consent.msisdns && this.props.consent.msisdns.length > 0 ? (\n                <div className=\"u-padding-top-m u-margin-left-xxl\">\n                    {this.props.consent.msisdns.map(entry => {\n                        return this.getMsisdnCheckBoxRow(consentPositiveState, consentNegativeState, {\n                            bundleNo: entry.bundleNo,\n                            label: \"Zgoda dla numeru telefonu \" + this.formatMsisdn(entry.msisdn, entry.factoryType)\n                        });\n                    })\n                    }\n                </div>\n            ) : \"\"\n        );\n    }\n\n    prepareCheckboxText(text, showNotAddExpander) {\n        if(showNotAddExpander){\n            return (<span>{text}</span>);\n        }else{\n        return (\n            <span><span className=\"l-col l-col-10 u-no-padding-l\">{text}</span><span\n                className=\"l-col l-col-2 u-small-hide u-right u-padding-right-l\">{this.prepareDescriptionExpander()}</span></span>);\n        }\n    }\n\n    prepareDescriptionExpander() {\n        let smallPaddings = \" u-small-margin-left-l-xl u-small-padding-top-l\";\n        let mediumPaddings = \" u-medium-margin-left-l\";\n        let largePaddings = \" u-large-margin-left-l\";\n        return (<a className={\"u-right js-expander__trigger__nested u-inline-block u-text-nowrapl\" + smallPaddings + mediumPaddings + largePaddings}\n                   href=\"#\"\n                   id={this.props.consent.consentCode + this.props.id + \"_control\"}\n                   role=\"tab\"\n                   aria-controls={this.props.consent.consentCode + this.props.id + \"_tab\"}\n                   aria-expanded=\"true\">\n            <span className=\"js-expander__trigger--show\">Zwiń</span>\n            <span className=\"js-expander__trigger--hide\">Rozwiń</span>\n        </a>);\n    }\n\n    render() {\n        let consentPositiveState = this.props.consent.states.find((state) => state.positive);\n        let consentNegativeState = this.props.consent.states.find((state) => !state.positive);\n        return (\n            <legend className=\"js-expander__container__nested u-w-100\">\n                {(!this.props.consent.msisdns || this.props.consent.msisdns == null || this.props.consent.msisdns.length == 0) &&\n                 <OraSimpleCheckbox {...this.getPropsForCheckbox(consentPositiveState, consentNegativeState, null, true, this.props.showTitle)}/>\n                }\n                {(this.props.consent.msisdns && this.props.consent.msisdns.length > 0) &&\n                <OraSimpleCheckbox {...this.getPropsForBACheckbox(consentPositiveState, consentNegativeState, null, this.props.consent.title, false)}/>\n                }\n                <MulticartConsentValidationComponent {...this.props} className={\"u-margin-left-l-xl\"}/>\n                {this.props.showTitle && <span className=\"u-large-hide u-medium-hide\">{this.prepareDescriptionExpander()}</span>}\n                {this.props.showTitle &&\n                (<div className=\"js-expander__content__nested u-hide--soft u-margin-left-l-xl\"\n                     id={this.props.consent.consentCode + this.props.id + \"_tab\"} aria-hidden=\"false\" role=\"tabpanel\"\n                     aria-labelledby={this.props.consent.consentCode + this.props.id + \"_control\"}>\n                    <div className=\"u-padding-top-l\">\n                        <p dangerouslySetInnerHTML={{__html: this.props.consent.description}}/>\n                        {(this.props.consent.msisdns && this.props.consent.msisdns.length > 0) &&\n                        <OraSimpleCheckbox {...this.getPropsForBACheckbox(consentPositiveState, consentNegativeState, null, \"Zgoda dla wszystkich poniższych numerów telefonów\", true)}/>\n                        }\n                        {this.renderMsisdnMatrix(consentPositiveState, consentNegativeState)}\n                    </div>\n                </div>)\n              }\n            </legend>\n        );\n    }\n}\n"],
    "file": "MulticartSingleConsentCheckboxRow.js"
}