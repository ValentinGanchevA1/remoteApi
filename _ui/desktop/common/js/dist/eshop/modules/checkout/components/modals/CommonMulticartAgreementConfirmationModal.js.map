{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/checkout/components/modals/CommonMulticartAgreementConfirmationModal.jsx"],
    "names": ["CommonMulticartAgreementConfirmationModal", "props", "state", "getCleanStateObject", "isConsentUnderChange", "bind", "wasConfirmed", "originalConsentStates", "shouldPreserveVisibleState", "registerAgreementConfirmationComponent", "handleValidationAfterConfirmationAndConsentsUpdate", "handleConsentsUpdateAndCartRecalculation", "setState", "closeAgreementConfirmationModal", "promise", "then", "validateData", "console", "warn", "handleRevertConsentChanges", "length", "changeConsentState", "consentProps", "updatingAnyConsent", "updateConsentsStates", "consentStates", "data", "backupConsentState", "map", "consentData", "find", "consentCode", "push", "log", "setCheckboxConsentStateWithoutRemoteCall", "key", "readOnly", "descriptions", "consentsWithBonusLoading", "isRelatedWithBonus", "isUpdating", "isMandatory", "required", "consent", "filter", "consentState", "updating", "updatingConsents", "onChange", "onUpdate", "onUpdateForSingleConsent", "formInputType", "id", "list", "i", "getPropsForConsent", "consents", "OnlineUtils", "extractObject", "descriptionsArray", "Object", "keys", "k", "value", "defDescription", "present", "getNonFilledBigZonkSection", "nonFilledSections", "getNonFilledBonusSections", "s", "name", "matchedDescription", "d", "every", "indexOf", "c", "getBonusSections", "positiveStatesCount", "some", "positiveState", "states", "positive", "code", "isPositive", "cs", "stateCode", "subsections", "bonusSectionCode", "DFT_SUBSECTION", "isNet", "LegalForm", "isSmallBusiness", "legalForm", "description", "getInvoiceDescription", "reduceCostSectionSubtitleMb2b", "reduceCostSectionSubtitleM", "bonusSection", "conf", "defaultSubsection", "bonusesConsents", "forEach", "matchedBonusSubsectionCode", "sections", "sectionConf", "consentsCode", "consentWithState", "getConsentWithState", "subsection", "mktgSubsection", "replace", "emailPrefix", "invoiceMapping", "invoiceEmail", "marketPrefix", "bigAndZonkConsents", "bigZonkSectionSubtitle", "section", "anyBonusSection", "renderSection", "nonFilledBigZonkSection", "efvSection", "mktSection", "ret", "classSuffix", "renderConsentsSection", "onClose", "showAgreementConfirmationModal", "__html", "title", "getDescription", "bigZonkSectionTitle", "renderBigZonkSection", "reduceCostSectionTitle", "renderBonusSection", "onReturn", "onConfirm", "Component", "Section", "children", "mapStateToProps", "mapDispatchToProps", "dispatch", "modalVariant"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\"\nimport OraModal from \"eshop/modules/core/components/ui/Modal\";\nimport {getShowAgreementConfirmationModal} from \"eshop/modules/checkout/selectors\";\nimport {closeAgreementConfirmationModal} from \"eshop/modules/checkout/actions/errors\";\nimport {registerAgreementConfirmationComponent, updateConsentsStates} from \"eshop/modules/checkout/actions/data\";\nimport {OraButton} from \"eshop/components/OraCommonComponents\";\nimport {changeConsentState} from \"eshop/modules/checkout/actions/app\";\nimport MulticartSingleConsentRow from \"eshop/modules/checkout/components/consents/MulticartSingleConsentRow\";\nimport {getConsentsProps, updatingConsents, getBigAndZonkConsents, getBonusesConsents} from \"eshop/modules/checkout/selectors\";\nimport {validateData} from \"eshop/modules/checkout/actions/validation\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\nimport {getCartIsNet} from \"../../../cart/selectors\";\nimport {getLegalForm} from \"../../selectors\";\nimport LegalForm from \"../../constants/LegalFormEnum\";\nimport {getInvoiceEmail, getInvoiceEmailMapping} from \"eshop/modules/checkout/selectors\";\n\nclass CommonMulticartAgreementConfirmationModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.getCleanStateObject();\n        this.isConsentUnderChange = this.isConsentUnderChange.bind(this)\n    }\n\n    getCleanStateObject() {\n        return {\n            wasConfirmed: false,\n            originalConsentStates: [],\n            shouldPreserveVisibleState: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.registerAgreementConfirmationComponent();\n    }\n\n    componentDidUpdate() {\n        this.handleValidationAfterConfirmationAndConsentsUpdate();\n    }\n\n    onReturn() {\n        this.handleConsentsUpdateAndCartRecalculation();\n        this.setState({shouldPreserveVisibleState: true});\n        this.props.closeAgreementConfirmationModal(\"COMMON\");\n    }\n\n    onConfirm() {\n        let promise = this.handleConsentsUpdateAndCartRecalculation();\n        if(promise){\n            this.props.closeAgreementConfirmationModal(\"COMMON\", true);\n            this.setState({wasConfirmed: true, shouldPreserveVisibleState: true}); //??\n            promise.then(() => this.props.validateData())\n        } else {\n            console.warn(\"missing promise from consent update request\")\n        }\n    }\n\n    onClose() {\n        this.handleRevertConsentChanges();\n        this.setState(this.getCleanStateObject());\n        this.props.closeAgreementConfirmationModal(\"COMMON\");\n    }\n\n    handleRevertConsentChanges() {\n        if (!this.state.shouldPreserveVisibleState && this.state.originalConsentStates.length > 0) {\n            this.props.changeConsentState(this.state.originalConsentStates);\n        }\n    }\n\n    handleValidationAfterConfirmationAndConsentsUpdate() {\n        if (this.state.wasConfirmed && !this.props.consentProps.updatingAnyConsent) {\n            this.setState({wasConfirmed: false});\n            this.props.closeAgreementConfirmationModal(\"COMMON\", true);\n            this.props.validateData();\n        }\n    }\n\n    handleConsentsUpdateAndCartRecalculation() {\n        //TODO check if necessary, maybe only bigzonk\n        return this.props.updateConsentsStates(this.props.consentProps.consentStates);\n    }\n\n    changeConsentState(data) {\n        if (data.length > 0) {\n            this.backupConsentState(data);\n            this.props.changeConsentState(data);\n        }\n    }\n\n    backupConsentState(data) {\n        data.map(consentData => {\n            if (!this.state.originalConsentStates.find(state => state.consentCode === consentData.consentCode)) {\n                this.state.originalConsentStates.push(this.props.consentProps.consentStates.find(state => state.consentCode === consentData.consentCode));\n            }\n        });\n    }\n\n    setCheckboxConsentStateWithoutRemoteCall(data) {\n        console.log(\"Locally set consents\");\n        this.changeConsentState(data);\n    }\n\n    onUpdateForSingleConsent(data) {\n        this.setCheckboxConsentStateWithoutRemoteCall(data);\n    }\n\n    getPropsForConsent(consentData) {\n        return {\n            key: consentData.consentCode + \"AGR_CONF\",\n            readOnly: this.props.descriptions.readOnly,\n            consentsWithBonusLoading: consentData.isRelatedWithBonus,\n            isUpdating: this.props.consentProps.updatingAnyConsent,\n            isMandatory: consentData.required,\n            consent: consentData,\n            state: this.props.consentProps.consentStates.filter((consentState) => (consentState.consentCode === consentData.consentCode)),\n            updating: this.props.consentProps.updatingConsents[consentData.consentCode],\n            onChange: this.changeConsentState.bind(this),\n            onUpdate: this.onUpdateForSingleConsent.bind(this),\n            formInputType: \"CHECKBOX\",\n            id: \"AGR_CONF\"\n        };\n    }\n\n    renderConsentsSection(list) {\n        return !!list && list.length > 0 ? (\n            <div>\n                <ul className=\"opl-agreements-list u-no-margin\">\n                    {list.map((consent, i) => <div className={`${list.length - 1 === i ? '' : 'u-border-bottom'}`}>\n                        <MulticartSingleConsentRow {...this.getPropsForConsent(consent)}\n                                                                      descriptions={this.props.descriptions}\n                                                                      isDeliveryStep=\"false\"\n                                                                      consents={this.props.consentProps.consents}\n                                                                      consentStates={this.props.consentProps.consentStates}/>\n                    </div>)}\n                </ul>\n            </div>\n        ) : \"\";\n    }\n\n    getDescription() {\n        let descriptions = OnlineUtils.extractObject(this.props.descriptions, \"description\")\n        let descriptionsArray = Object.keys(descriptions).map(k => ({key: k, value:descriptions[k]}))\n\n        let defDescription = descriptions[\"\"]\n\n        let state = []\n        state.push({key: \"B\", present: this.getNonFilledBigZonkSection() ? true : false })\n\n        let nonFilledSections = this.getNonFilledBonusSections()\n        state.push({key: \"F\", present: nonFilledSections.find(s => s.name == \"EFV_SUBSECTION\") ? true : false })\n        state.push({key: \"M\", present: nonFilledSections.find(s => s.name == \"MKT_SUBSECTION\") ? true : false })\n\n        let matchedDescription = descriptionsArray.find(d => state.every(s => s.present ? d.key.indexOf(s.key) > -1 : d.key.indexOf(s.key) == -1 ))\n        return (matchedDescription && matchedDescription.value) || defDescription\n\n    }\n\n    isConsentUnderChange(c){\n        return this.state.originalConsentStates.find(state => state.consentCode === c.consentCode)\n    }\n\n    getNonFilledBonusSections(){\n        return this.getBonusSections().filter(s => s.consents.length > s.positiveStatesCount || s.consents.some(this.isConsentUnderChange))\n    }\n\n    getConsentWithState(consent){\n         let positiveState = consent.states.filter(s=>s.positive).map(s=>s.code)[0]\n         return {...consent, isPositive: this.props.consentProps.consentStates.find(cs => cs.consentCode == consent.consentCode && cs.stateCode == positiveState)}\n    }\n\n    getBonusSections(){\n        let subsections;\n        let bonusSectionCode;\n        const DFT_SUBSECTION = \"0\";\n\n        if (this.props.isNet && LegalForm.isSmallBusiness(this.props.legalForm)) {\n            bonusSectionCode = \"1114\"\n\n            subsections = [\n                {\n                    code: \"103\",\n                    name: \"EFV_SUBSECTION\",\n                    description: this.getInvoiceDescription(this.props.isNet),\n                    consents: []\n                },\n                {\n                    code: \"104\",\n                    name: \"MKT_SUBSECTION\",\n                    description: this.props.descriptions.reduceCostSectionSubtitleMb2b,\n                    consents: []\n                },\n                {\n                    code: DFT_SUBSECTION,\n                    consents: []\n                }\n            ]\n        } else {\n            bonusSectionCode = \"1014\"\n\n            subsections = [\n                {\n                    code: \"101\",\n                    name: \"EFV_SUBSECTION\",\n                    description: this.getInvoiceDescription(this.props.isNet),\n                    consents: []\n                },\n                {\n                    code: \"102\",\n                    name: \"MKT_SUBSECTION\",\n                    description: this.props.isNet ? this.props.descriptions.reduceCostSectionSubtitleMb2b : this.props.descriptions.reduceCostSectionSubtitleM,\n                    consents: []\n                },\n                {\n                    code: DFT_SUBSECTION,\n                    consents: []\n                }\n            ]\n        }\n\n        let bonusSection = this.props.consentProps.conf.find(c => c.code == bonusSectionCode)\n        let defaultSubsection = subsections.find(s => s.code == DFT_SUBSECTION)\n\n        this.props.bonusesConsents.forEach(consent => {\n\n            let matchedBonusSubsectionCode = bonusSection.sections.filter(sectionConf => sectionConf.consentsCode.find(c => c == consent.consentCode))\n            .map(sectionConf=>sectionConf.code)[0]\n\n            let consentWithState = this.getConsentWithState(consent)\n            let subsection = (subsections.find(s => s.code == matchedBonusSubsectionCode) || defaultSubsection).consents.push(consentWithState)\n        })\n\n        subsections.forEach(s => s.positiveStatesCount = s.consents.filter(c=>c.isPositive).length)\n\n        let mktgSubsection = subsections.find(s => s.name == \"MKT_SUBSECTION\")\n        mktgSubsection.description = mktgSubsection.description.replace(\"{N}\", mktgSubsection.positiveStatesCount)\n        mktgSubsection.description = mktgSubsection.description.replace(\"{X}\", mktgSubsection.consents.length)\n\n        return subsections\n    }\n\n    getInvoiceDescription(isNet) {\n        const emailPrefix = this.props.invoiceMapping !== 'invoiceEmail' || (this.props.invoiceEmail && this.props.invoiceEmail.length > 0) ? 'fillEmail' : '';\n        const marketPrefix = isNet ? 'b2b' : '';\n        const key = 'reduceCostSectionSubtitleF' + emailPrefix + marketPrefix;\n        return this.props.descriptions[key];\n    }\n\n    getNonFilledBigZonkSection() {\n\n        let consents = this.props.bigAndZonkConsents.map(this.getConsentWithState.bind(this))\n        let positiveStatesCount = consents.filter(consent => consent.isPositive).length\n\n        if(consents.length > positiveStatesCount || consents.some(this.isConsentUnderChange)){\n            return {\n                    consents: consents,\n                    description: this.props.descriptions.bigZonkSectionSubtitle\n            }\n        } else {\n            return null\n        }\n    }\n\n    renderBigZonkSection() {\n        let section = this.getNonFilledBigZonkSection()\n        let anyBonusSection = this.getNonFilledBonusSections()[0]\n\n        return section ? [this.renderSection(section, anyBonusSection ? \"u-border-bottom\" : \"\")] : []\n    }\n\n    renderBonusSection() {\n        let nonFilledBigZonkSection = this.getNonFilledBigZonkSection()\n        let nonFilledSections = this.getNonFilledBonusSections()\n        let efvSection = nonFilledSections.find(s => s.name == \"EFV_SUBSECTION\")\n        let mktSection = nonFilledSections.find(s => s.name == \"MKT_SUBSECTION\")\n\n        let ret = []\n        if(efvSection){\n            ret.push(this.renderSection(efvSection, \"\"))\n        }\n        if(mktSection){\n            ret.push(this.renderSection(mktSection, efvSection ? \"u-border-top\" : \"\"))\n        }\n        return ret\n\n    }\n\n    renderSection(section, classSuffix = \"\") {\n\n        let consents = (section && section.consents.filter(c => !c.isPositive || this.isConsentUnderChange(c))) || []\n\n        if(consents[0]){\n            return (\n            <div className={\"u-padding-top-l \" + classSuffix}>\n                <p>{section.description}</p>\n                {this.renderConsentsSection(consents)}\n            </div>\n            )\n        } else {\n            return null\n        }\n    }\n\n    render() {\n        return (\n            <OraModal onClose={this.onClose.bind(this)}\n                      open={this.props.showAgreementConfirmationModal}\n                      id={\"agreementConfirmationModal\"}\n                      showClose={true}\n                      escapeClose={false}\n                      clickClose={false}\n                      size=\"medium\">\n                <div>\n                    <div className=\"l-row\">\n                        <div className=\"l-col l-col-12 u-no-spacing u-padding-top-l\">\n                            <div className=\"opl-msg--box validation message\"\n                                 dangerouslySetInnerHTML={{__html: this.props.descriptions.title}}/>\n                        </div>\n                    </div>\n                    <div className=\"l-row\">\n                        <div className=\"l-col l-col-12 u-no-spacing u-padding\">\n                            <div className=\"opl-msg--box validation message\"\n                                 dangerouslySetInnerHTML={{__html: this.getDescription()}}/>\n                        </div>\n                    </div>\n                    <Section title={this.props.descriptions.bigZonkSectionTitle}>\n                        {this.renderBigZonkSection()}\n                    </Section>\n                    <Section title={this.props.descriptions.reduceCostSectionTitle}>\n                        {this.renderBonusSection()}\n                    </Section>\n                    <div className=\"l-row u-padding-l u-small-padding-top-l u-medium-padding-top-l u-large-padding-top-xl\">\n                        <div className=\"l-col l-col-small-12 l-col-medium-4 l-col-4 medium-offset-by-4 large-offset-by-4\">\n                            <OraButton onClick={this.onReturn.bind(this)} type=\"secondary\" size=\"medium\"\n                                       className=\"u-w-100\">Wróć</OraButton>\n                        </div>\n                        <div className=\"l-col l-col-small-12 l-col-medium-4 l-col-4 u-small-padding-top\">\n                            <OraButton onClick={this.onConfirm.bind(this)} type=\"primary\" size=\"medium\"\n                                       className=\"u-w-100\">Dalej</OraButton>\n                        </div>\n                    </div>\n                </div>\n            </OraModal>\n        )\n    }\n}\n\nclass Section extends Component {\n    render(){\n        if(this.props.children[0]){\n            return (\n                <div className=\"u-padding-top\">\n                    <h5>{this.props.title}</h5>\n                    {this.props.children}\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    showAgreementConfirmationModal: getShowAgreementConfirmationModal(state),\n    consentProps: getConsentsProps(state),\n    bonusesConsents: getBonusesConsents(state),\n    isNet : getCartIsNet(state),\n    legalForm : getLegalForm(state),\n    bigAndZonkConsents: getBigAndZonkConsents(state),\n    invoiceEmail: getInvoiceEmail(state),\n    invoiceMapping: getInvoiceEmailMapping(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    closeAgreementConfirmationModal: (modalVariant, wasConfirmed) => dispatch(closeAgreementConfirmationModal(modalVariant, wasConfirmed)),\n    registerAgreementConfirmationComponent: () => dispatch(registerAgreementConfirmationComponent()),\n    updateConsentsStates: (data) => dispatch(updateConsentsStates(data)),\n    changeConsentState: (data) => dispatch(changeConsentState(data)),\n    validateData: () => dispatch(validateData())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommonMulticartAgreementConfirmationModal);"],
    "file": "CommonMulticartAgreementConfirmationModal.js"
}