{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/checkout/actions/data.js"],
    "names": ["registerNextStepCondition", "condition", "dispatch", "getState", "type", "ACTIONS", "REGISTER_NEXT_STEP_CONDITION", "unregisterNextStepCondition", "UNREGISTER_NEXT_STEP_CONDITION", "registerCmsConsentConfig", "config", "REGISTER_CMS_CONFIGURATION", "forceRequestCartCustomerData", "remote", "getCartCustomerStart", "RemoteApi", "getCartCustomer", "then", "data", "length", "getCartCustomerDone", "cbs", "getCbsData", "requestCartCustomerData", "Promise", "resolve", "requestCustomerData", "getCustomerStart", "getCustomer", "getCustomerDone", "clearCartCustomerRequested", "CLEAR_CART_CUSTOMER_REQUESTED", "requestCartRepresentativeData", "getCartRepresentativeStart", "getCartRepresentative", "getCartRepresentativeDone", "fetchInstallationAvailableTimeSlots", "earlierInstallationConsentAccepted", "documentsDeliveryMode", "forcedRefreshSlots", "getInstallationAvailableTimeSlotsStart", "getInstallationAvailableTimeSlots", "getInstallationAvailableTimeSlotsDone", "selectInstallationTimeSlot", "forceSlotRefresh", "SHOW_INSTALLATION_SLOT_ERROR", "payload", "SELECT_INSTALLATION_TIME_SLOT", "text", "days", "slots", "map", "day", "i", "slot", "j", "startDate", "endDate", "header", "split", "htmlText", "SELECT_INSTALLATION_SLOT_DESCRIPTION", "changeInstallationComment", "CHANGE_INSTALLATION_COMMENT", "value", "subscribeCustomerSelected", "console", "log", "window", "subscribeCustomerSelectedFlag", "PubSub", "unsubscribe", "subscribe", "CUSTOMER_SELECTED", "requestCartMnpData", "defaults", "getCartMnpDataStart", "getCartMnpData", "response", "getCartMnpDataDone", "requestCartConsentsData", "deliveryMethodCode", "getCartConsentsStart", "getCartConsents", "getCartConsentsDone", "legalForm", "getConsentsStart", "getConsentsData", "consents", "getConsentsDone", "setConsentReadOnly", "requestRecalculateConsentsStrategy", "bundleNo", "offerType", "recalculateConsentFromStrategy", "requestRecalculateConsentsForForeigner", "isForeigner", "clearModifyConsentsInCartQueue", "dataAlreadyProcessed", "currentData", "consentStateEquals", "cs1", "cs2", "consentCode", "consentState", "consentStateContains", "cs", "csArray", "filter", "c", "newData", "updateConsentsStates", "codes", "e", "updateCartConsentsStart", "updateCartConsents", "updateCartConsentsDone", "updateAsynchConsent", "updateConsents", "updateCartAndGetDocuments", "checkoutData", "updateCheckoutCart", "cartUpdateDone", "updateDelivery", "reject", "success", "catch", "error", "fetchDeliveryMethodsOnly", "getCartDelivery", "updateInstallationInfo", "updateInstallationInfoOnCart", "getZipCodeFromWWT", "placeId", "placeName", "streetId", "streetName", "streetNumber", "apartmentNumber", "fetchZipCodeFromWWTActions", "start", "zip", "MAGNUM_ACTIONS", "SAVE_WWT_ADDRESS_NO_ZIP", "zips", "r", "OPEN_WWT_ZIP_MODAL", "fail", "err", "status", "validateZipCode", "addressType", "townId", "CHANGE_CUSTOMER_MAINADDRESS_FORM_FIELD", "CHANGE_CUSTOMER_CORRESPONDENCEADDRESS_FORM_FIELD", "CHANGE_DELIVERY_ADDRESS_FORM_FIELD", "name", "getSelectedWwtAddress", "fetchSelectedWwtAddressActions", "selectWwtAddress", "SELECT_WWT_ADDRESS", "fetchCvDocumentList", "SELECT_CV_DOCUMENTS_LIST", "selectCvDocument", "documentCode", "SELECT_CV_DOCUMENT", "selectCustomerWorkPhoneNumber", "phoneNumber", "SELECT_CUSTOMER_WORK_PHONE_NUMBER", "errors", "customerWorkPhoneNumberValidator", "customerWorkPhoneNumber", "openDocument", "link", "fileName", "request", "XMLHttpRequest", "file", "open", "responseType", "send", "onreadystatechange", "readyState", "Blob", "openFile", "downloadFile", "mimeType", "filename", "navigator", "msSaveOrOpenBlob", "fileURL", "URL", "createObjectURL", "element", "document", "createElement", "setAttribute", "style", "display", "body", "appendChild", "click", "removeChild", "printConsents", "consentCodes", "CONSENT_DOCUMENTS_LOADER", "doCheckoutAsyncStep", "code", "doCheckoutStepError", "results", "result", "category", "doCheckoutStepDone", "getDocumentCode", "documentData", "documentCodes", "RemoteApiDocs", "checkDocumentExistence", "createDocument", "documentDefinitionCodes", "factory", "findDocumentInLocalStorage", "getDocuments", "CONSENT_PRINT_DOCUMENTS", "printMobileConsents", "customerModified", "doSaveCheckoutData", "removeDocuments", "selectApu", "option", "START_LOAD_APU", "SELECT_APU", "STOP_LOAD_APU", "registerPrintConsentValidator", "consentType", "CONSENT_TYPE_IN_PRINT_CONSENTS_VALIDATOR", "registerVerificationConsentType", "verificationConsentType", "REGISTER_VERIFICATION_CONSENT_TYPE", "fetchPosSimCardTypes", "getPosSimCardsTypes", "fetchPosSimCardTypesDone", "pickupGeneralError", "PICKUP_GENERAL_ERROR", "fetchSerialNumbers", "getSerialNumbers", "list", "serials", "reduce", "obj", "entryNo", "id", "fetchSerialNumbersDone", "updateSerialNumbersDone", "sapReservation", "cart", "miniCartData", "orderNr", "paymentAndFiscalization", "PAYMENT_AND_FISCALIZATION", "getSapFioriLinks", "GET_SAP_FIORI_LINKS_DONE", "validateSerialNumbers", "changeSerialNumber", "productCode", "CHANGE_PICKUP_SERIAL_NUMBER_VALUE", "PICKUP_SERIAL_NUMBERS_VALIDATION", "isValid", "serialNumbersValidation", "storage", "isValidSim", "isValidTerminal", "serialNumbers", "checkout", "pickup", "entries", "entry", "terminals", "terminal", "requireSerialNumber", "changeSimType", "CHANGE_PICKUP_SIM_CARD_TYPE", "pickupSerialNumbersErrorDismiss", "PICKUP_SERIAL_NUMBERS_ERROR_DISMISS", "updateOrderSerialNumbers", "pickupNavigationNextButtonStart", "updateSerialNumbers", "pickupNavigationNextButtonDone", "responseJSON", "Array", "isArray", "details", "array", "d", "concat", "pickupSerialNumberError", "description", "fetchGoodsOrderPaymentStatus", "override", "getPickupPaymentStatus", "CHECK_GOODS_ORDERS_PAYMENT_STATUS_DONE", "pickupPaymentStateusError", "checkPaymentStatus", "changePaymentOverride", "CHANGE_PAYMENT_OVERRIDE", "pickupDocumentDownloadStarted", "PICKUP_DOCUMENT_DOWNLOAD_START", "printPickupDocument", "RemoteApiPickup", "PICKUP_DOCUMENT_DOWNLOAD_DONE", "fetchSimCardTypes", "configurationId", "store", "reservation", "getSimCardTypes", "getSimCardTypesDone", "setDefaultBillingAccountIfDataNotExist", "defaultFixAccount", "account", "defaultMobileAccount", "requestBillingAccountFormData", "getBillingAccountFormDataStart", "getBillingAccount", "getBillingAccountFormDataDone", "PICKUP_NAVIGATION_NEXT_START", "PICKUP_NAVIGATION_NEXT_DONE", "fetchSAPSerialNumbers", "getWarehouseSerialNumbers", "pickupActivation", "pickupActivationStart", "pickupActivationDone", "fetchPickupLastOrder", "getLastOrder", "PICKUP_LAST_ORDER_DATA", "printReturnDevicesDocument", "RETURN_DOCUMENT_LOADER", "isForced", "INSTALLATION_SLOT_FORCE_REFRESH", "updateConsentGroupExpanded", "listNo", "consentGroupExpanded", "updateValueConsentGroupExpanded", "CONSENT_GROUP_EXPANDED", "registerAgreementConfirmationComponent", "REGISTER_AGREEMENT_VALIDATION_COMPONENT", "validateCustomerDataFields", "dataToValidate", "Object", "keys", "emptyBusinessData", "forEach", "k", "contactToValidate", "emptyCustomerContact", "mainAddress", "emptyAddress", "customerContactFormValidators", "changeCustomerContactFormField", "customerDataFormValidators", "changeCustomerDataFormField", "requestBpgData", "nip", "getBpgDataStart", "getBpgData", "wwtaddress", "isPublic", "getBpgDataDone", "getCbsDataThenDispatch", "requestDocumentsToMerge", "getDocumentsToMerge", "documentsToMergePerBundle", "SET_DOCUMENTS_TO_MERGE_PER_BUNDLE", "setInitialNationality", "initialNationality", "SET_INITIAL_NATIONALITY", "setForeignerAvailable", "foreignerAvailable", "SET_FOREIGNER", "consentsGetStatus", "CONSENTS_GET_STATUS", "consentsCreateAndSendDocument", "mail", "phone", "consentSections", "CONSENTS_CREATE_AND_SEND_DOCUMENT", "enterConsentsEmailAddress", "emailAddress", "ENTER_CONSENTS_EMAIL_ADDRESS", "enterConsentsPhoneNumber", "ENTER_CONSENTS_PHONE_NUMBER", "enterConsentsAcknowledgmentsReadWhileTalking", "acknowledged", "ENTER_CONSENTS_ACCEPTED_ACKNOWLEDGMENTS", "resetConsentsStatus"],
    "mappings": "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",
    "sourcesContent": ["import RemoteApi from \"../remoteApi\";\nimport RemoteApiDocs from \"../../documents/remoteApi\";\nimport RemoteApiPickup from \"../../documents/pickup/remoteApi\";\nimport * as remote from \"./remote\";\nimport * as ACTIONS from \"../actionTypes\";\nimport * as MAGNUM_ACTIONS from \"../../magnum2/actionTypes\";\nimport {\n    billingAccountDataRequested,\n    cartConsentsDataRequested,\n    cartMnpDataRequested,\n    checkoutConditionIsRegistered,\n    customerDataRequested,\n    getAddressCorrespondence,\n    getAddressMain,\n    getBillingAccountFormData,\n    getBillingAccountsData,\n    getCheckoutData,\n    getCheckoutDataForDelivery,\n    getCurrentStepId,\n    getCustomerNoEmail,\n    getInstallationAvailableTimeSlots,\n    getLegalForm,\n    getModifyConsentsInCartQueue,\n    getPaymentOverrideStatus,\n    installationAvailableTimeSlotsRequested,\n    isCustomerModified,\n    representativeDataRequested,\n    updatingAnyConsent,\n} from \"../selectors\";\nimport {fetchCartPromise, fetchMiniCart} from \"../../cart/actions/cart\";\nimport {actions as cbs} from \"eshop/modules/cbs/main\";\nimport {\n    bodyLoaderHide,\n    bodyLoaderShow,\n    changeCustomerContactFormField,\n    changeCustomerDataFormField,\n    changeCustomerMainAddressFormField,\n    manualRedirectResult,\n    setConsentStatesToNegative,\n    setModifyConsentsInCartQueue,\n    setSelectedBillingAccount,\n    showErrorMessage,\n    showSpecifiedMessage,\n} from \"./app\";\nimport {getBillingAccountForm, requiredBillingAccountFieldExist, runValidator, whenAvailable} from \"../utils/utils\";\nimport {entryContainsReservableSimCard} from \"../utils/MiniCartUtils\";\nimport {clearAllLinks, fetchDocuments} from \"../../documents/actions/documents\";\nimport {emptyAddress, emptyBusinessData, emptyCustomerContact} from \"../reducers/helperObjects\";\nimport {\n    customerContactFormValidators,\n    customerDataFormValidators,\n    customerWorkPhoneNumberValidator,\n} from \"../validators\";\nimport {requestLoggedCustomerDataAndCheckExistence} from \"eshop/modules/auth/actions/api\";\nimport {getRegisterBillingAccountPopupB2B, isLogged} from \"eshop/modules/auth/selectors/authorization\";\nimport {fetchDeliveryMethodsDone, selectedDocumentsDeliveryMethod} from \"./delivery\";\n\nexport const registerNextStepCondition = (condition) => (dispatch, getState) => {\n    if (checkoutConditionIsRegistered(condition)(getState())) {\n        return;\n    }\n    dispatch({\n        type: ACTIONS.REGISTER_NEXT_STEP_CONDITION,\n        condition: condition,\n    });\n};\n\nexport const unregisterNextStepCondition = (condition) => (dispatch, getState) =>{\n    if (!checkoutConditionIsRegistered(condition)(getState())) {\n        return;\n    }\n    dispatch({\n        type: ACTIONS.UNREGISTER_NEXT_STEP_CONDITION,\n        condition,\n    });\n};\n\nexport const registerCmsConsentConfig = (config) => ({\n    type: ACTIONS.REGISTER_CMS_CONFIGURATION,\n    config: config,\n});\n\nexport const forceRequestCartCustomerData = () => (dispatch, getState) => {\n    dispatch(remote.getCartCustomerStart());\n    return RemoteApi.getCartCustomer()\n        .then(data => data.length > 0 ? data[0] : null) // we pick the customer from the first bundle\n        .then(data => {\n\n            dispatch(remote.getCartCustomerDone(data)); //todo if DZ ?\n            dispatch(cbs.getCbsData(getAddressMain(getState()), true));\n            dispatch(cbs.getCbsData(getAddressCorrespondence(getState())));\n        });\n};\n\nexport const requestCartCustomerData = () => (dispatch, getState) => {\n    if (!customerDataRequested(getState())) {\n        return dispatch(forceRequestCartCustomerData());\n    } else {\n        return Promise.resolve();\n    }\n};\n\nexport const requestCustomerData = () => (dispatch, getState) => {\n    dispatch(remote.getCustomerStart());\n    return RemoteApi.getCustomer()\n        .then(data => {\n            dispatch(remote.getCustomerDone(data));\n        });\n};\nexport const clearCartCustomerRequested = () => ({\n    type: ACTIONS.CLEAR_CART_CUSTOMER_REQUESTED,\n});\n\nexport const requestCartRepresentativeData = () => (dispatch, getState) => {\n    if (!representativeDataRequested(getState())) {\n        dispatch(remote.getCartRepresentativeStart());\n        return RemoteApi.getCartRepresentative()\n            .then(data => data.length > 0 ? data[0] : null)\n            .then(data => dispatch(remote.getCartRepresentativeDone(data)))\n    } else {\n        return Promise.resolve();\n    }\n};\n\nexport const fetchInstallationAvailableTimeSlots = (earlierInstallationConsentAccepted = true, documentsDeliveryMode = null, forcedRefreshSlots = false ) => (dispatch, getState) => {\n        dispatch(remote.getInstallationAvailableTimeSlotsStart());\n        installationAvailableTimeSlotsRequested(getState());\n        dispatch(registerNextStepCondition('installationTimeSlot'));\n        RemoteApi.getInstallationAvailableTimeSlots(earlierInstallationConsentAccepted, documentsDeliveryMode)\n            .then(data => dispatch(remote.getInstallationAvailableTimeSlotsDone(data)));\n        dispatch(selectInstallationTimeSlot({}));\n\n    if (forcedRefreshSlots) {\n        dispatch(forceSlotRefresh(false));\n        dispatch({type: ACTIONS.SHOW_INSTALLATION_SLOT_ERROR, payload: true});\n    }\n\n};\n\nexport const selectInstallationTimeSlot = (data) => (dispatch, getState) => {\n    dispatch({type: ACTIONS.SELECT_INSTALLATION_TIME_SLOT, data});\n    dispatch({type: ACTIONS.SHOW_INSTALLATION_SLOT_ERROR, payload: false});\n    let text = \"\";\n    let days = getInstallationAvailableTimeSlots(getState()).slots;\n    if (days) {\n        days.map((day, i) => {\n            if (day.slots) {\n                day.slots.map((slot, j) => {\n                    if (slot.startDate == data.startDate && slot.endDate == data.endDate) {\n                        text = text + \" \" + day.header.split(\" \")[1] + \" \" + day.header.split(\" \")[2] + \" \" + data.startDate.split(\"-\")[0] + \", \" + slot.htmlText;\n                        dispatch({type: ACTIONS.SELECT_INSTALLATION_SLOT_DESCRIPTION, payload: text});\n                    }\n                })\n\n            }\n        });\n    }\n};\n\nexport const changeInstallationComment = (data) => ({\n    type: ACTIONS.CHANGE_INSTALLATION_COMMENT,\n    payload: data.value,\n});\n\nexport const subscribeCustomerSelected = () => (dispatch, getState) => {\n    whenAvailable(\"PubSub\",() => {\n            console.log(\"subscribeCustomerSelectedFlag+\",window.subscribeCustomerSelectedFlag);\n            if(window.subscribeCustomerSelectedFlag){\n                console.log(\"subscribeCustomerSelectedFlag - unsubscribe\",window.subscribeCustomerSelectedFlag);\n                PubSub.unsubscribe(window.subscribeCustomerSelectedFlag);\n            }\n            window.subscribeCustomerSelectedFlag=PubSub.subscribe(\"UXEvent.CustomerService.SearchCustomer.CustomerSelected\", function () {\n\n                console.log(\"UXEvent.CustomerService.SearchCustomer.CustomerSelected triggered.\");\n                console.log(\"STATE:\",getState());\n                        dispatch({type: ACTIONS.CUSTOMER_SELECTED});\n\n                        if (getRegisterBillingAccountPopupB2B(getState())) {\n                            dispatch(requestLoggedCustomerDataAndCheckExistence());\n                        }\n\n            });\n            console.log(\"subscribeCustomerSelectedFlag-\",window.subscribeCustomerSelectedFlag);\n    },\n    dispatch);\n};\n\nexport const requestCartMnpData = (defaults) => (dispatch, getState) => {\n    if (!cartMnpDataRequested(getState())) {\n        dispatch(remote.getCartMnpDataStart());\n        RemoteApi.getCartMnpData()\n            .then(response => dispatch(remote.getCartMnpDataDone({response, defaults})));\n    }\n};\n\nexport const requestCartConsentsData = () => (dispatch, getState) => {\n    const deliveryMethodCode = selectedDocumentsDeliveryMethod(getState());\n    if((!deliveryMethodCode && getCurrentStepId(getState())==\"delivery-payment\") && !cartConsentsDataRequested(getState())){\n       console.log(\"DEBUG deliveryMethodCode is empty, getting only cart consents\");\n       dispatch(remote.getCartConsentsStart());\n       RemoteApi.getCartConsents()\n            .then(data => dispatch(remote.getCartConsentsDone(data, data)));\n       return Promise.resolve();\n    }\n    const legalForm = getLegalForm(getState());\n    if ((deliveryMethodCode) || ( legalForm ) || !cartConsentsDataRequested(getState()) || isLogged(getState())) {\n        dispatch(remote.getCartConsentsStart());\n        dispatch(remote.getConsentsStart({deliveryMethodCode, legalForm}));\n        RemoteApi.getConsentsData(deliveryMethodCode, legalForm)\n            .then(consents => {\n                dispatch(remote.getConsentsDone(consents, deliveryMethodCode));\n                dispatch(remote.setConsentReadOnly(\"21_CONV\", getCustomerNoEmail(getState())));\n                RemoteApi.getCartConsents()\n                    .then(data => dispatch(remote.getCartConsentsDone(data, consents)));\n                }\n            );\n    }\n};\n\nexport const requestRecalculateConsentsStrategy = (bundleNo, offerType) => (dispatch, getState) => {\n    const deliveryMethodCode = selectedDocumentsDeliveryMethod(getState());\n    const legalForm = getLegalForm(getState());\n    dispatch(remote.getCartConsentsStart());\n    RemoteApi.recalculateConsentFromStrategy(bundleNo, offerType).then(() => {\n        RemoteApi.getConsentsData(deliveryMethodCode, legalForm).then(consents => {\n            dispatch(remote.getConsentsDone(consents, deliveryMethodCode));\n            dispatch(remote.setConsentReadOnly(\"21_CONV\", getCustomerNoEmail(getState())));\n            RemoteApi.getCartConsents()\n            .then(data => dispatch(remote.getCartConsentsDone(data, consents)));\n        });\n    });\n};\n\nexport const requestRecalculateConsentsForForeigner = (isForeigner) => (dispatch) => {\n    dispatch(remote.getCartConsentsStart());\n    RemoteApi.requestRecalculateConsentsForForeigner(isForeigner).then(() => {\n        RemoteApi.getConsentsData().then(consents => {\n            dispatch(remote.getConsentsDone(consents));\n            RemoteApi.getCartConsents()\n                .then(data => dispatch(remote.getCartConsentsDone(data, consents)));\n        });\n    });\n};\n\nexport const clearModifyConsentsInCartQueue = (dataAlreadyProcessed) => (dispatch, getState) => {\n    let currentData = getModifyConsentsInCartQueue(getState());\n\n    //remove already processed data\n    const consentStateEquals = (cs1, cs2) => cs1.consentCode == cs2.consentCode && cs1.consentState == cs2.consentState;\n    if(dataAlreadyProcessed && dataAlreadyProcessed[0]){\n\n        const consentStateContains = (cs, csArray) => csArray.filter(c => consentStateEquals(c, cs)).length > 0;\n\n        let newData = currentData.filter(cs => !consentStateContains(cs, dataAlreadyProcessed) );\n        dispatch(setModifyConsentsInCartQueue(newData));\n    }\n\n    //send not processed data to backend\n    currentData = getModifyConsentsInCartQueue(getState());\n    if(currentData[0]){\n        dispatch(updateConsentsStates(currentData));\n    }\n};\n\nexport const updateConsentsStates = (data) => (dispatch, getState) => {\n    if (data.length > 0 && !updatingAnyConsent(getState())) {\n        let codes = data.map(e => e.consentCode);\n        dispatch(remote.updateCartConsentsStart(codes));\n        return RemoteApi.updateCartConsents(data)\n            .then(response => {\n                dispatch(fetchCartPromise()).then(() => dispatch(remote.updateCartConsentsDone(response)));\n                fetchMiniCart()(dispatch, getState);\n                dispatch(clearModifyConsentsInCartQueue(data));\n            });\n    }\n};\n\nexport const updateAsynchConsent = () => (dispatch, getState) => {\n    const data = getCheckoutData(getState());\n    RemoteApi.updateConsents(data).then(response => {\n        dispatch(clearAllLinks());\n    });\n};\n\nexport const updateCartAndGetDocuments = () => (dispatch, getState) => {\n    let checkoutData = getCheckoutData(getState());\n    RemoteApi.updateCheckoutCart(checkoutData).then(() => {\n        cartUpdateDone(dispatch, getState);\n    });\n};\n\nexport const updateDelivery = () => (dispatch, getState) => {\n    return new Promise((resolve, reject) => {\n        RemoteApi.updateCheckoutCart(getCheckoutDataForDelivery(getState())).then((success) => {\n            resolve(success);\n        }).catch(error => {\n            reject(error);\n        });\n    });\n};\n\nconst cartUpdateDone = (dispatch, getState) => {\n    dispatch(fetchDocuments());\n    dispatch(fetchDeliveryMethodsOnly());\n};\n\nexport const fetchDeliveryMethodsOnly = () => (dispatch) => {\n    RemoteApi.getCartDelivery()\n        .then(data => {\n            dispatch(fetchDeliveryMethodsDone(data));\n        });\n};\n\nexport const updateInstallationInfo = () => (dispatch, getState) => {\n    let checkoutData = getCheckoutData(getState());\n    RemoteApi.updateInstallationInfoOnCart(checkoutData);\n};\n\n// get zipCode from WWT\nexport const getZipCodeFromWWT = (placeId, placeName, streetId, streetName, streetNumber, apartmentNumber) =>\n    (dispatch) => {\n        dispatch(remote.fetchZipCodeFromWWTActions.start());\n        return RemoteApi.getZipCodeFromWWT(placeId, streetId, streetNumber)\n            .success(response => {\n                    if (response.length === 1) {\n                        dispatch(remote.fetchZipCodeFromWWTActions.success({\n                            placeId,\n                            placeName,\n                            streetId,\n                            streetName,\n                            streetNumber,\n                            apartmentNumber,\n                            zip: response[0].zip,\n                        }));\n                    } else if (response.length > 1){\n                        dispatch({\n                            type: MAGNUM_ACTIONS.SAVE_WWT_ADDRESS_NO_ZIP,\n                            payload: {\n                                placeId,\n                                placeName,\n                                streetId,\n                                streetName,\n                                streetNumber,\n                                apartmentNumber,\n                                zips: response.map(r => r.zip),\n                            }\n                        });\n                        dispatch({type: MAGNUM_ACTIONS.OPEN_WWT_ZIP_MODAL});\n                    }\n                }\n            ).fail(err => {\n                console.log(err);\n                if (err.status === 404) {\n                    dispatch({\n                        type: MAGNUM_ACTIONS.SAVE_WWT_ADDRESS_NO_ZIP,\n                        payload: {\n                            placeId,\n                            placeName,\n                            streetId,\n                            streetName,\n                            streetNumber,\n                            apartmentNumber,\n                        },\n                    });\n                    dispatch({type: MAGNUM_ACTIONS.OPEN_WWT_ZIP_MODAL});\n                } else {\n                    dispatch(remote.fetchZipCodeFromWWTActions.error(err));\n                }\n                return err;\n            });\n    };\n\nexport const validateZipCode = ({addressType, zip, townId, streetId, streetNumber}) => (dispatch) => {\n    let type = \"\";\n    switch(addressType) {\n        case \"main\":\n            type = ACTIONS.CHANGE_CUSTOMER_MAINADDRESS_FORM_FIELD;\n            break;\n        case \"correspondence\":\n            type = ACTIONS.CHANGE_CUSTOMER_CORRESPONDENCEADDRESS_FORM_FIELD;\n            break;\n        case \"delivery\":\n            type = ACTIONS.CHANGE_DELIVERY_ADDRESS_FORM_FIELD;\n            break;\n    }\n    RemoteApi.validateZipCode(zip, townId, streetId, streetNumber)\n        .success(response => dispatch({type, name: \"zipValid\", value: !!response}))\n        .fail(err => {\n            dispatch({type, name: \"zipValid\", value: false});\n            console.error(err)\n        });\n};\n\nexport const getSelectedWwtAddress = () =>\n    (dispatch) => {\n        dispatch(remote.fetchSelectedWwtAddressActions.start());\n        return RemoteApi.getSelectedWwtAddress()\n            .then(\n                data => dispatch(remote.fetchSelectedWwtAddressActions.success(data)),\n                error => dispatch(remote.fetchSelectedWwtAddressActions.error())\n            );\n    };\n\n\nexport const selectWwtAddress = (data) => ({\n    type: ACTIONS.SELECT_WWT_ADDRESS,\n    payload: data,\n});\n\n\n\nexport const fetchCvDocumentList = () => (dispatch,getState) => {\n        RemoteApi.fetchCvDocumentList()\n            .then(response => {\n                dispatch({\n                    type: ACTIONS.SELECT_CV_DOCUMENTS_LIST,\n                    payload: response,\n                });\n            });\n};\n\nexport const selectCvDocument = (documentCode) => (dispatch,getState) => {\n    dispatch({\n        documentCode,\n        type: ACTIONS.SELECT_CV_DOCUMENT,\n    });\n};\n\nexport const selectCustomerWorkPhoneNumber = (phoneNumber) => (dispatch,getState) => {\n    dispatch({\n        phoneNumber,\n        type: ACTIONS.SELECT_CUSTOMER_WORK_PHONE_NUMBER,\n        errors: customerWorkPhoneNumberValidator.customerWorkPhoneNumber(phoneNumber),\n    });\n};\n\nexport const openDocument = function (link, fileName = \"document.pdf\") {\n    let request = new XMLHttpRequest(), file;\n    request.open(\"GET\", link);\n    request.responseType = \"arraybuffer\";\n    request.send(null);\n    request.onreadystatechange = function () {\n        if (request.readyState === 4 && request.status === 200) {\n            file = new Blob([request.response], {type: \"application/pdf\"});\n            openFile(file, fileName);\n        }\n    };\n};\n\nexport const downloadFile = (link, mimeType = 'application/pdf') =>\n    new Promise((resolve, reject) => {\n        let request = new XMLHttpRequest();\n        request.open(\"GET\", link);\n        request.responseType = \"arraybuffer\";\n        request.onreadystatechange = () => {\n            if (request.readyState !== 4) return;\n            if (request.status >= 200 && request.status < 300) {\n                resolve(new Blob([request.response], {type: mimeType}));\n            } else {\n                reject(`Error while downloading file=${link}`);\n            }\n        };\n        request.send(null);\n    });\n\nexport const openFile = (file, filename) => {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) { // IE\n        window.navigator.msSaveOrOpenBlob(file, filename);\n    } else {\n        let fileURL = URL.createObjectURL(file);\n        console.log(\"fileURL\", fileURL);\n        var element = document.createElement(\"a\");\n        element.setAttribute(\"href\", fileURL);\n        element.setAttribute(\"download\", filename);\n        element.style.display = \"none\";\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n};\n\nexport const printConsents = (consentCodes) => (dispatch, getState) => {\n    dispatch(setConsentStatesToNegative());\n\n    //customer\n    var checkoutData = getCheckoutData(getState());\n\n    //start loader\n    dispatch({\n        type: ACTIONS.CONSENT_DOCUMENTS_LOADER,\n        data: true,\n    });\n\n    //create customer\n    RemoteApi.doCheckoutAsyncStep(checkoutData)\n        .catch(data => {\n            if (data.code !== \"9\") {\n                dispatch(remote.doCheckoutStepError(data));\n            }\n            showErrorMessage(dispatch, data);\n\n            //stop loader\n            dispatch({\n                type: ACTIONS.CONSENT_DOCUMENTS_LOADER,\n                data: false,\n            });\n        })\n        .then(data => {\n            if (data.code === \"0\" || data.code === \"9\" || (!!data.results && manualRedirectResult(data.results)) || data.results.filter((result) => result.category === \"APPARTMENT_NO_VALIDATION\").length > 0 ) {\n                dispatch(remote.doCheckoutStepDone(data));\n\n                //print documents\n                RemoteApi.getDocumentCode(consentCodes)\n                    .then(response => {\n                        console.log(\"PRINTING OF CONSENTS \" + response.documentCode);\n                        console.log(response);\n\n                        let code = response.documentCode;\n                        let bundleNo = null;\n                        let documentData = {\n                            documentCodes: code,\n                            bundleNo: bundleNo,\n                        };\n\n                        RemoteApiDocs.checkDocumentExistence({\n                            documentCode: code,\n                            bundleNo: bundleNo,\n                        }).then(result => {\n                            return result === false ?\n                                RemoteApiDocs.createDocument({\n                                    documentDefinitionCodes: code,\n                                    bundleNo: 1,\n                                    factory: \"MOBILE\",\n                                }) : result\n\n                        }).then(() => {\n                            return RemoteApiDocs.findDocumentInLocalStorage(documentData)\n                        }).then(result => {\n                            return !result[code] ? RemoteApiDocs.getDocuments(documentData).then(() => {\n                                return RemoteApiDocs.findDocumentInLocalStorage(documentData)\n                            }) : result\n                        }).then(result => {\n\n                            //stop loader\n                            dispatch({\n                                type: ACTIONS.CONSENT_DOCUMENTS_LOADER,\n                                data: false,\n                            });\n\n                            //set validator\n                            dispatch({\n                                type: ACTIONS.CONSENT_PRINT_DOCUMENTS,\n                            });\n\n                            openDocument(result[code]);\n\n                        }).catch(result => {\n                            console.log(result);\n\n                            //stop loader\n                            dispatch({\n                                type: ACTIONS.CONSENT_DOCUMENTS_LOADER,\n                                data: false,\n                            });\n\n                            //validator\n                            dispatch({\n                                type: ACTIONS.CONSENT_PRINT_DOCUMENTS,\n                            });\n\n                        });\n\n                    });\n\n\n            } else {\n                dispatch(remote.doCheckoutStepError(data));\n                showErrorMessage(dispatch, data);\n\n                //stop loader\n                dispatch({\n                    type: ACTIONS.CONSENT_DOCUMENTS_LOADER,\n                    data: false,\n                });\n            }\n\n\n        });\n\n};\n\nexport const printMobileConsents = (consentCodes) => (dispatch, getState) => {\n\n    dispatch(setConsentStatesToNegative());\n\n    var checkoutData = getCheckoutData(getState());\n    let customerModified = isCustomerModified(getState());\n\n    //start loader\n    dispatch({\n        type: ACTIONS.CONSENT_DOCUMENTS_LOADER,\n        data: true,\n    });\n\n    //print documents\n    RemoteApi.doSaveCheckoutData(checkoutData).\n        then(response => {\n            RemoteApi.getDocumentCode(consentCodes)\n                .then(response => {\n                    console.log(\"PRINTING OF MOBILE CONSENTS \" + response.documentCode);\n                    console.log(response);\n\n                    let code = response.documentCode;\n                    let bundleNo = 1;\n                    let documentCode = code + (bundleNo ? \"_\" + bundleNo : \"\");\n                    let documentData = {\n                        documentCodes: code,\n                        bundleNo: bundleNo,\n                    };\n\n                    RemoteApiDocs.checkDocumentExistence({\n                        documentCode: code,\n                        bundleNo: bundleNo,\n                    }).then(result => {\n                        if (result === false || customerModified) {\n                            return RemoteApiDocs.removeDocuments()\n                            .then(() => {\n                                console.log(\"Removed document!\");\n                                return RemoteApiDocs.createDocument({\n                                    documentDefinitionCodes: code,\n                                    bundleNo: bundleNo,\n                                    factory: \"MOBILE\",\n                                });\n                            }).catch(error => {\n                                console.log(\"Removed error\");\n                                console.log(error);\n                                return RemoteApiDocs.createDocument({\n                                    documentDefinitionCodes: code,\n                                    bundleNo: bundleNo,\n                                    factory: \"MOBILE\",\n                                });\n                            });\n                        } else {\n                            return result;\n                        }\n\n                    }).then(() => {\n                        return RemoteApiDocs.findDocumentInLocalStorage(documentData)\n                    }).then(result => {\n                        return !result[code] ? RemoteApiDocs.getDocuments(documentData).then(() => {\n                            return RemoteApiDocs.findDocumentInLocalStorage(documentData)\n                        }) : result\n                    }).then(result => {\n                        window.open(result[code]);\n\n                        //stop loader\n                        dispatch({\n                            type: ACTIONS.CONSENT_DOCUMENTS_LOADER,\n                            data: false,\n                        });\n\n                        //set validator\n                        dispatch({\n                            type: ACTIONS.CONSENT_PRINT_DOCUMENTS,\n                        });\n\n                    }).catch(result => {\n                        console.log(result);\n\n                        //stop loader\n                        dispatch({\n                            type: ACTIONS.CONSENT_DOCUMENTS_LOADER,\n                            data: false,\n                        });\n\n                        //validator\n                        dispatch({\n                            type: ACTIONS.CONSENT_PRINT_DOCUMENTS,\n                        });\n\n                    });\n\n                });\n        })\n        .catch(data => {\n            showErrorMessage(dispatch, data);\n\n            //stop loader\n            dispatch({\n                type: ACTIONS.CONSENT_DOCUMENTS_LOADER,\n                data: false,\n            });\n        });\n};\n\nexport const selectApu = (option) => (dispatch)=>{\n    dispatch({type: ACTIONS.START_LOAD_APU});\n    RemoteApi.selectApu(option)\n        .then(response => {\n            dispatch({\n                type: ACTIONS.SELECT_APU,\n            });\n            dispatch({type: ACTIONS.STOP_LOAD_APU});\n        });\n};\n\n\nexport const registerPrintConsentValidator = (consentType) => (dispatch, getState) => {\n    dispatch({\n        type: ACTIONS.CONSENT_TYPE_IN_PRINT_CONSENTS_VALIDATOR,\n        consentType: consentType,\n    });\n};\n\nexport const registerVerificationConsentType = (verificationConsentType) => (dispatch) => {\n    dispatch({\n        type: ACTIONS.REGISTER_VERIFICATION_CONSENT_TYPE,\n        verificationConsentType: verificationConsentType,\n    });\n};\n\nexport const fetchPosSimCardTypes = () => (dispatch, getState) => {\n    RemoteApi.getPosSimCardsTypes().then(response => dispatch(remote.fetchPosSimCardTypesDone(response)));\n};\n\nexport const pickupGeneralError = (error) => (dispatch) => {\n    console.log(\"error:\", error);\n    dispatch({\n        type: ACTIONS.PICKUP_GENERAL_ERROR,\n        error: error,\n    });\n};\n\nexport const fetchSerialNumbers = () => (dispatch, getState) => {\n    RemoteApi.getSerialNumbers()\n        .then(response => {\n            if (response.list && response.list.length > 0) {\n                let serials = response.list.reduce((map, obj) => {\n                    map[obj.entryNo] = obj.id;\n                    return map;\n                },{});\n                dispatch(remote.fetchSerialNumbersDone(serials));\n\n                dispatch(remote.updateSerialNumbersDone({status: \"RESERVED\"}));\n\n                let sapReservation = getState().cart.miniCartData.orderNr;\n                RemoteApi.paymentAndFiscalization(sapReservation).then(response => {\n                    dispatch({\n                        type: ACTIONS.PAYMENT_AND_FISCALIZATION,\n                        data: response,\n                    });\n                    RemoteApi.getSapFioriLinks(sapReservation)\n                        .then(response => dispatch({\n                            type: ACTIONS.GET_SAP_FIORI_LINKS_DONE,\n                            payload: response,\n                        }))\n                        .catch(error => console.error(\"nok\", error));\n                }).catch(error => console.error(\"nok\", error));\n            }\n            validateSerialNumbers(dispatch, getState);\n        })\n        .catch(error => console.log(error));\n};\n\nexport const changeSerialNumber = (productCode, value) => (dispatch, getState) => {\n    dispatch({\n        type: ACTIONS.CHANGE_PICKUP_SERIAL_NUMBER_VALUE,\n        productCode,\n        value,\n    });\n    validateSerialNumbers(dispatch, getState);\n};\n\nexport const validateSerialNumbers = (dispatch, getState) => {\n    dispatch({\n        type: ACTIONS.PICKUP_SERIAL_NUMBERS_VALIDATION,\n        isValid: serialNumbersValidation(getState()),\n    });\n};\n\nexport function serialNumbersValidation(storage) {\n    var isValidSim = true;\n    var isValidTerminal = true;\n\n    const serialNumbers = storage.checkout.pickup.serialNumbers;\n    if (!serialNumbers && !storage.cart.miniCartData.entries) {\n        return false;\n    }\n\n    // check all sim card serial numbers\n    storage.cart.miniCartData.entries.filter(entry => entryContainsReservableSimCard(entry)).map(entry => {\n        if(!(serialNumbers && serialNumbers[entry.entryNo] && serialNumbers[entry.entryNo].length === 19)) {\n            isValidSim = false;\n            return false;\n        }\n    });\n\n    // check all terminals serial numbers\n    storage.cart.miniCartData.entries.map((entry) => {\n        entry.terminals.map((terminal) => {\n            if(terminal.requireSerialNumber && !(serialNumbers && serialNumbers[terminal.entryNo] && serialNumbers[terminal.entryNo].length > 0)){\n                isValidTerminal = false;\n                return false;\n            }\n        });\n    });\n\n    return isValidSim && isValidTerminal;\n}\n\nexport const changeSimType = (value, bundleNo) => (dispatch) => {\n    dispatch({\n        type: ACTIONS.CHANGE_PICKUP_SIM_CARD_TYPE,\n        value,\n        bundleNo,\n    });\n};\n\nexport const pickupSerialNumbersErrorDismiss = () => ({\n    type: ACTIONS.PICKUP_SERIAL_NUMBERS_ERROR_DISMISS,\n})\n\nexport const updateOrderSerialNumbers = (request) => (dispatch, getState) => {\n    dispatch(pickupNavigationNextButtonStart());\n    dispatch(pickupSerialNumbersErrorDismiss());\n    RemoteApi.updateSerialNumbers(request)\n        .then(response => {\n            dispatch(remote.updateSerialNumbersDone({status: \"RESERVED\"}));\n\n            let sapReservation = getState().cart.miniCartData.orderNr;\n            RemoteApi.paymentAndFiscalization(sapReservation).then(response => {\n                dispatch({\n                    type: ACTIONS.PAYMENT_AND_FISCALIZATION,\n                    data: response,\n                });\n                RemoteApi.getSapFioriLinks(sapReservation)\n                    .then(response => {\n                        dispatch(pickupNavigationNextButtonDone());\n                        dispatch({\n                            type: ACTIONS.GET_SAP_FIORI_LINKS_DONE,\n                            payload: response,\n                        });\n                    }).catch(error => {\n                        dispatch(remote.pickupGeneralError(error));\n                    });\n            }).catch(error => {\n                dispatch(remote.pickupGeneralError(error));\n            });\n        }).catch(error => {\n            let response = error.responseJSON;\n            if (Array.isArray(response)) {\n                let data = response.filter(r => !!r && r.details);\n                if (data && data.length > 0) {\n                    let errors = data.reduce((array, d) => {\n                        if (d.details && d.details.length > 0) {\n                            return array.concat(d.details);\n                        }\n                    }, []);\n                    dispatch(remote.pickupSerialNumberError(errors));\n                    dispatch(remote.pickupGeneralError({\n                        responseJSON: {\n                            description: \"Jedno lub więcej urządzeń ma błędne numery seryjne\"\n                        },\n                    }));\n                }\n            } else {\n                dispatch(remote.pickupGeneralError(error));\n            }\n        });\n};\n\nexport const fetchGoodsOrderPaymentStatus = (id) => (dispatch, getState) => {\n    let override = getPaymentOverrideStatus(getState());\n    if (override) {\n        dispatch(pickupNavigationNextButtonStart());\n        RemoteApi.getPickupPaymentStatus(override)\n            .then(response => {\n                dispatch(pickupNavigationNextButtonDone());\n                dispatch({\n                    type: ACTIONS.CHECK_GOODS_ORDERS_PAYMENT_STATUS_DONE,\n                    response: \"Paid\",\n                });\n            }).catch(error => {\n                dispatch(pickupNavigationNextButtonDone());\n                remote.pickupPaymentStateusError();\n            });\n    } else {\n        dispatch(pickupNavigationNextButtonStart());\n        RemoteApi.checkPaymentStatus(id).then(response => {\n            dispatch(pickupNavigationNextButtonDone());\n            dispatch({\n                type: ACTIONS.CHECK_GOODS_ORDERS_PAYMENT_STATUS_DONE,\n                response,\n            });\n        }).catch(error => {\n                dispatch(pickupNavigationNextButtonDone());\n                remote.pickupPaymentStateusError();\n        });\n    }\n};\n\nexport const changePaymentOverride = (value) => (dispatch) => {\n    dispatch({\n        type: ACTIONS.CHANGE_PAYMENT_OVERRIDE,\n        value,\n    });\n};\n\nexport const pickupDocumentDownloadStarted = (code) => (dispatch) => {\n    dispatch({\n        type: ACTIONS.PICKUP_DOCUMENT_DOWNLOAD_START,\n        code,\n    });\n};\n\nexport const printPickupDocument = (code, bundleNo) => (dispatch) => {\n    dispatch(pickupDocumentDownloadStarted(code));\n\n    let documentData = {\n        documentCodes: code,\n        bundleNo: bundleNo,\n    };\n\n    return RemoteApiPickup.checkDocumentExistence({\n        documentCode: code,\n        bundleNo: bundleNo,\n    }).then(result => {\n        return result === false ?\n            RemoteApiPickup.createDocument({\n                documentDefinitionCodes: code,\n                bundleNo: bundleNo,\n                factory: \"MOBILE\",\n            }) : result;\n    }).then(() => {\n        return RemoteApiPickup.findDocumentInLocalStorage(documentData);\n    }).then(result => {\n        return !result[code] ? RemoteApiPickup.getDocuments(documentData).then(() => {\n            return RemoteApiPickup.findDocumentInLocalStorage(documentData);\n        }) : result;\n    }).then(result => {\n        let link = result[code];\n        window.open(result[code], \"_blank\", \"toolbar=0,location=0,menubar=0\");\n\n        dispatch({\n            type: ACTIONS.PICKUP_DOCUMENT_DOWNLOAD_DONE,\n            code: code,\n            link: result[code],\n            bundleNo: bundleNo,\n        });\n        return Promise.resolve();\n    }).catch(error => {\n        console.log(error);\n        dispatch({\n            type: ACTIONS.PICKUP_GENERAL_ERROR,\n            error: \"Błąd pobierania dokumentu\",\n        });\n        return Promise.reject();\n    });\n};\n\nexport const fetchSimCardTypes = configurationId => (dispatch, getState) => {\n    var store=getState();\n    var serialNumbers = store.checkout.reservation.serialNumbers;\n    RemoteApi.getSimCardTypes(configurationId).then(data => dispatch(remote.getSimCardTypesDone(data, serialNumbers)));\n};\n\nconst setDefaultBillingAccountIfDataNotExist = (dispatch, getState, data) => {\n    if (!requiredBillingAccountFieldExist(data)) {\n        const defaultFixAccount = getBillingAccountsData(getState()).filter(account => account.type === \"FIX\");\n        if (defaultFixAccount.length > 0) {\n            setSelectedBillingAccount(defaultFixAccount[0])(dispatch);\n        }\n        const defaultMobileAccount = getBillingAccountsData(getState()).filter(account => account.type === \"MOBILE\");\n        if (defaultMobileAccount.length > 0) {\n            setSelectedBillingAccount(defaultMobileAccount[0])(dispatch);\n        }\n    }\n    return data;\n};\n\nexport const requestBillingAccountFormData = () => (dispatch, getState) => {\n    if (!billingAccountDataRequested(getState())) {\n        dispatch(remote.getBillingAccountFormDataStart());\n        return RemoteApi.getBillingAccount()\n            .then(data => data[0])\n            .then(data => getBillingAccountForm(data))\n            .then(data => setDefaultBillingAccountIfDataNotExist(dispatch, getState, data))\n            .then(data => dispatch(remote.getBillingAccountFormDataDone(data)))\n            .then(data => dispatch(cbs.getCbsData(getBillingAccountFormData(getState()))));\n    } else {\n        return Promise.resolve();\n    }\n};\n\n\nexport const pickupNavigationNextButtonStart = () => (dispatch) => {\n    dispatch({\n        type: ACTIONS.PICKUP_NAVIGATION_NEXT_START,\n    });\n};\n\nexport const pickupNavigationNextButtonDone = () => (dispatch) => {\n    dispatch({\n        type: ACTIONS.PICKUP_NAVIGATION_NEXT_DONE\n    });\n};\n\nexport const fetchSAPSerialNumbers = () => (dispatch, getState) => {\n    dispatch(pickupNavigationNextButtonStart());\n    RemoteApi.getWarehouseSerialNumbers()\n        .then(response => {\n            if (response.list && response.list.length > 0) {\n                const serials = response.list.reduce((map, obj) => {\n                    map[obj.entryNo] = obj.id;\n                    return map;\n                },{});\n                dispatch(remote.fetchSerialNumbersDone(serials));\n\n                dispatch(remote.updateSerialNumbersDone({status: \"RESERVED\"}));\n\n                const sapReservation = getState().cart.miniCartData.orderNr;\n                RemoteApi.paymentAndFiscalization(sapReservation).then(response => {\n                    dispatch({\n                        type: ACTIONS.PAYMENT_AND_FISCALIZATION,\n                        data: response,\n                    });\n                    RemoteApi.getSapFioriLinks(sapReservation)\n                        .then(response => {\n                            dispatch(pickupNavigationNextButtonDone());\n                            dispatch({\n                                type: ACTIONS.GET_SAP_FIORI_LINKS_DONE,\n                                payload: response,\n                            });\n                        })\n                        .catch(error => dispatch(remote.pickupGeneralError(error)));\n                }).catch(error => dispatch(remote.pickupGeneralError(error)));\n            } else {\n                dispatch(remote.pickupGeneralError({description: \"Błąd pobierania danych z systemu magazynowego!\"}));\n            }\n        })\n        .catch(error => dispatch(remote.pickupGeneralError(error)));\n};\n\nexport const pickupActivation = () => (dispatch) => {\n    dispatch(remote.pickupActivationStart());\n    RemoteApi.pickupActivation()\n        .then(response => dispatch(remote.pickupActivationDone()))\n        .catch(error => dispatch(remote.pickupGeneralError(error)));\n};\n\nexport const fetchPickupLastOrder = () => (dispatch) => {\n    RemoteApi.getLastOrder().then(response => dispatch({\n        type: ACTIONS.PICKUP_LAST_ORDER_DATA,\n        data: response,\n    })).catch(error => console.log(\"LasOrderError: \", error));\n};\n\nexport const printReturnDevicesDocument = () => (dispatch, getState) => {\n\n    console.log(\"PRINTING RETURN DEVICES DOCUMENT\");\n\n    //start loader\n    dispatch({\n        type: ACTIONS.RETURN_DOCUMENT_LOADER,\n        data: true,\n    });\n\n    const code = \"RET_DEV_INFO1\";\n    const bundleNo = 1;\n    const documentData = {\n        documentCodes: code,\n        bundleNo: bundleNo,\n    };\n\n    RemoteApiDocs.checkDocumentExistence({\n        documentCode: code,\n        bundleNo: bundleNo,\n    }).then(result => {\n        return result === false ?\n            RemoteApiDocs.createDocument({\n                documentDefinitionCodes: code,\n                bundleNo: bundleNo,\n                factory: \"MOBILE\",\n            }) : result;\n\n    }).then(() => {\n        return RemoteApiDocs.findDocumentInLocalStorage(documentData);\n    }).then(result => {\n        return !result[code] ? RemoteApiDocs.getDocuments(documentData).then(() => {\n            return RemoteApiDocs.findDocumentInLocalStorage(documentData);\n        }) : result;\n    }).then(result => {\n        window.open(result[code]);\n\n        //stop loader\n        dispatch({\n            type: ACTIONS.RETURN_DOCUMENT_LOADER,\n            data: false,\n        });\n\n    }).catch(result => {\n        console.log(result);\n\n        //stop loader\n        dispatch({\n            type: ACTIONS.RETURN_DOCUMENT_LOADER,\n            data: false,\n        });\n\n    });\n};\n\nexport const forceSlotRefresh = (isForced) => (dispatch) => {\n   dispatch({type: ACTIONS.INSTALLATION_SLOT_FORCE_REFRESH, payload: isForced});\n};\n\nexport const updateConsentGroupExpanded = (listNo) => (dispatch, getState) => {\n    const store = getState();\n    const value = !(store.checkout.consents.consentGroupExpanded[listNo]);\n\n    dispatch(updateValueConsentGroupExpanded(listNo, value));\n};\n\nexport const updateValueConsentGroupExpanded = (listNo, value) => (dispatch, getState) => {\n    dispatch({\n        type: ACTIONS.CONSENT_GROUP_EXPANDED,\n        listNo: listNo,\n        value: value,\n    });\n};\n\nexport const registerAgreementConfirmationComponent = () => (dispatch) => {\n    dispatch({\n        type: ACTIONS.REGISTER_AGREEMENT_VALIDATION_COMPONENT,\n        data: true,\n    });\n};\n\nexport const validateCustomerDataFields = (data) =>(dispatch) => {\n    const dataToValidate = {};\n    Object.keys(emptyBusinessData).forEach(k => {\n        if(!!data[k]) {\n            dataToValidate[k] = data[k];\n        }\n    });\n\n    const contactToValidate = {};\n    Object.keys(emptyCustomerContact).forEach(k => {\n        if(!!data[k]) {\n            contactToValidate[k] = data[k];\n        }\n    });\n\n    if (data.mainAddress) {\n        Object.keys(emptyAddress).forEach(k => {\n            if (!!data.mainAddress[k]) {\n                dispatch(changeCustomerMainAddressFormField({name: k, value: data.mainAddress[k]}));\n            } else if (typeof data.mainAddress[k] === \"boolean\") {\n                dispatch(changeCustomerMainAddressFormField({name: k, value: data.mainAddress[k]}, false));\n            }\n        });\n    }\n    runValidator(contactToValidate, customerContactFormValidators, changeCustomerContactFormField, null, dispatch);\n    runValidator(dataToValidate, customerDataFormValidators, changeCustomerDataFormField, null, dispatch);\n}\n\nexport const requestBpgData = (nip) => (dispatch) => {\n    dispatch(remote.getBpgDataStart());\n    bodyLoaderShow();\n    RemoteApi.getBpgData(nip)\n        .then(data => {\n            if (!!data.mainAddress) {\n                data.mainAddress.wwtaddress = false;\n            }\n            if (data.isPublic) {\n                dispatch(showSpecifiedMessage(\"Aby zrealizować to zamówienie skontaktuj się z infolinią pod numerem 801 234 567 lub udaj się do najbliższego salonu.\", \"error\", \"isPublicErrorMsg\"));\n            } else {\n                dispatch(remote.getBpgDataDone(data));\n            }\n             dispatch(cbs.getCbsDataThenDispatch(data.mainAddress,true,validateCustomerDataFields,data));\n            bodyLoaderHide();\n        })\n        .catch(() => {\n            dispatch(remote.getBpgDataDone());\n            bodyLoaderHide();\n        });\n    //TODO: some logs? errors?\n};\n\nexport const requestDocumentsToMerge = () => dispatch => {\n    return new Promise((resolve, reject) =>\n        RemoteApiDocs.getDocumentsToMerge().then(documentsToMergePerBundle => {\n            dispatch({\n                type: ACTIONS.SET_DOCUMENTS_TO_MERGE_PER_BUNDLE,\n                documentsToMergePerBundle,\n            });\n            resolve(documentsToMergePerBundle);\n        }).catch(error => {\n            reject(error);\n        })\n    );\n};\n\nexport const setInitialNationality = (initialNationality) => dispatch => dispatch({\n    type: ACTIONS.SET_INITIAL_NATIONALITY,\n    payload: initialNationality\n});\n\nexport const setForeignerAvailable = (foreignerAvailable) => dispatch => dispatch({\n    type: ACTIONS.SET_FOREIGNER,\n    payload: foreignerAvailable\n});\n\n\nexport const consentsGetStatus = () => (dispatch) => {\n    RemoteApi.consentsGetStatus()\n        .then(response => {\n                console.log(response);\n                dispatch({\n                    type: ACTIONS.CONSENTS_GET_STATUS,\n                    payload: response\n                });\n         });\n};\n\nexport const consentsCreateAndSendDocument = (mail, phone, consentSections) => (dispatch) => {\n    RemoteApi.consentsCreateAndSendDocument(mail, phone, consentSections)\n        .then(response => {\n                dispatch({\n                    type: ACTIONS.CONSENTS_CREATE_AND_SEND_DOCUMENT,\n                    payload: response\n                });\n         });\n};\n\nexport function enterConsentsEmailAddress(emailAddress) {\n    return {\n        type: ACTIONS.ENTER_CONSENTS_EMAIL_ADDRESS,\n        payload: emailAddress\n    };\n};\n\nexport function enterConsentsPhoneNumber(phoneNumber) {\n    return {\n        type: ACTIONS.ENTER_CONSENTS_PHONE_NUMBER,\n        payload: phoneNumber\n    };\n};\n\nexport function enterConsentsAcknowledgmentsReadWhileTalking(acknowledged) {\n    return {\n        type: ACTIONS.ENTER_CONSENTS_ACCEPTED_ACKNOWLEDGMENTS,\n        payload: acknowledged\n    };\n};\n\nexport function resetConsentsStatus() {\n    return {\n        type: ACTIONS.CONSENTS_GET_STATUS,\n        payload: \"\"\n    };\n};\n\n"],
    "file": "data.js"
}