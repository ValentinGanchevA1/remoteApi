{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/cart/components/SummaryTable.jsx"],
    "names": ["SummaryTable", "entries", "prepareEntries", "map", "e", "i", "props", "id", "title", "monthlyHeader", "oneTimeHeader", "oneTimePrice", "monthlyPrice", "currency", "bonuses", "monthFrom", "monthTo", "highlighted", "tooltip", "deposit", "renderHeader", "deliveryMethod", "price", "replace", "feeForSelectedPaymentMethod", "parseInt", "filter", "entry", "entryIsNonEmpty", "computeTitle", "computeTooltip", "push", "from", "to", "checkoutPriceText", "firstMonthPriceText", "checkoutPriceTooltipContent", "firstMonthPriceTooltipContent", "Component", "propTypes", "PropTypes", "string", "isRequired", "any", "defaultProps", "mapStateToProps", "state"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getCartSummaryTableRows, getDepositCost} from \"../selectors\";\nimport {\n    getConsentsWithBonuses,\n    getSelectedDeliveryMethod,\n} from \"eshop/modules/checkout/selectors\";\nimport {maleOrdinal} from \"./Utils\";\nimport {SummaryTableHeader} from \"./SummaryTableHeader\";\n\nimport SummaryTableItem from \"./SummaryTableItem\";\nimport {getFeeForSelectedPaymentMethod} from \"../../checkout/selectors\";\n\nclass SummaryTable extends Component {\n    render() {\n        const entries = this.prepareEntries().map((e, i) =>\n            <SummaryTableItem\n                key={\"SummaryTableItem_\" + i} id={this.props.id + \"-item-\" + i} header={e.title}\n                monthlyHeader={this.props.monthlyHeader}\n                oneTimeHeader={this.props.oneTimeHeader} oneTimePrice={e.oneTimePrice}\n                monthlyPrice={e.monthlyPrice} currency={e.currency} bonuses={this.props.bonuses}\n                //ToDo fix double props assignment\n                monthFrom={e.monthFrom} monthFrom={e.monthTo} highlighted={e.highlighted} tooltip={e.tooltip}\n                deposit={this.props.deposit}/>\n        );\n\n        return (\n            <table id=\"SummaryTable\" className=\"u-no-margin-t opl-table opl-conf-summary-table opl-table--50-50\">\n                {this.props.renderHeader ? <SummaryTableHeader {...this.props}/> : null}\n                <tbody>\n                    {entries}\n                    {\n                        this.props.deliveryMethod &&\n                        <SummaryTableItem\n                            id={this.props.id + \"-item-delivery\"} header={\"Dostawa\"}\n                            monthlyHeader={this.props.monthlyHeader}\n                            oneTimeHeader={this.props.oneTimeHeader}\n                            oneTimePrice={this.props.deliveryMethod.price.replace(\".\", \",\")}\n                            monthlyPrice={null} currency={\"\"} tooltip={null}/>\n                    }\n                    {\n                        this.props.feeForSelectedPaymentMethod && parseInt(this.props.feeForSelectedPaymentMethod) !== 0 &&\n                        <SummaryTableItem\n                            id={this.props.id + \"-item-payment\"} header={\"Opłata za płatność przy odbiorze\"}\n                            monthlyHeader={this.props.monthlyHeader}\n                            oneTimeHeader={this.props.oneTimeHeader}\n                            oneTimePrice={this.props.feeForSelectedPaymentMethod.replace(\".\", \",\")}\n                            monthlyPrice={null} currency={\"\"} tooltip={null}/>\n                    }\n                </tbody>\n            </table>\n        );\n    }\n\n    prepareEntries() {\n        let entries = [];\n\n        this.props.entries.filter(entry => this.entryIsNonEmpty(entry)).map((e) => {\n            let title = this.computeTitle(e.monthFrom, e.monthTo);\n            let tooltip = this.computeTooltip(e.monthFrom, e.monthTo);\n\n            entries.push({...e, title, tooltip});\n        });\n\n        return entries;\n    }\n\n    entryIsNonEmpty(entry) {\n        return entry.oneTimePrice || entry.monthlyPrice || entry.monthTo;\n    }\n\n    computeTitle(from, to) {\n        if (!from && !to) {\n            return this.props.checkoutPriceText;\n        } else if (from === 1 && to === 1) {\n            return this.props.firstMonthPriceText || \"W \"+maleOrdinal(1)+\" miesiącu\";\n        } else if (from === to) {\n            return \"W \"+maleOrdinal(from)+\" miesiącu\";\n        } else {\n            return \"Od \" + from + ((to) ? \" do \" + to : \"\") + \" miesiąca\";\n        }\n    }\n\n    computeTooltip(from, to) {\n        if (!from && !to) {\n            return this.props.checkoutPriceTooltipContent;\n        } else if (from === 1 && to === 1) {\n            return this.props.firstMonthPriceTooltipContent;\n        }\n    }\n}\n\nSummaryTable.propTypes = {\n    title: PropTypes.string.isRequired,\n    monthlyHeader: PropTypes.string.isRequired,\n    oneTimeHeader: PropTypes.string.isRequired,\n    checkoutPriceText: PropTypes.string,\n    firstMonthPriceText: PropTypes.string,\n    id: PropTypes.string,\n    checkoutPriceTooltipContent: PropTypes.string,\n    firstMonthPriceTooltipContent: PropTypes.string,\n    deliveryMethod: PropTypes.any,\n    feeForSelectedPaymentMethod: PropTypes.string,\n};\n\nSummaryTable.defaultProps = {\n    checkoutPriceText: \"Opłata na start\",\n    renderHeader: true,\n};\n\nconst mapStateToProps = state => ({\n    entries: getCartSummaryTableRows(state),\n    bonuses: getConsentsWithBonuses(state),\n    deliveryMethod: getSelectedDeliveryMethod(state),\n    deposit: getDepositCost(state),\n    feeForSelectedPaymentMethod: getFeeForSelectedPaymentMethod(state),\n});\n\nexport default connect(mapStateToProps)(SummaryTable);\n"],
    "file": "SummaryTable.js"
}