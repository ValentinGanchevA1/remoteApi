{
    "version": 3,
    "sources": ["../../../../../../../../../es6/eshop/modules/cart/components/entriesList/convergent/vasModal/ConvergentVasModal.jsx"],
    "names": ["ConvergentVasModal", "props", "entries", "mandatories", "services", "productList", "hidden", "vasesWithStatuses", "prepareVasesWithStatuses", "state", "productGroups", "getProductGroups", "popup", "callback", "event", "modalContent", "onSaveWrapper", "bind", "nextProps", "_", "isEqual", "setState", "forEach", "vases", "key", "vas", "selected", "id", "propositionMandatories", "propositionId", "filter", "productCode", "map", "find", "mandatory", "presentation", "includes", "innerLists", "section", "type", "productFilter", "products", "propositionVases", "filteredProducts", "push", "product", "enhancedProducts", "p", "addonType", "deviceType", "descriptions", "migratedProducts", "productsOrder", "productCodes", "sort", "result", "length", "proposition", "Object", "keys", "markVasesAsSelected", "markVasesAsMandatory", "markVasesAsHidden", "onClose", "onSave", "onClick", "_cancelInterceptedClick", "renderSection", "command", "renderTvVasesSection", "renderCommonSection", "index", "onClickWrapped", "isExpanded", "showNetPrices", "configurables", "open", "selectedSection", "_onClickInterceptor", "_runInterceptedClick", "saveVasesButtonText", "Component", "header", "PropTypes", "string", "bundle", "cartBundle", "bool"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nimport {Expander} from \"../../../../../core/components/ui/Expander\";\nimport OraModal from \"../../../../../core/components/ui/Modal\";\nimport {compareByProductListAndMandatoryAndTitle, Filters} from \"../../../../analyzer/CartInfoUtils\";\nimport {SaveVasesButton} from \"./SaveVasesButton\";\nimport {\n    TitledFoldableProductGroup,\n    TitledFoldableTvVasesProductGroup\n} from \"../../fix/buymore/modalFragments/ModalFragments\";\nimport {prepareDevices} from \"../../../../analyzer/DeviceUtils\";\nimport {Warning} from \"../../shared/MessageBox\";\nimport {IfCollectionNotEmpty} from \"../../fix/buymore/Utils\";\n\nexport default class ConvergentVasModal extends Component  {\n    static propTypes = {\n        header: PropTypes.string,\n        bundle: PropTypes.string,\n        cartBundle: PropTypes.string,\n        propositionId: PropTypes.string,\n        selectedSection: PropTypes.string,\n        open: PropTypes.bool\n    };\n\n    /** Lifecycle **/\n\n    constructor(props) {\n        super(props);\n        const {entries, mandatories, services, productList, hidden} = props;\n        const vasesWithStatuses = this.prepareVasesWithStatuses(entries, mandatories, services, hidden);\n        this.state = {\n            productGroups: this.getProductGroups(vasesWithStatuses, productList),\n            popup: false,\n            callback: null,\n            event: null,\n            modalContent: null\n        };\n        this.onSaveWrapper = this.onSaveWrapper.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n        const {entries, mandatories, services, productList, hidden} = nextProps;\n        let productGroups = this.state.productGroups;\n        if (!_.isEqual(entries, this.props.entries) || !_.isEqual(productList, this.props.productList)) {\n            const vasesWithStatuses = this.prepareVasesWithStatuses(entries, mandatories, services, hidden);\n            productGroups = this.getProductGroups(vasesWithStatuses, productList);\n        }\n        this.setState({\n            productGroups\n        });\n    }\n\n    /** Helpers **/\n\n    markVasesAsSelected(entries, vasesWithStatuses) {\n        _.forEach(entries, (vases, key) => {\n            _.forEach(vases, vas => {\n                vas.selected = vasesWithStatuses[key][vas.id];\n            });\n        })\n    }\n\n    markVasesAsMandatory(vasesWithStatuses, entries, mandatories) {\n\n        _.forEach(mandatories, (propositionMandatories, propositionId) => {\n            propositionMandatories\n                .filter(productCode => entries[propositionId] && entries[propositionId][productCode])\n                .map(productCode => vasesWithStatuses[propositionId].find(vas => vas.id === productCode))\n                .filter(vas => vas)\n                .forEach(vas => vas.mandatory = true);\n        });\n    }\n\n    markVasesAsHidden(vasesWithStatuses, hidden) {\n        _.forEach(vasesWithStatuses, vases => {\n            _.forEach(vases, vas => {\n                vas.presentation = _.includes(hidden, vas.id) ? \"hidden\" : \"visible\";\n            });\n        });\n    }\n\n    getProductGroups(vasesWithStatuses, productList) {\n        return (productList && productList.innerLists || [])\n            .map(section => {\n                const type = section.productFilter;\n                let products = [];\n                type && _.forEach(vasesWithStatuses, (propositionVases, propositionId) => {\n                    const filteredProducts = Filters()[type](propositionVases) || [];\n\n                    products.push(\n                        ...filteredProducts\n                        .map(product => ({...product, propositionId}))\n                    );\n                });\n                const enhancedProducts = [\n                    ...products.filter(p => (!!p.addonType || type === 'VOICE_VASES') && !p.mandatory),\n                    ...prepareDevices(products.filter(p => !!p.deviceType), this.props.descriptions, this.props.migratedProducts)];\n                if (type !== \"VOICE_VASES\") {\n                    const productsOrder = section.productCodes ? section.productCodes : [];\n                    enhancedProducts.sort(compareByProductListAndMandatoryAndTitle(productsOrder));\n                }\n                return ({section, products: enhancedProducts});\n            })\n            .filter(result => result.products && result.products.length > 0);\n    }\n\n    prepareVasesWithStatuses(entries, mandatories, services, hidden) {\n        let vasesWithStatuses = {};\n        _.forEach(services, (proposition, propositionId) => {\n            vasesWithStatuses[propositionId] = proposition.map(vas => ({\n                ...vas,\n                selected: false,\n                mandatory: false,\n                presentation: \"visible\"\n            }));\n        });\n        if (Object.keys(vasesWithStatuses).length === 0) {\n            return null;\n        }\n\n        this.markVasesAsSelected(vasesWithStatuses, entries);\n        this.markVasesAsMandatory(vasesWithStatuses, entries, mandatories);\n        this.markVasesAsHidden(vasesWithStatuses, hidden);\n        return vasesWithStatuses;\n    }\n\n    /** Callbacks **/\n\n    onSaveWrapper(){\n        this.props.onClose();\n        this.props.onSave();\n    }\n\n    _onClickInterceptor(productCode, propositionId, modalContent) {\n        return (event) => {\n            this.setState({\n                popup: true,\n                callback: this.props.onClick(productCode, propositionId),\n                event: event,\n                modalContent: modalContent\n            });\n        }\n    }\n\n    _runInterceptedClick() {\n        this.state.callback(this.state.event);\n        this._cancelInterceptedClick();\n    }\n\n    _cancelInterceptedClick() {\n        this.setState({\n            popup: false,\n            callback: null,\n            event: null,\n            modalContent: null\n        });\n    }\n\n    /** Render **/\n\n\n    render(){\n\n        function renderSection(command){\n            if (command.type  === \"TV_VASES\"){\n                return renderTvVasesSection(command);\n            }\n            return renderCommonSection(command);\n        }\n\n        function renderTvVasesSection(command){\n            return (\n                    <IfCollectionNotEmpty array={command.products} key={\"ICNE_\" + command.index}>\n                        <TitledFoldableTvVasesProductGroup\n                            key={\"TPG_\" + command.index}\n                            uid={\"TPG_\" + command.index}\n                            idx={command.type}\n                            section={command.section}\n                            products={command.products}\n                            onClick={command.onClick}\n                            onClickWrapped={command.onClickWrapped}\n                            isExpanded={command.isExpanded}\n                            net={command.showNetPrices}\n                            configurables={command.configurables}\n                            descriptions={command.descriptions}\n                        />\n                    </IfCollectionNotEmpty>\n            );\n        }\n\n        function renderCommonSection( command) {\n            return (\n                <IfCollectionNotEmpty array={command.products} key={\"ICNE_\" + command.index}>\n                    <TitledFoldableProductGroup\n                        key={\"TPG_\" + command.index}\n                        uid={\"TPG_\" + command.index}\n                        idx={command.type}\n                        section={command.section}\n                        products={command.products}\n                        onClick={command.onClick}\n                        onClickWrapped={command.onClickWrapped}\n                        isExpanded={command.isExpanded}\n                        net={command.showNetPrices}\n                        configurables={command.configurables}\n                    />\n                </IfCollectionNotEmpty>\n            );\n        }\n\n        return(\n            <OraModal open={this.props.open} onClose={this.props.onClose} size=\"medium\">\n                <p className=\"h3\">{this.props.descriptions && this.props.descriptions['vasModalTitle'] || 'Dobierz usługi dodatkowe'}</p>\n                <Expander variant=\"section\" className=\"opl-vas-modal-expander\" scrollToSelected={false}>\n                    <div className=\"o-separator o-separator--m\"/>\n                    {\n                        this.state.productGroups\n                            .map(({section, products}, index) => {\n                                const type = section.productFilter;\n                                const isExpanded = this.props.selectedSection === type;\n                                const key = \"TPG_\" + index + this.props.open;\n                                return (\n                                    <div key={key} className=\"o-separator o-separator--m\">\n                                        {\n                                            renderSection(\n                                                {\n                                                    ...this.props,\n                                                    onClickWrapped: this._onClickInterceptor.bind(this),\n                                                    index:  index,\n                                                    section: section,\n                                                    products: products,\n                                                    isExpanded: isExpanded,\n                                                    type: type\n                                                }\n                                            )\n                                        }\n                                    </div>\n                                );\n                            })\n                    }\n                </Expander>\n                {\n                    this.state.popup &&\n                    <Warning\n                        onAccept={this._runInterceptedClick.bind(this)}\n                        onCancel={this._cancelInterceptedClick.bind(this)}\n                        modalContents={this.state.modalContent}\n                    />\n                }\n                <div className=\"l-row\">\n                    <div className=\"l-col l-col-small-12 l-col-medium-8 l-col-8\"/>\n                </div>\n                <SaveVasesButton\n                    saveVasesClicked={this.onSaveWrapper}\n                    saveVasesButtonText={this.props.saveVasesButtonText}\n                />\n            </OraModal>\n        )\n    }\n}"],
    "file": "ConvergentVasModal.js"
}