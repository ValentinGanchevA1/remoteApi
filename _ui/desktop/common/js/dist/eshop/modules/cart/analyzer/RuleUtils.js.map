{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/cart/analyzer/RuleUtils.js"],
    "names": ["doesRuleApplyBySources", "productList", "rule", "ruleType", "sourceVases", "every", "vas", "includes", "some", "product", "doesRuleApply", "targetVases", "doesDisableRuleApply", "doesGroupApply", "group", "triggers", "filter", "conditionalProducts", "length", "doesVisibilityRuleApply", "target", "checkGroup", "commonPart", "targetProducts", "max", "valid", "reason", "actualProducts", "slice", "expected", "number", "min", "applyRequireRule", "combination", "newProducts", "products", "autoadded", "concat", "applyRequireRuleWithoutUpdatingAutoadded", "applyDisableRule", "isRuleFulfilled", "dilateProductList", "requireRules", "changed", "forEach", "type", "RuleType", "REQUIRE_SOME", "erodeProductList", "disableRules", "validate", "validationGroups", "validationResult", "groupApplies", "findProductsToHide", "bundleProducts", "productsThatCanBeHidden", "requireShowRules", "applyingRules", "r", "source", "isProductToHide", "applyingNoneRules", "applyingOtherRules"],
    "mappings": "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",
    "sourcesContent": ["import {sumArraysWithoutDupes, removeAllFromArray, commonPartOfArrays} from \"./ArrayUtils\";\nimport RuleType from \"../../checkout/constants/RuleTypeEnum\";\n\nconst doesRuleApplyBySources = (productList, rule) => {\n    if(\"ALL\" === rule.ruleType){\n        return rule.sourceVases.every(vas => productList.includes(vas));\n    }\n    if (\"NONE\" === rule.ruleType){\n        return !productList.some(product => rule.sourceVases.includes(product));\n    }\n    return rule.sourceVases.some(vas => \"ANY\" === vas) || productList.some(product => rule.sourceVases.includes(product));\n}\n\nconst doesRuleApply = (productList, rule) => {\n    return doesRuleApplyBySources(productList,rule) && !rule.targetVases.every(product => productList.includes(product));\n};\n\nconst doesDisableRuleApply = (productList, rule) => {\n    return doesRuleApplyBySources(productList, rule) && rule.targetVases.some(product => productList.includes(product));\n};\n\nconst doesGroupApply = (productList, group) => {\n    let triggers = productList.filter(product => group.conditionalProducts.includes(product));\n    return [triggers.length > 0, triggers];\n};\n\nconst doesVisibilityRuleApply = (product, rule) => {\n    return rule.targetVases.some(target => target === product);\n};\n\nconst checkGroup = (productList, group, triggers) => {\n    let commonPart = commonPartOfArrays(productList, group.targetProducts);\n    if(group.max && commonPart.length > group.max){\n        return {\n            valid: false,\n            reason: \"There are too many products in this group\",\n            actualProducts: commonPart.slice(),\n            expected: group.targetProducts,\n            triggers: triggers,\n            number: group.max\n        };\n    }\n    if(group.min && commonPart.length < group.min){\n        return {\n            valid: false,\n            reason: \"There are too few products from this group\",\n            actualProducts: commonPart.slice(),\n            expected: group.targetProducts,\n            triggers: triggers,\n            number: group.min\n        };\n    }\n    return {valid:true};\n};\n\nfunction applyRequireRule(combination, rule){\n    let newProducts = removeAllFromArray(rule.targetVases,combination.products);\n    combination.autoadded = combination.autoadded.concat(newProducts);\n    combination.products = combination.products.concat(newProducts);\n}\n\nfunction applyRequireRuleWithoutUpdatingAutoadded(combination, rule){\n    let newProducts = removeAllFromArray(rule.targetVases,combination.products);\n    combination.products = combination.products.concat(newProducts);\n}\n\nconst applyDisableRule = (combination, rule) => {\n    combination.products = removeAllFromArray(combination.products, rule.targetVases);\n};\n\nconst isRuleFulfilled = (productList, rule) => {\n    return doesRuleApplyBySources(productList, rule);\n};\n\nexport function dilateProductList(combination, requireRules){\n    let changed;\n    do {\n        changed = false;\n        requireRules.forEach(rule => {\n            if(doesRuleApply(combination.products, rule)){\n                if(rule.type === RuleType.REQUIRE_SOME){\n                    applyRequireRuleWithoutUpdatingAutoadded(combination, rule);\n                } else {\n                    applyRequireRule(combination, rule);\n                }\n                changed = true;\n            }\n        });\n    } while (changed);\n    return combination;\n}\n\nexport function erodeProductList(combination, disableRules){\n    disableRules.forEach(rule => {\n        if(doesDisableRuleApply(combination.products, rule)){\n            applyDisableRule(combination, rule);\n        }\n    });\n    return combination;\n}\n\nexport const validate = (combination, validationGroups) => {\n    let validationResult = {valid: true};\n    for(let group of validationGroups){\n        let [groupApplies, triggers] = doesGroupApply(combination.products, group);\n        if(groupApplies){\n            validationResult = checkGroup(combination.products,group,triggers);\n            if(!validationResult.valid){\n                break;\n            }\n        }\n    }\n    combination.validationResult = validationResult;\n    return combination;\n};\n\nexport const findProductsToHide = (bundleProducts, productsThatCanBeHidden, requireShowRules) => {\n    return productsThatCanBeHidden.filter(product => {\n        let applyingRules = requireShowRules.filter(rule => doesVisibilityRuleApply(product, rule));\n        if (applyingRules.some(r => r.source === \"MR\")) {\n            return isProductToHide(applyingRules.filter(r => r.source === \"MR\"), bundleProducts);\n        }\n        return isProductToHide(applyingRules, bundleProducts);\n    });\n};\n\nconst isProductToHide = (applyingRules, bundleProducts) => {\n    let applyingNoneRules = applyingRules.filter(rule => \"NONE\" === rule.ruleType);\n    let applyingOtherRules = applyingRules.filter(rule => \"NONE\" !== rule.ruleType);\n    return (applyingNoneRules.length > 0 && applyingNoneRules.some(rule => !isRuleFulfilled(bundleProducts, rule)))\n        || (applyingOtherRules.length > 0 && !applyingOtherRules.some(rule => isRuleFulfilled(bundleProducts, rule)));\n};"],
    "file": "RuleUtils.js"
}