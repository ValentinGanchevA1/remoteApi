{
    "version": 3,
    "sources": ["../../../../../../../../../es6/eshop/modules/cart/components/entriesList/convergent/vasModal/AnalyzerAdapter.jsx"],
    "names": ["AnalyzerAdapter", "props", "state", "createState", "onClick", "bind", "onSave", "nextProps", "setState", "prevProps", "forceCartRecalculation", "triggerCartRecalculation", "_", "isEqual", "configurables", "map", "entry", "relations", "recalculateCart", "productStatuses", "createProductStatuses", "presentableProducts", "cartProducts", "autoadded", "collectAutoadded", "hidden", "getHiddenProducts", "console", "log", "initializeProductStatuses", "markProductsInCartAsSelected", "entries", "reduce", "Object", "assign", "propositionId", "entryType", "forEach", "products", "key", "product", "productList", "isArray", "productCode", "hasProductBeenSelected", "productStatusChanged", "uniq", "flatMap", "callback", "updatedProductsList", "validationResult", "extendedData", "hiddenVases", "factory", "calculateFactory", "selectedProducts", "extractSelectedProductsFromProductStatuses", "find", "proposition", "addedProduct", "removedProduct", "concat", "hiddenProducts", "selectedVases", "valid", "result", "bundleType", "e", "keys", "filter", "selected", "includes", "productCodeToSend", "getProductCodeToSend", "push", "updateCartProducts", "propositionConfigurables", "configurable", "factoryName", "FactoryType", "FIX", "isVas", "services", "service", "id", "getProductCodeToSendForMobileVas", "bonusVasRelation", "relation", "type", "RelationType", "REQUIRE", "targetVases", "sourceVases", "window", "event", "preventDefault", "updateCartContents", "unselectable", "productSelected", "mandatories", "mandatoryProducts", "child", "React", "cloneElement", "children", "singlePropositionId", "Component", "propTypes", "PropTypes", "object", "array", "isRequired", "bool", "string", "any", "func", "defaultProps"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport _ from \"lodash\";\n\nimport {analyzeCombination, mobileAnalyzeCombination} from \"../../../../analyzer/Analyzer\";\nimport RelationType from \"../../RelationTypeEnum\";\nimport FactoryType from \"../../../../../core/constants/FactoryTypeEnum\";\n\n/**\n * Adapter accepts at most a single child\n */\nexport default class AnalyzerAdapter extends Component  {\n\n    /** Lifecycle **/\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.createState(props);\n        this.onClick = this.onClick.bind(this);\n        this.onSave = this.onSave.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState(this.createState(nextProps));\n    }\n\n    componentDidUpdate(prevProps){\n        let forceCartRecalculation = this.props.triggerCartRecalculation === true && this.props.triggerCartRecalculation !== prevProps.triggerCartRecalculation;\n        if(forceCartRecalculation || !_.isEqual(prevProps.configurables.map((entry) => entry.relations), this.props.configurables.map((entry) => entry.relations))) {\n            this.recalculateCart();\n        }\n    }\n\n    createState(props) {\n        const state = {\n            productStatuses: this.createProductStatuses(props.presentableProducts, props.cartProducts),\n            autoadded: this.collectAutoadded(props) || [],\n            hidden: this.getHiddenProducts(props) ? this.getHiddenProducts(props) : []\n        };\n        console.log(state.productStatuses);\n        return state;\n    }\n\n    /** Helpers **/\n\n    createProductStatuses(presentableProducts, cartProducts) {\n        let productStatuses = this.initializeProductStatuses(presentableProducts);\n        this.markProductsInCartAsSelected(productStatuses, cartProducts);\n        return productStatuses;\n    }\n\n    collectAutoadded(props){\n        return props.entry.entries.reduce((autoadded, entry) => Object.assign(autoadded, {[entry.propositionId]: entry.entryType === \"FIX\" ? entry.autoadded : null}) ,{});\n    }\n\n    initializeProductStatuses(presentableProducts) {\n        let productStatuses = {};\n        _.forEach(presentableProducts, (products, key) => {\n            productStatuses[key] = {};\n            _.forEach(products, product => {\n                productStatuses[key][product] = false;\n            });\n        });\n        return productStatuses;\n    }\n\n    markProductsInCartAsSelected(productStatuses, cartProducts) {\n        _.forEach(cartProducts, (productList, key) => {\n            if (!productStatuses[key]) {\n                productStatuses[key] = {};\n            }\n            if (_.isArray(productList)) {\n                _.forEach(productList, product => productStatuses[key][product] = true);\n            } else {\n                productStatuses[productList] = true;\n            }\n        });\n    }\n\n    hasProductBeenSelected(productCode, propositionId) {\n        return this.state.productStatuses[propositionId] && this.state.productStatuses[propositionId][productCode];\n    }\n\n    productSelected(productCode, propositionId){\n        if (this.hasProductBeenSelected(productCode, propositionId)){\n            return;\n        }\n        this.productStatusChanged(productCode, propositionId);\n    }\n\n    getHiddenProducts(props) {\n        return _.uniq(_.flatMap(props.entry.entries, entry => entry.hidden));\n    }\n\n    recalculateCart(){\n        this.productStatusChanged(null, null, () => {});\n    }\n\n    productStatusChanged(productCode, propositionId, callback) {\n        const hasProductBeenSelected = this.hasProductBeenSelected(productCode, propositionId);\n\n        let updatedProductsList = {};\n        let autoadded = {};\n        let validationResult = {};\n        let extendedData = {};\n        let hiddenVases = [];\n\n        _.forEach(this.state.productStatuses, (entry, key) => {\n            let factory = this.calculateFactory(key);\n            const selectedProducts = this.extractSelectedProductsFromProductStatuses(entry);\n            const configurables = this.props.configurables.find(proposition => proposition.propositionId === key);\n            if (!configurables) {\n                return;\n            }\n\n            let addedProduct = null;\n            let removedProduct = null;\n            if (key === propositionId) {\n                if (!hasProductBeenSelected) {\n                    addedProduct = productCode;\n                } else {\n                    removedProduct = productCode;\n                }\n            }\n            if (factory === \"FIX\") {\n                [updatedProductsList[key], autoadded[key], validationResult[key], extendedData] = analyzeCombination(\n                    configurables,\n                    selectedProducts,\n                    this.state.autoadded[key] || [],\n                    addedProduct,\n                    removedProduct\n                );\n\n                hiddenVases = extendedData ? hiddenVases.concat(extendedData.hiddenProducts) : hiddenVases;\n            } else {\n                var selectedVases = mobileAnalyzeCombination(\n                     configurables,\n                     selectedProducts,\n                     addedProduct,\n                     removedProduct\n                );\n                [updatedProductsList[key], autoadded[key], validationResult[key], extendedData] = [selectedVases, [], {valid:true}, []];\n            }\n        });\n\n        if (!_.find(validationResult, result => !result.valid)) {\n            this.setState({\n                    productStatuses: this.createProductStatuses(this.props.presentableProducts, updatedProductsList),\n                    autoadded: autoadded,\n                    hidden: hiddenVases\n                },\n                callback\n            );\n        } else {\n            console.log(\"Validation failed\");\n        }\n    }\n\n    calculateFactory(propositionId) {\n        if (this.props.entry.bundleType === \"HARDBUNDLE\") {\n            let entry = this.props.entry.entries.find(e => e.propositionId === propositionId);\n            if (entry) {\n                return entry.entryType;\n            } else {\n                return \"FIX\";\n            }\n        } else {\n            return \"FIX\";\n        }\n    }\n\n    extractSelectedProductsFromProductStatuses(productStatuses){\n        if(!productStatuses){\n            return [];\n        }\n        return Object.keys(productStatuses).filter(productCode => productStatuses[productCode]);\n    }\n\n    updateCartContents() {\n        const selectedProducts = {};\n        _.forEach(this.state.productStatuses, (proposition, propositionId) => {\n                selectedProducts[propositionId] = [];\n                _.forEach(proposition, (selected, productCode) => {\n                    const autoadded = this.state.autoadded[propositionId] && this.state.autoadded[propositionId].includes(productCode);\n\n                    if (selected && !autoadded) {\n                        const productCodeToSend = this.getProductCodeToSend(productCode, propositionId);\n                        selectedProducts[propositionId].push(productCodeToSend);\n                    }\n                });\n        });\n        this.props.updateCartProducts(selectedProducts);\n    }\n\n    getProductCodeToSend(productCode, propositionId) {\n        const propositionConfigurables = this.props.configurables.find(configurable => configurable.propositionId === propositionId);\n        if(propositionConfigurables.factoryName === FactoryType.FIX) {\n            return productCode;\n        } else {\n            const isVas = propositionConfigurables.services.map(service => service.id).includes(productCode);\n            return isVas ? this.getProductCodeToSendForMobileVas(propositionConfigurables, productCode) : productCode;\n        }\n    }\n\n    getProductCodeToSendForMobileVas(propositionConfigurables, productCode) {\n        const bonusVasRelation = propositionConfigurables.relations.find(relation => relation.type === RelationType.REQUIRE && relation.targetVases.includes(productCode));\n        return bonusVasRelation ? bonusVasRelation.sourceVases[0] : productCode;\n    }\n\n    /** Exposed method **/\n    onRemove(product, propositionId){\n        if (window.event) {\n            event.preventDefault();\n        }\n        this.productStatusChanged(product, propositionId, this.updateCartContents);\n    }\n\n    /** Callbacks **/\n\n    onClick(product, propositionId) {\n        return (event) => {\n            event.preventDefault();\n            if (this.props.unselectable) {\n                this.productStatusChanged(product, propositionId);\n            } else {\n                this.productSelected(product, propositionId);\n            }\n        }\n    }\n\n    onSave() {\n        this.updateCartContents();\n    }\n\n    /** Render **/\n\n    render(){\n        let mandatories = {};\n        _.forEach(this.props.configurables, configurables => {\n            mandatories[configurables.propositionId] = configurables.mandatoryProducts;\n        });\n        let child = React.cloneElement(this.props.children, {\n            entries: this.props.singlePropositionId ? this.state.productStatuses[this.props.singlePropositionId] : this.state.productStatuses,\n            mandatories : this.props.singlePropositionId ? mandatories[this.props.singlePropositionId] : mandatories,\n            hidden: this.state.hidden,\n            onClick: this.onClick,\n            onSave: this.onSave\n        });\n        return (<div>{child}</div>);\n    }\n}\n\nAnalyzerAdapter.propTypes = {\n    entry: PropTypes.object,\n    configurables: PropTypes.array.isRequired,\n    cartProducts: PropTypes.object.isRequired,\n    presentableProducts: PropTypes.object,\n    unselectable: PropTypes.bool,\n    singlePropositionId: PropTypes.string,\n    children: PropTypes.any,\n    updateCartProducts: PropTypes.func,\n    triggerCartRecalculation: PropTypes.bool\n};\n\nAnalyzerAdapter.defaultProps = {\n    triggerCartRecalculation: false\n};"],
    "file": "AnalyzerAdapter.js"
}