{
    "version": 3,
    "sources": ["../../../../../../../../../../es6/eshop/modules/cart/components/entriesList/fix/buymore/buttons/AddGadgetsButton.jsx"],
    "names": ["preventDefaultWrapper", "handler", "event", "preventDefault", "AddGadgetsButton", "props", "state", "modalVisible", "addButtonClicked", "bind", "closeModalClicked", "console", "log", "setState", "productCode", "adapter", "removeProduct", "presentable", "sidCode", "min", "max", "targetProducts", "map", "product", "id", "conditionalProducts", "type", "entry", "gadgets", "length", "icon", "label", "configurables", "createCustomValidationGroup", "header", "inner", "Component"],
    "mappings": ";;;;;;;AAAA;AAEA;;;;;;AAKA,MAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,OAAD;AAAA,WAAa,UAACC,KAAD,EAAW;AAClDA,MAAAA,KAAK,CAACC,cAAN;AACAF,MAAAA,OAAO,CAACC,KAAD,CAAP;AACH,KAH6B;AAAA,GAA9B;;MAKqBE,gB;;;;;AAEjB,8BAAYC,KAAZ,EAAkB;AAAA;;AAAA;AACd,gCAAMA,KAAN;AACA,YAAKC,KAAL,GAAa;AACTC,QAAAA,YAAY,EAAE;AADL,OAAb;AAGA,YAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,2CAAxB;AACA,YAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,2CAAzB;AANc;AAOjB;;;;yCAEiB;AACdE,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAKC,QAAL,CAAc;AAACN,UAAAA,YAAY,EAAG;AAAhB,SAAd,EAAqC,YAAU;AAC3CI,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAA4B,CAAC,CAAC,KAAKN,KAAL,CAAWC,YAArD;AACH,SAFoC,CAEnCE,IAFmC,CAE9B,IAF8B,CAArC;AAGH;;;0CAEmBK,W,EAAY;AAC5BH,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAA0BE,WAAtC;;AACA,YAAG,KAAKC,OAAL,IAAgB,KAAKA,OAAL,CAAaC,aAAhC,EAA8C;AAC1C,eAAKD,OAAL,CAAaC,aAAb,CAA2BF,WAA3B;AACH;AACJ;;;0CAEkB;AACf,aAAKD,QAAL,CAAc;AAACN,UAAAA,YAAY,EAAG;AAAhB,SAAd,EAAsC,YAAU;AAC5CI,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAA4B,CAAC,CAAC,KAAKN,KAAL,CAAWC,YAArD;AACH,SAFqC,CAEpCE,IAFoC,CAE/B,IAF+B,CAAtC;AAGH;;;kDAE2BQ,W,EAAY;AACpC,eAAO,CAAC;AACJC,UAAAA,OAAO,EAAE,IADL;AAEJC,UAAAA,GAAG,EAAE,CAFD;AAGJC,UAAAA,GAAG,EAAE,CAHD;AAIJC,UAAAA,cAAc,EAAEJ,WAAW,CAACK,GAAZ,CAAgB,UAAAC,OAAO;AAAA,mBAAIA,OAAO,CAACC,EAAZ;AAAA,WAAvB,CAJZ;AAKJC,UAAAA,mBAAmB,EAAER,WAAW,CAACK,GAAZ,CAAgB,UAAAC,OAAO;AAAA,mBAAIA,OAAO,CAACC,EAAZ;AAAA,WAAvB,CALjB;AAMJE,UAAAA,IAAI,EAAE;AANF,SAAD,CAAP;AAQH;;;+BAEO;AAAA;;AACA,4BACI,0CACK,CAAC,CAAC,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,OAAlB,IAA6B,KAAKvB,KAAL,CAAWsB,KAAX,CAAiBC,OAAjB,CAAyBC,MAAzB,KAAoC,CAAlE,kBACI,6BAAC,yBAAD;AAAa,UAAA,YAAY,EAAC;AAA1B,wBACG;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAE7B,qBAAqB,CAAC,KAAKQ,gBAAN;AAA1C,wBACI;AAAO,UAAA,SAAS,EAAC;AAAjB,wBACI,yDACI,sDACI,6BAAC,kBAAD;AAAa,UAAA,IAAI,EAAE,KAAKH,KAAL,CAAWyB;AAA9B,UADJ,eAEI,6BAAC,uBAAD;AAAW,UAAA,KAAK,EAAE,KAAKzB,KAAL,CAAW0B;AAA7B,UAFJ,eAGI,6BAAC,wBAAD;AAAY,UAAA,IAAI,EAAE,MAAlB;AAA0B,UAAA,IAAI,EAAE;AAAhC,UAHJ,CADJ,CADJ,CADJ,CADH,CAFT,eAgBI,6BAAC,mCAAD;AACI,UAAA,aAAa,EAAE,KAAK1B,KAAL,CAAW2B,aAD9B;AAEI,UAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWsB,KAFtB;AAGI,UAAA,YAAY,EAAE,KAAKM,2BAAL,CAAiC,KAAK5B,KAAL,CAAWY,WAA5C,CAHlB;AAII,UAAA,YAAY,EAAE,KAJlB;AAKI,UAAA,GAAG,EAAE,aAACF,OAAD;AAAA,mBAAa,MAAI,CAACA,OAAL,GAAeA,OAA5B;AAAA;AALT,wBAOI,6BAAC,uBAAD;AACI,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAW6B,MADtB;AAEI,UAAA,IAAI,EAAE,KAAK5B,KAAL,CAAWC,YAFrB;AAGI,UAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWY,WAHzB;AAII,UAAA,OAAO,EAAE,KAAKP,iBAJlB;AAKI,UAAA,WAAW,EAAE,KAAKL,KAAL,CAAW8B;AAL5B,UAPJ,CAhBJ,CADJ;AAkCP;;;IA7EyCC,gB",
    "sourcesContent": ["import React, {Component} from \"react\";\n\nimport FixGadgetModal from \"../FixGadgetModal\";\nimport {FixAnalyzerAdapter} from \"../AnalyzerAdapter\";\nimport {FloatingBox, LabelCell, ButtonCell} from \"../../BoxFragments\";\nimport {GraphicCell} from \"../../Utils\";\n\nconst preventDefaultWrapper = (handler) => (event) => {\n    event.preventDefault();\n    handler(event);\n}\n\nexport default class AddGadgetsButton extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            modalVisible: false\n        }\n        this.addButtonClicked = this.addButtonClicked.bind(this);\n        this.closeModalClicked = this.closeModalClicked.bind(this);\n    }\n\n    addButtonClicked(){\n        console.log(\"Modal clicked\");\n        this.setState({modalVisible : true}, function(){\n            console.log(\"This state modalVisible: \"+!!this.state.modalVisible);\n        }.bind(this));\n    }\n\n    removeButtonClicked(productCode){\n        console.log(\"Remove button clicked: \"+productCode);\n        if(this.adapter && this.adapter.removeProduct){\n            this.adapter.removeProduct(productCode);\n        }\n    }\n\n    closeModalClicked(){\n        this.setState({modalVisible : false}, function(){\n            console.log(\"This state modalVisible: \"+!!this.state.modalVisible);\n        }.bind(this));\n    }\n\n    createCustomValidationGroup(presentable){\n        return [{\n            sidCode: null,\n            min: 0,\n            max: 1,\n            targetProducts: presentable.map(product => product.id),\n            conditionalProducts: presentable.map(product => product.id),\n            type: null\n        }]\n    }\n\n    render(){\n            return(\n                <div>\n                    {(!this.props.entry.gadgets || this.props.entry.gadgets.length === 0) &&\n                        (<FloatingBox boxClassName=\"u-padding-left-l u-padding-right-l u-box-shadow--s u-box-shadow-hover\">\n                            <a href=\"#\" onClick={preventDefaultWrapper(this.addButtonClicked)}>\n                                <table className=\"u-table-fixed\">\n                                    <tbody>\n                                        <tr>\n                                            <GraphicCell icon={this.props.icon}/>\n                                            <LabelCell label={this.props.label}/>\n                                            <ButtonCell icon={\"plus\"} link={\"#\"}/>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </a>\n                        </FloatingBox>)\n                    }\n                    <FixAnalyzerAdapter\n                        configurables={this.props.configurables}\n                        entry={this.props.entry}\n                        customGroups={this.createCustomValidationGroup(this.props.presentable)}\n                        unselectable={false}\n                        ref={(adapter) => this.adapter = adapter}\n                    >\n                        <FixGadgetModal\n                            label={this.props.header}\n                            open={this.state.modalVisible}\n                            services={this.props.presentable}\n                            onClose={this.closeModalClicked}\n                            productList={this.props.inner}\n                        />\n                    </FixAnalyzerAdapter>\n                </div>\n            );\n    }\n}"],
    "file": "AddGadgetsButton.js"
}