{
    "version": 3,
    "sources": ["../../../../../../../../../es6/eshop/modules/cart/components/entriesList/convergent/tvPackage/ConvergentTvPackageModal.jsx"],
    "names": ["updateFixConfigurablesForEntry", "fixConfigurable", "convergentEntry", "customFilters", "tvPackages", "map", "product", "propositionId", "migratedProducts", "fixEntries", "entries", "filter", "entry", "entryType", "find", "migratedTvPackages", "p", "addonType", "relations", "concat", "extendedPackages", "tv", "id", "productCode", "inputType", "extendedPackagesCodes", "extendedPack", "tvPackage", "includes", "ConvergentTvPackageModal", "props", "descriptions", "includedInThePackageTitle", "subModalTitle", "modalTitle", "subModalContents", "modalContents", "configurables", "JSON", "parse", "stringify", "convergentConfigurables", "configurablesEntry", "factoryName", "CartEntryType", "FIX", "updateCartProducts", "modalVisible", "header", "closeModalClicked", "inner", "showNetPrices", "getIncludedInThePackageTitle", "Component"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport FixTVModal from \"../../fix/buymore/FixTvModal\";\nimport ConvergentAnalyzerAdapter from \"../vasModal/ConvergentAnalyzerAdapter\";\nimport {createCustomRules} from \"../../../../analyzer/TvPackageUtils\";\nimport CartEntryType from \"../../../../../checkout/constants/CartEntryTypeEnum\";\n\nconst updateFixConfigurablesForEntry = (fixConfigurable, convergentEntry, customFilters) => {\n    fixConfigurable.tvPackages = fixConfigurable.tvPackages.map(product => ({...product, propositionId : fixConfigurable.propositionId}));\n    let migratedProducts = [];\n    let fixEntries = convergentEntry.entries.filter(entry => entry.entryType === \"FIX\");\n    if (fixEntries && fixEntries.find(entry => entry.migratedProducts)) {\n        migratedProducts = fixEntries.find(entry => entry.migratedProducts).migratedProducts;\n    }\n    let migratedTvPackages = migratedProducts.filter(p => !!p.addonType);\n    fixConfigurable.relations = fixConfigurable.relations.concat(createCustomRules(fixConfigurable.tvPackages,migratedTvPackages, customFilters));\n    let extendedPackages = migratedTvPackages.map(tv => {\n        tv.id = tv.productCode;\n        tv.inputType = \"MIGRATED\";\n        return tv;\n    });\n    let extendedPackagesCodes = extendedPackages.map(extendedPack => extendedPack.productCode);\n    fixConfigurable.tvPackages = fixConfigurable.tvPackages.filter(tvPackage => !extendedPackagesCodes.includes(tvPackage.id));\n    fixConfigurable.tvPackages = fixConfigurable.tvPackages.concat(extendedPackages);\n};\n\nexport class ConvergentTvPackageModal extends Component {\n\n    getIncludedInThePackageTitle() {\n        if(this.props.descriptions && this.props.descriptions.includedInThePackageTitle && this.props.descriptions.includedInThePackageTitle !== \"\"){\n            return this.props.descriptions.includedInThePackageTitle;\n        }\n        return \"<div>Pakiety TV</div><div>zawarte w Orange Love</div>\";\n    }\n\n    render() {\n\n        const subModalTitle = this.props.descriptions ? this.props.descriptions.modalTitle : \"\";\n        const subModalContents = this.props.descriptions ? this.props.descriptions.modalContents : \"\";\n\n        const configurables = JSON.parse(JSON.stringify(this.props.convergentConfigurables.configurables));\n\n        let fixConfigurable = configurables.find(configurablesEntry => configurablesEntry.factoryName === CartEntryType.FIX);\n        if(fixConfigurable){\n            updateFixConfigurablesForEntry(fixConfigurable, this.props.entry, this.props.customFilters);\n        }\n\n        return(\n            <div>\n                <ConvergentAnalyzerAdapter\n                    configurables={configurables}\n                    entry={this.props.entry}\n                    updateCartProducts={this.props.updateCartProducts}\n                    singlePropositionId={fixConfigurable && fixConfigurable.propositionId}\n                    triggerCartRecalculation={this.props.modalVisible}\n                >\n                    <FixTVModal\n                        label={this.props.header}\n                        open={this.props.modalVisible}\n                        services={(fixConfigurable && fixConfigurable.tvPackages) ? fixConfigurable.tvPackages : []}\n                        onClose={this.props.closeModalClicked}\n                        productList={this.props.inner}\n                        subModalTitle={subModalTitle}\n                        subModalContents={subModalContents}\n                        showNetPrices={this.props.showNetPrices}\n                        includedInThePackageTitle={this.getIncludedInThePackageTitle()}\n                        filtersVisible={true}\n                    />\n                </ConvergentAnalyzerAdapter>\n            </div>\n        );\n    }\n}"],
    "file": "ConvergentTvPackageModal.js"
}