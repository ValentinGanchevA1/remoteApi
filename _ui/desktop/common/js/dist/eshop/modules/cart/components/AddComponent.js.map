{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/cart/components/AddComponent.jsx"],
    "names": ["AddComponent", "props", "initTooltip", "getDescription", "tooltipWrapperRef", "path", "options", "maxWidth", "side", "trigger", "nextProps", "nextState", "OPL", "UI", "stopModules", "onAddClick", "tooltipContent", "icon", "ref", "e", "preventDefault", "tooltipId", "children", "showAddLink", "bind", "getRootViewContent", "Component", "propTypes", "label", "PropTypes", "string", "isRequired", "tooltipBtnText", "addBtnText", "addRowIcon", "bool", "defaultProps", "descriptionName", "descriptions"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {OraButton, OraSimpleRadio, OraLoader} from \"eshop/components/OraCommonComponents\";\nimport {loadModule} from \"../../core/utils/ui\";\n\nexport default class AddComponent extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.initTooltip();\n    }\n\n    componentDidUpdate() {\n        this.initTooltip();\n    }\n\n    initTooltip() {\n        if (getDescription('tooltipContent', this.props) && this.tooltipWrapperRef) {\n            loadModule(this.tooltipWrapperRef, {\n                path: \"core/modules/tooltips\",\n                options: {\n                    maxWidth: '320',\n                    side: 'top',\n                    trigger: 'hover'\n                }\n            });\n        }\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        if (getDescription('tooltipContent', this.props) && this.tooltipWrapperRef) {\n            OPL.UI.stopModules(this.tooltipWrapperRef);\n        }\n    }\n\n    componentWillUnmount() {\n        if(getDescription('tooltipContent', this.props)) {\n            OPL.UI.stopModules(this.tooltipWrapperRef);\n        }\n    }\n\n    onAddClick() {\n        this.props.onAddClick();\n    }\n\n    getRootViewContent() {\n        const tooltipContent = getDescription(\"tooltipContent\", this.props);\n        const icon = getDescription(\"addRowIcon\", this.props);\n        return [\n            <span className=\"u-acc-hide\" key=\"addBtnTextKey\">{getDescription(\"addBtnText\", this.props)}</span>,\n            <div className=\"u-padding-left-l u-padding-right-l g-white1-bg u-box-shadow--s u-box-shadow-hover\" key=\"addBtnContentKey\">\n                <table className=\"u-table-fixed\">\n                    <tbody ref={ref => this.tooltipWrapperRef = ref}>\n                    <tr>\n                        <td className=\"opl-checkout__icon__cell\">\n                            <span aria-hidden=\"true\" className={\"g-icon g-icon--only \" + icon}/>\n                        </td>\n                        <td className=\"u-padding-top-l u-padding-l u-padding-right-l u-font-bold u-small-padding-right\">\n                            <div>\n                                {getDescription(\"label\", this.props)}\n                                {\n                                    tooltipContent && [\n                                        <a href=\"#\" onClick={e => e.preventDefault()} key={\"tooltipLink_\" + this.props.tooltipId}\n                                           aria-describedby={this.props.tooltipId}\n                                           className=\"o-tooltip__trigger u-padding-left-s tooltipstered\">\n                                            <span className=\"g-icon g-icon--hint g-icon--font g-icon--xs\"/>\n                                            <span className=\"u-acc-hide\">{getDescription(\"tooltipBtnText\", this.props)}</span>\n                                        </a>,\n                                        <div className=\"o-tooltip__content\" id={this.props.tooltipId} role=\"tooltip\" key={\"tooltipContent_\" + this.props.tooltipId}>\n                                            <p className=\"u-margin\">{tooltipContent}</p>\n                                        </div>\n                                    ]\n                                }\n                            </div>\n                            {this.props.children}\n                        </td>\n                        {this.props.showAddLink &&\n                            <td className=\"opl-checkout__button__cell u-padding-top-l u-padding-l\">\n                                <div className=\"opl-product-addlink u-right u-small-right\"/>\n                            </td>\n                        }\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        ]\n    }\n\n    render() {\n        if(this.props.showAddLink) {\n            return (\n                <a href=\"#\" aria-label={getDescription('addBtnText', this.props)} onClick={this.onAddClick.bind(this)}>\n                    {this.getRootViewContent()}\n                </a>\n            );\n        } else {\n            return (\n                <div>\n                    {this.getRootViewContent()}\n                </div>\n            );\n        }\n    }\n}\n\nAddComponent.propTypes = {\n    label: PropTypes.string,\n    tooltipId: PropTypes.string.isRequired,\n    tooltipContent: PropTypes.string,\n    tooltipBtnText: PropTypes.string,\n    addBtnText: PropTypes.string,\n    addRowIcon: PropTypes.string,\n    showAddLink: PropTypes.bool\n};\n\nAddComponent.defaultProps = {\n    label: \"Posiadam\",\n    addBtnText: \"Kliknij aby potwierdzić posiadanie\",\n    tooltipBtnText: \"Otwórz podpowiedź\",\n    addRowIcon: \"g-icon--voucher\",\n    showAddLink: true\n};\n\nfunction getDescription(descriptionName, props) {\n    return props.descriptions[descriptionName] || props[descriptionName];\n}"],
    "file": "AddComponent.js"
}