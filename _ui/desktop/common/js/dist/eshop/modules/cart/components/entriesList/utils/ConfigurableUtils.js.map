{
    "version": 3,
    "sources": ["../../../../../../../../es6/eshop/modules/cart/components/entriesList/utils/ConfigurableUtils.jsx"],
    "names": ["isMandatory", "productCode", "configurables", "selectedGroupedProductsIds", "Array", "isArray", "configurablesForProduct", "findConfigurablesForProduct", "length", "some", "c", "isMandatoryForSingleConfigurables", "isRequiredToShowSelectedInGroup", "configurablesObject", "mandatoryProducts", "includes", "relations", "filter", "r", "type", "g", "targetVases", "v", "sourceVases", "requireShowRelations", "ruleType", "source", "services", "devices", "gadgets", "map", "p", "id", "isRemovable", "_", "groups", "isMandatoryByValidationGroup", "group", "targetProducts", "m", "conditionalProducts"],
    "mappings": "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",
    "sourcesContent": ["import _ from \"lodash\";\n\nexport const isMandatory = (productCode, configurables, selectedGroupedProductsIds) => {\n    if (!Array.isArray(configurables)) {\n        //A non-array object for solo fix.\n        configurables = [configurables];\n    }\n    const configurablesForProduct = findConfigurablesForProduct(configurables, productCode);\n    return configurablesForProduct.length > 0 && (configurablesForProduct.some(c => isMandatoryForSingleConfigurables(productCode, c, selectedGroupedProductsIds)) ||\n        configurablesForProduct.some(c => isRequiredToShowSelectedInGroup(productCode, c, selectedGroupedProductsIds)));\n};\n\nconst isMandatoryForSingleConfigurables = (productCode, configurablesObject, selectedGroupedProductsIds) => {\n    return configurablesObject.mandatoryProducts.includes(productCode) || configurablesObject.relations\n        .filter(r => r.type === \"REQUIRE\")\n        .some(g => g.targetVases.some(v => v === productCode) && g.sourceVases.some(v => selectedGroupedProductsIds.includes(v)))\n};\n\nconst isRequiredToShowSelectedInGroup = (productCode, configurablesObject, selectedGroupedProductsIds) => {\n    const requireShowRelations = configurablesObject.relations\n        .filter(r => r.type === \"SHOW\")\n        .filter(r => r.ruleType === \"ANY\" || r.ruleType === \"ALL\")\n        .filter(r => r.targetVases.some(v => selectedGroupedProductsIds.includes(v)));\n    if (requireShowRelations.some(r => r.source === \"MR\")) {\n        return requireShowRelations\n            .filter(r => r.source === \"MR\")\n            .some(r => r.sourceVases.some(v => v === productCode))\n    } else {\n        return requireShowRelations\n            .some(r => r.sourceVases.some(v => v === productCode))\n    }\n};\n\nconst findConfigurablesForProduct = (configurables, productCode) => {\n    return configurables\n        .filter(c => !!c)\n        .filter(c => [...c.services || [], ...c.devices || [], ...c.gadgets || []]\n            .map(p => p.id)\n            .some(p => p === productCode)\n        );\n};\n\nexport const isRemovable = (configurables, mandatoryProducts, productCode) => {\n    if (!configurables) {\n        return false;\n    }\n    if (_.includes(mandatoryProducts, productCode)) {\n        return false;\n    }\n    if (!Array.isArray(configurables)) {\n        //A non-array object for solo fix.\n        configurables = [configurables];\n    } else if (configurables.length === 0) {\n        return false;\n    }\n    const configurablesForProduct = findConfigurablesForProduct(configurables, productCode);\n    return configurablesForProduct.length === 0\n        || !configurablesForProduct\n            .some(c => c.groups\n                .some(g => isMandatoryByValidationGroup(g, mandatoryProducts, productCode))\n            );\n};\n\nconst isMandatoryByValidationGroup = (group, mandatoryProducts, productCode) => {\n    return _.includes(group.targetProducts, productCode)\n        && mandatoryProducts.some(m => group.conditionalProducts.includes(m));\n};\n"],
    "file": "ConfigurableUtils.js"
}