{
    "version": 3,
    "sources": ["../../../../../../../../es6/eshop/modules/cart/components/entriesList/mobile/MultiCartAssignmentDeathComponent.jsx"],
    "names": ["MultiCartAssignmentDeathComponent", "props", "entry", "processType", "registerNextStepCondition", "event", "changeCertificateDeathConfimation", "target", "checked", "checkAssignmentDeathBox", "deathCertificateConfirmed", "assignmentDeathCheckBoxState", "handleCheckboxChange", "bind", "Component", "mapStateToProps", "state", "mapDispatchToProps", "dispatch", "value", "condition"],
    "mappings": ";;;;;;;AAAA;AAMA;;;;;;MAEMA,iC;;;;;AACF,+CAAaC,KAAb,EAAoB;AAAA;;AAAA;AAChB,gCAAMA,KAAN;;AACG,UAAG,MAAKA,KAAL,CAAWC,KAAX,CAAiBC,WAAjB,KAAiC,kBAApC,EAAwD;AACnD,cAAKF,KAAL,CAAWG,yBAAX,CAAqC,yBAArC;AACJ;;AAJY;AAKnB;;;;2CAEoBC,K,EAAO;AACtB,aAAKJ,KAAL,CAAWK,iCAAX,CAA6CD,KAAK,CAACE,MAAN,CAAaC,OAA1D;AACF,aAAKP,KAAL,CAAWQ,uBAAX;AACD;;;+BAEM;AACL,eAAO,KAAKR,KAAL,CAAWC,KAAX,CAAiBC,WAAjB,KAAiC,kBAAjC,gBACH;AAAK,UAAA,SAAS,EAAC;AAAf,wBACG,6BAAC,qCAAD;AAA8B,UAAA,WAAW,EAAC,yBAA1C;AAAoE,UAAA,IAAI,EAAE,CAAC,KAAKF,KAAL,CAAWS,yBAAtF;AAAiH,UAAA,SAAS,EAAC;AAA3H,UADH,eAEG;AAAK,UAAA,SAAS,EAAC;AAAf,wBACK,8GADL,CAFH,eAKI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI;AAAO,UAAA,SAAS,EAAC;AAAjB,wBACI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU,4BAA3C;AAAyE,UAAA,QAAQ,EAAE,KAAKC,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B;AAAnF,UADJ,eAEI;AAAM,UAAA,SAAS,EAAC;AAAhB,UAFJ,eAGI;AAAM,UAAA,SAAS,EAAC;AAAhB,mCAHJ,CADJ,CALJ,CADG,GAcH,IAdJ;AAeH;;;IA7B2CC,gB;;AAkChD,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC9BN,MAAAA,yBAAyB,EAAE,6CAA6BM,KAA7B;AADG,KAAL;AAAA,GAA7B;;AAIA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,WAAK;AACpCZ,MAAAA,iCAAiC,EAAE,2CAACa,KAAD;AAAA,eAAWD,QAAQ,CAAC,6CAAkCC,KAAlC,CAAD,CAAnB;AAAA,OADC;AAEpCf,MAAAA,yBAAyB,EAAE,mCAACgB,SAAD;AAAA,eAAeF,QAAQ,CAAC,qCAA0BE,SAA1B,CAAD,CAAvB;AAAA;AAFS,KAAL;AAAA,GAAnC;;iBAKe,yBAAQL,eAAR,EAAyBE,kBAAzB,EAA6CjB,iCAA7C,C",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {OraInput} from \"eshop/components/OraCommonComponents\";\nimport {changeCertificateDeathConfimation} from \"../../../actions/cart\";\nimport {getDeathCertificateConfirmed} from \"../../../selectors\";\nimport {registerNextStepCondition} from \"../../../../checkout/actions/data\";\nimport MulticartValidationComponent from \"../../../../checkout/components/MulticartValidationComponent\";\n\nclass MultiCartAssignmentDeathComponent extends Component {\n    constructor (props) {\n        super(props);\n           if(this.props.entry.processType === 'ASSIGNMENT_DEATH') {\n                this.props.registerNextStepCondition('certificateDeathConfirm');\n           }\n    }\n\n    handleCheckboxChange(event) {\n          this.props.changeCertificateDeathConfimation(event.target.checked);\n        this.props.checkAssignmentDeathBox()\n      }\n\n    render() {\n        return this.props.entry.processType === 'ASSIGNMENT_DEATH' ? (\n            <div className=\"opl-console--only u-margin-top\">\n               <MulticartValidationComponent messageType=\"certificateDeathConfirm\" show={!this.props.deathCertificateConfirmed} className=\"u-padding-l\"/>\n               <div className=\"u-font-bold u-padding-all-l u-no-padding-top u-no-padding-left\">\n                    <span>Przed złożeniem zamówienia potwierdź akt zgonu</span>\n                </div>\n                <div className=\"u-font-bold\">\n                    <label className=\"o-checkbox opl-checkbox\">\n                        <input type=\"checkbox\" checked={this.props.assignmentDeathCheckBoxState} onChange={this.handleCheckboxChange.bind(this)}/>\n                        <span className=\"o-ci\"/>\n                        <span className=\"o-ci-label\">Potwierdzam akt zgonu</span>\n                    </label>\n                </div>\n            </div>\n        ) : null\n    }\n\n\n}\n\nconst mapStateToProps = state => ({\n    deathCertificateConfirmed: getDeathCertificateConfirmed(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    changeCertificateDeathConfimation: (value) => dispatch(changeCertificateDeathConfimation(value)),\n    registerNextStepCondition: (condition) => dispatch(registerNextStepCondition(condition))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiCartAssignmentDeathComponent);"],
    "file": "MultiCartAssignmentDeathComponent.js"
}