{
    "version": 3,
    "sources": ["../../../../../../../../../es6/eshop/modules/cart/components/entriesList/mobile/productEntries/VasEntryComponent.jsx"],
    "names": ["VAS_CHARACTERISTIC_MANDATORY", "VasEntryComponent", "props", "name", "entry", "bundleNo", "entryNo", "isMandatoryVas", "bind", "header", "detailsHeader", "details", "JSON", "parse", "e", "ModalService", "add", "data", "thumbnailIcon", "slogan", "monthlyPrices", "open", "vases", "propositionId", "filter", "vas", "map", "services", "reduce", "x", "y", "concat", "service", "id", "productCode", "characteristics", "indexOf", "length", "console", "log", "toBeRemoved", "updateCartVases", "bundle", "cartBundle", "showDetails", "onDetailsClicked", "onChangeClicked", "onRemoveClicked", "topBorder", "Component", "defaultProps", "mapStateToProps", "state", "mapDispatchToProps", "dispatch", "offer", "productsToRemove", "productsToAdd"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\n\nimport MultiCartItemComponent from \"../MultiCartItemComponent\";\nimport ModalService from \"eshop/flux/utils/OraModalService\";\nimport VASDetailsModal from \"../productDetails/VASDetailsModal\";\nimport {updateCartVases} from \"eshop/modules/cart/actions/cart\";\n\nimport {getMobileVases} from \"eshop/modules/cart/selectors\";\n\n\nconst VAS_CHARACTERISTIC_MANDATORY = \"MANDATORY\";\n\nclass VasEntryComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.name = this.props.entry.bundleNo + \"_\" + this.props.entry.entryNo;\n        this.isMandatoryVas = this.isMandatoryVas.bind(this);\n    }\n\n    componentWillMount() {\n        var header = this.props.detailsHeader ? this.props.detailsHeader : \"def: Szczegóły usługi\";\n        var details;\n        try {\n            details = this.props.entry.details ? JSON.parse(this.props.entry.details) : \"\";\n        }\n        catch (e) {\n            details = this.props.entry.details;\n        }\n        ModalService.add((data) => <VASDetailsModal id={\"productDetails-\" + this.name} header={header} details={details}\n                                                    icon={this.props.entry.thumbnailIcon}\n                                                    productName={this.props.entry.name}\n                                                    slogan={this.props.entry.slogan}\n                                                    prices={this.props.entry.monthlyPrices}/>);\n    }\n\n    onDetailsClicked() {\n        ModalService.open(\"productDetails-\" + this.name);\n    }\n\n    isMandatoryVas(vases, propositionId, entry) {\n        return vases.filter(vas => vas.propositionId == propositionId).map(vas => vas.services).reduce((x, y) => x.concat(y), []).filter(service => service.id == entry.productCode\n            && service.characteristics.indexOf(VAS_CHARACTERISTIC_MANDATORY) > -1).length > 0;\n    }\n\n    onRemoveClicked() {\n        console.log(\"VAS delete clicked\");\n        let toBeRemoved = [this.props.entry.productCode];\n        this.props.updateCartVases(this.props.propositionId, this.props.bundle, this.props.cartBundle, toBeRemoved, []);\n    }\n\n    render() {\n        return (<MultiCartItemComponent entry={this.props.entry} type=\"VAS\"\n                                        startPricePropertyName=\"firstBillPrice\"\n                                        onDetailsClicked={this.props.showDetails && this.onDetailsClicked.bind(this)}\n                                        onChangeClicked={this.props.onChangeClicked}\n                                        onRemoveClicked={this.isMandatoryVas(this.props.vases, this.props.propositionId, this.props.entry) ? null : this.onRemoveClicked.bind(this)}\n                                        topBorder={this.props.topBorder}\n                                        bottomBorder={true}\n        />);\n    }\n\n}\n\nVasEntryComponent.defaultProps = {\n    showDetails: true\n\n}\nconst mapStateToProps = (state) => ({\n    vases: getMobileVases(state)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateCartVases: (bundle, offer, cartBundle, productsToRemove, productsToAdd) => dispatch(updateCartVases(bundle, offer, cartBundle, productsToRemove, productsToAdd))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VasEntryComponent);"],
    "file": "VasEntryComponent.js"
}