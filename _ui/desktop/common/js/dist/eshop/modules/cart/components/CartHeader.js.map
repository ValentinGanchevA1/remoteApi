{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/cart/components/CartHeader.jsx"],
    "names": ["CartHeader", "props", "resetPropositionSimCount", "Component", "CartHeaderView", "headerLabelHTML", "__html", "headerLabel", "emptyCartLabelHTML", "emptyCartLabel", "descriptionHTML", "description", "netLabel", "descriptions", "grossLabel", "hasMiniCartData", "entries", "undefined", "length", "showNetSwitch", "isB2B", "propTypes", "PropTypes", "string", "isRequired", "arrayOf", "object", "bool", "func", "LFullRow", "className", "children", "element", "LPageRow", "node", "mapStateToProps", "state", "showNetPrices", "mapDispatchToProps", "dispatch", "setPriceIsNet", "showNet"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {getCartEntries, getHasMiniCartData, getPriceIsNet} from \"../selectors\";\nimport {clearPropositionListSoftBundleGroup, propositionListCountSet} from \"eshop/modules/configurator/actions/filters\"\nimport {setPriceIsNet} from \"../actions/cart\";\nimport {getMarketContext} from \"eshop/modules/configurator/selectors/filters\"\nimport MarketContextCheckboxView from \"../../configurator/components/MarketContextCheckboxView\";\n\nclass CartHeader extends Component {\n\n    componentWillMount() {\n        this.props.resetPropositionSimCount();\n    }\n\n    render() {\n        return (\n            <CartHeaderView {...this.props}/>\n        )\n    }\n}\n\nconst CartHeaderView = props => {\n    const headerLabelHTML = {__html: props.headerLabel};\n    const emptyCartLabelHTML = {__html: props.emptyCartLabel};\n    const descriptionHTML = {__html: props.description};\n    const netLabel = props.descriptions[\"netSwitchValue\"] || \"Opłaty netto\";\n    const grossLabel = props.descriptions[\"grossSwitchValue\"] || \"Opłaty brutto\";\n    //props.resetPropositionSimCount();\n    if (!props.hasMiniCartData) return (null);\n    if (props.entries !== undefined && props.entries != null && props.entries.length > 0) {\n        return (<LFullRow>\n            <LPageRow>\n                <div className={\"l-row\"}>\n                    <div className=\"l-col l-col-small-12 l-col-medium-6 l-col-6\">\n                        <h2 className=\"h1 u-inline\" dangerouslySetInnerHTML={headerLabelHTML}/>\n                    </div>\n                    {\n                        (props.showNetSwitch || props.isB2B) &&\n                        <div className=\"l-col l-col-small-12 l-col-medium-6 l-col-6\">\n                            <MarketContextCheckboxView/>\n                        </div>\n                    }\n                </div>\n            </LPageRow>\n        </LFullRow>)\n    } else {\n        return (<LFullRow>\n            <LPageRow>\n                <h2 className=\"h1 u-inline\" dangerouslySetInnerHTML={emptyCartLabelHTML}/>\n                <p className=\"u-padding-top-l\" dangerouslySetInnerHTML={descriptionHTML}/>\n            </LPageRow>\n        </LFullRow>)\n    }\n};\n\nCartHeader.propTypes = {\n    emptyCartLabel: PropTypes.string,\n    headerLabel: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    entries: PropTypes.arrayOf(PropTypes.object),\n    showNetSwitch: PropTypes.bool,\n    resetPropositionSimCount: PropTypes.func,\n};\n\nconst LFullRow = props => {\n    return <div className={\"l-full-row \" + (props.className || \"\")}>{props.children}</div>\n};\n\nLFullRow.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.element,\n};\n\nconst LPageRow = props => {\n    return <div className={\"l-page-row \" + (props.className || \"\")}>{props.children}</div>\n};\n\nLPageRow.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n};\n\nconst mapStateToProps = state => ({\n    entries: getCartEntries(state),\n    hasMiniCartData: getHasMiniCartData(state),\n    showNetPrices: getPriceIsNet(state),\n    isB2B: getMarketContext(state) === \"B2B\",\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setPriceIsNet: showNet => dispatch(setPriceIsNet(showNet)),\n    resetPropositionSimCount: () => {\n        dispatch(propositionListCountSet(1));\n        dispatch(clearPropositionListSoftBundleGroup())\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartHeader);"],
    "file": "CartHeader.js"
}