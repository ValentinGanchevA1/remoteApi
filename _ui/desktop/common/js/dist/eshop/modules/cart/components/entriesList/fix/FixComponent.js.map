{
    "version": 3,
    "sources": ["../../../../../../../../es6/eshop/modules/cart/components/entriesList/fix/FixComponent.jsx"],
    "names": ["FixComponentView", "props", "getVasSection", "bind", "getTVSection", "state", "selectedSection", "addVases", "addButtonClicked", "setState", "console", "warn", "productCode", "removeButtonClicked", "addBonuses", "addTV", "addGadgets", "entry", "ModalService", "open", "bundleNo", "offerIndex", "add", "data", "sectionConf", "deleteEntryPopupTitle", "deleteEntryPopupContent", "declineDeleteEntryPopupButtonLabel", "confirmDeleteEntryPopupButtonLabel", "removeFromCart", "sectionTitle", "registerRemovePopup", "configurables", "mandatoryProducts", "tvPackages", "fixTerminals", "terminals", "filter", "t", "hiddenEntry", "vases", "v", "_", "includes", "addonType", "AddonType", "SFH", "SECONDARY_CHOICE_DISCOUNT", "allEntries", "entries", "map", "mandatory", "isEntryMandatory", "onChange", "vasChangeClicked", "onRemove", "vasRemoveClicked", "selectedGroupedProductsIds", "e", "quantityGroup", "bonusEntries", "bonuses", "b", "some", "code", "monthlyPrices", "monthlyCosts", "firstBillPrice", "oneTimeCost", "checkoutPrice", "payNowCost", "bonusChangeClicked", "bonusRemoveClicked", "basicTVs", "TVBASIC", "id", "tvChangeClicked", "tvRemoveClicked", "title", "idx", "servicesAndDevices", "concat", "numberOfAvailableGadgets", "bonusesForSecondaryChoiceDiscount", "bonusEntry", "trigger", "migratedProducts", "tvPackagesIds", "officesServices", "sections", "ProductEntryType", "VAS", "TV_PACKAGE", "SECONDARY_CHOICE", "getBonusSection", "openRemovePopup", "showNetPrices", "descriptions", "forFreeLabel", "serviceFreeLabel", "gadgets", "gadget", "index", "product", "Object", "assign", "unchangeable", "gadgetChangeClicked", "gadgetRemoveClicked", "productSections", "section", "propsToPass", "icon", "label", "buyMoreLabel", "header", "inner", "productList", "entryType", "OFFICES_SERVICES", "length", "isVasModalOpen", "openVasModal", "closeVasModal", "migratedTvPackages", "p", "extendedPackages", "tv", "inputType", "extendedPackagesCodes", "extendedPack", "tvPackage", "sumOfTvPackages", "getWrappedInstance", "GADGET", "bonus", "relatedProducts", "isBonusModalOpen", "openBonusModal", "closeBonusModal", "PARAGRAPH", "Component", "ProductSectionWrapper", "children", "FixComponent", "fetchFixConfigurables", "mapStateToProps", "mapDispatchToProps", "dispatch", "cartBundle"],
    "mappings": ";;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AACA;AACA;;;;;;;;;;MAKMA,gB;;;;;AAEF,8BAAYC,KAAZ,EAAkB;AAAA;;AAAA;AACd,gCAAMA,KAAN;AACA,YAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,2CAArB;AACA,YAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,2CAApB;AACA,YAAKE,KAAL,GAAa;AACTC,QAAAA,eAAe,EAAE;AADR,OAAb;AAJc;AAOjB;;;;6CAEkC;AAAA,YAAjBA,eAAiB,QAAjBA,eAAiB;;AAC/B,YAAG,KAAKC,QAAL,IAAiB,KAAKA,QAAL,CAAcC,gBAAlC,EAAmD;AAC/C,eAAKC,QAAL,CAAc;AACVH,YAAAA,eAAe,EAAfA;AADU,WAAd;AAGA,eAAKC,QAAL,CAAcC,gBAAd;AACH,SALD,MAKO;AACHE,UAAAA,OAAO,CAACC,IAAR,CAAa,2BAAb;AACH;AACJ;;;uCAEgBC,W,EAAY;AACzB,YAAG,KAAKL,QAAL,IAAiB,KAAKA,QAAL,CAAcM,mBAAlC,EAAsD;AAClD,eAAKN,QAAL,CAAcM,mBAAd,CAAkCD,WAAlC;AACH,SAFD,MAEO;AACHF,UAAAA,OAAO,CAACC,IAAR,CAAa,2BAAb;AACH;AACJ;;;gDAEoC;AAAA,YAAjBL,eAAiB,SAAjBA,eAAiB;;AACjC,YAAG,KAAKQ,UAAL,IAAmB,KAAKA,UAAL,CAAgBN,gBAAtC,EAAuD;AACnD,eAAKC,QAAL,CAAc;AACVH,YAAAA,eAAe,EAAfA;AADU,WAAd;AAGA,eAAKQ,UAAL,CAAgBN,gBAAhB;AACH,SALD,MAKO;AACHE,UAAAA,OAAO,CAACC,IAAR,CAAa,6BAAb;AACH;AACJ;;;yCAEkBC,W,EAAY;AAC3B,YAAG,KAAKE,UAAL,IAAmB,KAAKA,UAAL,CAAgBD,mBAAtC,EAA0D;AACtD,eAAKC,UAAL,CAAgBD,mBAAhB,CAAoCD,WAApC;AACH,SAFD,MAEO;AACHF,UAAAA,OAAO,CAACC,IAAR,CAAa,6BAAb;AACH;AACJ;;;wCAEgB;AACb,YAAG,KAAKI,KAAL,IAAc,KAAKA,KAAL,CAAWP,gBAA5B,EAA6C;AACzC,eAAKO,KAAL,CAAWP,gBAAX;AACH,SAFD,MAEO;AACHE,UAAAA,OAAO,CAACC,IAAR,CAAa,wBAAb;AACH;AACJ;;;sCAEeC,W,EAAY;AACxB,YAAG,KAAKG,KAAL,IAAc,KAAKA,KAAL,CAAWF,mBAA5B,EAAgD;AAC5C,eAAKE,KAAL,CAAWF,mBAAX,CAA+BD,WAA/B;AACH,SAFD,MAEO;AACHF,UAAAA,OAAO,CAACC,IAAR,CAAa,wBAAb;AACH;AACJ;;;4CAEoB;AACjB,YAAG,KAAKK,UAAL,IAAmB,KAAKA,UAAL,CAAgBR,gBAAtC,EAAuD;AACnD,eAAKQ,UAAL,CAAgBR,gBAAhB;AACH,SAFD,MAEO;AACHE,UAAAA,OAAO,CAACC,IAAR,CAAa,6BAAb;AACH;AACJ;;;0CAEmBC,W,EAAY;AAC5B,YAAG,KAAKI,UAAL,IAAmB,KAAKA,UAAL,CAAgBH,mBAAtC,EAA0D;AACtD,eAAKG,UAAL,CAAgBH,mBAAhB,CAAoCD,WAApC;AACH,SAFD,MAEO;AACHF,UAAAA,OAAO,CAACC,IAAR,CAAa,6BAAb;AACH;AACJ;;;wCAEiB;AAAA,YACPM,KADO,GACE,KAAKhB,KADP,CACPgB,KADO;;AAEdC,iCAAaC,IAAb,CAAkB,4BAA4BF,KAAK,CAACG,QAApD,EAA8D;AAC1DA,UAAAA,QAAQ,EAAEH,KAAK,CAACG,QAD0C;AAE1DC,UAAAA,UAAU,EAAEJ,KAAK,CAACG;AAFwC,SAA9D;AAIH;;;0CAEmBH,K,EAAO;AAAA;;AACvBC,iCAAaI,GAAb,CAAiB,UAACC,IAAD;AAAA,8BAAU,6BAAC,6BAAD;AAAsB,YAAA,EAAE,EAAE,4BAA4BN,KAAK,CAACG,QAA5D;AACvB,YAAA,QAAQ,EAAEH,KAAK,CAACG,QADO;AAEvB,YAAA,KAAK,EAAE,MAAI,CAACnB,KAAL,CAAWuB,WAAX,CAAuBC,qBAFP;AAGvB,YAAA,OAAO,EAAE,MAAI,CAACxB,KAAL,CAAWuB,WAAX,CAAuBE,uBAHT;AAIvB,YAAA,OAAO,EAAE,MAAI,CAACzB,KAAL,CAAWuB,WAAX,CAAuBG,kCAJT;AAKvB,YAAA,OAAO,EAAE,MAAI,CAAC1B,KAAL,CAAWuB,WAAX,CAAuBI,kCALT;AAMvB,YAAA,aAAa,EAAE,MAAI,CAAC3B,KAAL,CAAW4B,cAAX,CAA0B1B,IAA1B,CAA+B,MAA/B,EAAqC,IAArC,EAA2Cc,KAAK,CAACG,QAAjD,CANQ;AAOvB,YAAA,kBAAkB,EAAE,MAAI,CAACnB,KAAL,CAAWuB,WAAX,CAAuBM;AAPpB,YAAV;AAAA,SAAjB;AAQH;;;0CAEmB;AAChB,aAAKC,mBAAL,CAAyB,KAAK9B,KAAL,CAAWgB,KAApC;AACH;;;oCAEae,a,EAAeC,iB,EAAmBC,U,EAAY;AAAA;;AACxD,YAAMC,YAAY,GAAG,CAAC,KAAKlC,KAAL,CAAWgB,KAAX,CAAiBmB,SAAjB,IAA8B,EAA/B,EAAmCC,MAAnC,CAA0C,UAAAC,CAAC;AAAA,iBAAI,CAACA,CAAC,CAACC,WAAP;AAAA,SAA3C,CAArB;AACA,YAAMC,KAAK,GAAG,CAAC,KAAKvC,KAAL,CAAWgB,KAAX,CAAiBuB,KAAjB,IAA0B,EAA3B,EAA+BH,MAA/B,CAAsC,UAAAI,CAAC;AAAA,iBAAI,CAACC,gBAAEC,QAAF,CAAWT,UAAX,EAAuBO,CAAC,CAAC7B,WAAzB,CAAD,KAA2C,CAAC8B,gBAAEC,QAAF,CAAWV,iBAAX,EAA8BQ,CAAC,CAAC7B,WAAhC,CAAD,IAAiD6B,CAAC,CAACG,SAAF,KAAgBC,uBAAUC,GAAtH,KAA8HL,CAAC,CAACG,SAAF,KAAgBC,uBAAUE,yBAA5J;AAAA,SAAvC,CAAd;AACA,YAAMC,UAAU,4CAAOb,YAAP,kCAAwBK,KAAxB,EAAhB;AACA,YAAMS,OAAO,GAAGD,UAAU,CAACE,GAAX,CAAe,UAAAT,CAAC;AAAA,mCAASA,CAAT;AAAYU,YAAAA,SAAS,EAAE,MAAI,CAACC,gBAAL,CAAsBX,CAAtB,EAA0BO,UAA1B,EAAsChB,aAAtC;AAAvB;AAAA,SAAhB,CAAhB;AACA,eAAO;AACHiB,UAAAA,OAAO,EAAPA,OADG;AAEHI,UAAAA,QAAQ,EAAE,KAAKC,gBAAL,CAAsBnD,IAAtB,CAA2B,IAA3B,CAFP;AAGHoD,UAAAA,QAAQ,EAAE,KAAKC,gBAAL,CAAsBrD,IAAtB,CAA2B,IAA3B;AAHP,SAAP;AAKH;;;uCAEgBc,K,EAAO+B,U,EAAYhB,a,EAAe;AAC/C,YAAMyB,0BAA0B,GAAGT,UAAU,CAACX,MAAX,CAAkB,UAAAqB,CAAC;AAAA,iBAAI,CAAC,CAACA,CAAC,CAACC,aAAJ,IAAqBD,CAAC,CAACC,aAAF,KAAoB1C,KAAK,CAAC0C,aAAnD;AAAA,SAAnB,EAAqFT,GAArF,CAAyF,UAAAQ,CAAC;AAAA,iBAAIA,CAAC,CAAC9C,WAAN;AAAA,SAA1F,CAAnC;AACA,eAAO,oCAAYK,KAAK,CAACL,WAAlB,EAA+BoB,aAA/B,EAA8CyB,0BAA9C,CAAP;AACH;;;sCAEeG,Y,EAAc5B,a,EAAe;AACzC,YAAM6B,OAAO,GAAG,CAAC,KAAK5D,KAAL,CAAWgB,KAAX,CAAiBuB,KAAjB,IAA0B,EAA3B,EACXH,MADW,CACJ,UAAAyB,CAAC;AAAA,iBAAIA,CAAC,CAAClB,SAAF,KAAgBC,uBAAUE,yBAA1B,IAAuDa,YAAY,CAACG,IAAb,CAAkB,UAAA9C,KAAK;AAAA,mBAAIA,KAAK,CAAC+C,IAAN,KAAeF,CAAC,CAAClD,WAArB;AAAA,WAAvB,CAA3D;AAAA,SADG,EAEXsC,GAFW,CAEP,UAAAY,CAAC;AAAA,mCAASA,CAAT;AAAYX,YAAAA,SAAS,EAAEnB,aAAa,IAAIA,aAAa,CAACC,iBAAd,CAAgCU,QAAhC,CAAyCmB,CAAC,CAAClD,WAA3C;AAAxC;AAAA,SAFM,EAGXsC,GAHW,CAGP,UAAAY,CAAC,EAAI;AACN,cAAI7C,KAAK,GAAG2C,YAAY,CAACvB,MAAb,CAAoB,UAAApB,KAAK;AAAA,mBAAIA,KAAK,CAAC+C,IAAN,KAAeF,CAAC,CAAClD,WAArB;AAAA,WAAzB,EAA2D,CAA3D,CAAZ;AACAkD,UAAAA,CAAC,CAACG,aAAF,GAAkBhD,KAAK,CAACiD,YAAxB;AACAJ,UAAAA,CAAC,CAACK,cAAF,GAAmBlD,KAAK,CAACmD,WAAzB;AACAN,UAAAA,CAAC,CAACO,aAAF,GAAkBpD,KAAK,CAACqD,UAAxB;AACA,iBAAOR,CAAP;AACH,SATW,CAAhB;AAUA,eAAO;AACHb,UAAAA,OAAO,iCAAMY,OAAN,CADJ;AAEHR,UAAAA,QAAQ,EAAE,KAAKkB,kBAAL,CAAwBpE,IAAxB,CAA6B,IAA7B,CAFP;AAGHoD,UAAAA,QAAQ,EAAE,KAAKiB,kBAAL,CAAwBrE,IAAxB,CAA6B,IAA7B;AAHP,SAAP;AAKH;;;mCAEY8B,iB,EAAmBD,a,EAAeE,U,EAAY;AACvD,YAAMuC,QAAQ,GAAG,CAACzC,aAAa,IAAI,qCAAcA,aAAd,CAAjB,IAAiD,EAAlD,EACZK,MADY,CACL,UAAAI,CAAC;AAAA,iBAAIA,CAAC,CAACG,SAAF,KAAgBC,uBAAU6B,OAA9B;AAAA,SADI,EAEZxB,GAFY,CAER,UAAAT,CAAC;AAAA,iBAAIA,CAAC,CAACkC,EAAN;AAAA,SAFO,CAAjB;AAGA,YAAM1B,OAAO,GAAG,CAAC,KAAKhD,KAAL,CAAWgB,KAAX,CAAiBuB,KAAjB,IAA0B,EAA3B,EACXH,MADW,CACJ,UAAAI,CAAC;AAAA,iBAAIC,gBAAEC,QAAF,CAAWT,UAAX,EAAuBO,CAAC,CAAC7B,WAAzB,KAAyC,CAAC8B,gBAAEC,QAAF,CAAWV,iBAAX,EAA8BQ,CAAC,CAAC7B,WAAhC,CAA9C;AAAA,SADG,EAEXyB,MAFW,CAEJ,UAAAI,CAAC;AAAA,iBAAI,CAACC,gBAAEC,QAAF,CAAW8B,QAAX,EAAqBhC,CAAC,CAAC7B,WAAvB,CAAL;AAAA,SAFG,EAGXsC,GAHW,CAGP,UAAAT,CAAC;AAAA,mCAASA,CAAT;AAAYU,YAAAA,SAAS,EAAET,gBAAEC,QAAF,CAAWV,iBAAX,EAA8BQ,CAAC,CAAC7B,WAAhC;AAAvB;AAAA,SAHM,CAAhB;AAIA,eAAO;AACHqC,UAAAA,OAAO,EAAPA,OADG;AAEHI,UAAAA,QAAQ,EAAE,KAAKuB,eAAL,CAAqBzE,IAArB,CAA0B,IAA1B,CAFP;AAGHoD,UAAAA,QAAQ,EAAE,KAAKsB,eAAL,CAAqB1E,IAArB,CAA0B,IAA1B;AAHP,SAAP;AAKH;;;+BAEO;AAAA;;AACJ,YAAM2E,KAAK,GAAG,KAAK7E,KAAL,CAAWuB,WAAX,CAAuBM,YAArC;AACA,YAAMiD,GAAG,GAAG,gBAAc,KAAK9E,KAAL,CAAW8E,GAArC;AACA,YAAM/C,aAAa,GAAG,wCAAiB,KAAK/B,KAAL,CAAW+B,aAA5B,CAAtB;AACA,YAAMC,iBAAiB,GAAGD,aAAa,IAAIA,aAAa,CAACC,iBAA/B,IAAoD,EAA9E;AACA,YAAM+C,kBAAkB,GAAG,GAClBC,MADkB,CACX,mCAAYjD,aAAZ,CADW,EAElBiD,MAFkB,CAEX,mDAAiC,kCAAWjD,aAAX,CAAjC,CAFW,CAA3B;AAIA,YAAMkD,wBAAwB,GAAG,0CAAmBlD,aAAnB,CAAjC;AACA,YAAMmD,iCAAiC,GAAG,8DAA8C,KAAKlF,KAAL,CAAW+B,aAAzD,EAAwE,KAAK/B,KAAL,CAAWmF,UAAnF,CAA1C;AACA,YAAMC,OAAO,GAAG,SAAS,KAAKpF,KAAL,CAAWgB,KAAX,CAAiBG,QAA1C;AACA,YAAMkE,gBAAgB,GAAG,KAAKrF,KAAL,CAAWgB,KAAX,CAAiBqE,gBAAjB,IAAqC,EAA9D;AACA,YAAMC,aAAa,GAAG,CAACvD,aAAa,IAAI,qCAAcA,aAAd,CAAjB,IAAiD,EAAlD,EAAsDkB,GAAtD,CAA0D,UAAAZ,CAAC;AAAA,iBAAIA,CAAC,CAACqC,EAAN;AAAA,SAA3D,CAAtB;AACA,YAAMa,eAAe,GAAG,0CAAmBxD,aAAnB,CAAxB;AACA,YAAMyD,QAAQ,GAAG,EAAjB;AACAA,QAAAA,QAAQ,CAACC,8BAAiBC,GAAlB,CAAR,GAAiC,KAAKzF,aAAL,CAAmB8B,aAAnB,EAAkCC,iBAAlC,EAAqDsD,aAArD,CAAjC;AACAE,QAAAA,QAAQ,CAACC,8BAAiBE,UAAlB,CAAR,GAAwC,KAAKxF,YAAL,CAAkB6B,iBAAlB,EAAqCD,aAArC,EAAoDuD,aAApD,CAAxC;AACAE,QAAAA,QAAQ,CAACC,8BAAiBG,gBAAlB,CAAR,GAA8C,KAAKC,eAAL,CAAqB,KAAK7F,KAAL,CAAWmF,UAAhC,EAA4CpD,aAA5C,CAA9C;AAEA,4BACI,uDACI,6BAAC,2CAAD;AAAoC,UAAA,KAAK,EAAE8C,KAA3C;AAAkD,UAAA,GAAG,EAAEC,GAAvD;AAA4D,UAAA,KAAK,EAAE,KAAK9E,KAAL,CAAWgB,KAA9E;AACoC,UAAA,OAAO,EAAEoE,OAD7C;AAEoC,UAAA,IAAI,EAAE,KAAKpF,KAAL,CAAWuB,WAFrD;AAGoC,UAAA,eAAe,EAAE;AAAA,mBAAM,MAAI,CAACuE,eAAL,CAAqB,MAAI,CAAC9F,KAAL,CAAWgB,KAAhC,CAAN;AAAA;AAHrD,wBAII,uDACI,6BAAC,yBAAD;AAAa,UAAA,GAAG,EAAE8D;AAAlB,wBACI,6BAAC,qBAAD;AAAuB,UAAA,GAAG,EAAEA,GAA5B;AAAiC,UAAA,KAAK,EAAE,KAAK9E,KAAL,CAAWgB,KAAnD;AAA0D,UAAA,YAAY,EAAE;AAAxE,wBACI,6BAAC,gCAAD;AAAyB,UAAA,GAAG,EAAE8D;AAA9B,WAC6B,KAAK9E,KADlC;AAEyB,UAAA,eAAe,EAAE,KAAK8F,eAAL,CAAqB5F,IAArB,CAA0B,IAA1B,CAF1C;AAGyB,UAAA,WAAW,EAAE,KAAKqD,gBAAL,CAAsBrD,IAAtB,CAA2B,IAA3B,CAHtC;AAIyB,UAAA,WAAW,EAAE,KAAKmD,gBAAL,CAAsBnD,IAAtB,CAA2B,IAA3B,CAJtC;AAKyB,UAAA,aAAa,EAAE,KAAKF,KAAL,CAAW+F;AALnD,WADJ,CADJ,CADJ,EAaQhE,aAAa,iBACb,6BAAC,6BAAD;AAAsB,UAAA,QAAQ,EAAEyD,QAAhC;AACsB,UAAA,WAAW,EAAE,KAAKxF,KAAL,CAAWuB,WAD9C;AAEsB,UAAA,aAAa,EAAE,KAAKvB,KAAL,CAAW+F,aAFhD;AAGsB,UAAA,YAAY,EAAE,KAAK/F,KAAL,CAAWgG,YAAX,CAAwBC,YAAxB,GAAuC,KAAKjG,KAAL,CAAWgG,YAAX,CAAwBC,YAA/D,GAA8E,2DAHlH;AAIsB,UAAA,gBAAgB,EAAE,KAAKjG,KAAL,CAAWgG,YAAX,CAAwBE,gBAAxB,GAA2C,KAAKlG,KAAL,CAAWgG,YAAX,CAAwBE,gBAAnE,GAAsF;AAJ9H,UAdR,EAqBK,KAAKlG,KAAL,CAAWgB,KAAX,CAAiBmF,OAAjB,CAAyBlD,GAAzB,CAA6B,UAACmD,MAAD,EAASC,KAAT,EAAmB;AAC7C,cAAIC,OAAJ;;AACA,cAAGrB,wBAAwB,IAAI,CAA/B,EAAiC;AAC7BqB,YAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AAACC,cAAAA,YAAY,EAAE;AAAf,aAAd,EAAmCL,MAAnC,CAAV;AACH,WAFD,MAEO;AACHE,YAAAA,OAAO,GAAGF,MAAV;AACH;;AACD,8BACI,6BAAC,yBAAD,qBACA,6BAAC,gCAAD;AACI,YAAA,GAAG,EAAEC,KADT;AAEI,YAAA,KAAK,EAAEC,OAFX;AAGI,YAAA,eAAe,EAAE,MAAI,CAACI,mBAAL,CAAyBxG,IAAzB,CAA8B,MAA9B,CAHrB;AAII,YAAA,eAAe,EAAE,MAAI,CAACyG,mBAAL,CAAyBzG,IAAzB,CAA8B,MAA9B,CAJrB;AAKI,YAAA,aAAa,EAAE,MAAI,CAACF,KAAL,CAAW+F;AAL9B,YADA,CADJ;AAWH,SAlBA,CArBL,eAwCI,6BAAC,8CAAD;AAAyB,UAAA,KAAK,EAAE,KAAK/F,KAAL,CAAWgB,KAA3C;AAAkD,UAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWgG,YAAX,CAAwB,sBAAxB;AAAzD,UAxCJ,eAyCI,6BAAC,4CAAD;AAAuB,UAAA,KAAK,EAAE,KAAKhG,KAAL,CAAWgB,KAAzC;AAAgD,UAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWgG,YAAX,CAAwB,sBAAxB;AAAvD,UAzCJ,EA0CK,KAAKhG,KAAL,CAAWuB,WAAX,CAAuBqF,eAAvB,CAAuC3D,GAAvC,CAA2C,UAAC4D,OAAD,EAASR,KAAT,EAAmB;AAC3D,cAAIS,WAAW,GAAG,EAAlB;AACAA,UAAAA,WAAW,CAACC,IAAZ,GAAmBF,OAAO,CAACE,IAA3B;AACAD,UAAAA,WAAW,CAACE,KAAZ,GAAoBH,OAAO,CAACI,YAA5B;AACAH,UAAAA,WAAW,CAACI,MAAZ,GAAqBL,OAAO,CAACI,YAA7B;AACAH,UAAAA,WAAW,CAACd,YAAZ,GAA2Ba,OAAO,CAACb,YAAnC;AACAc,UAAAA,WAAW,CAAC/E,aAAZ,GAA0BA,aAA1B;AACA+E,UAAAA,WAAW,CAAC9F,KAAZ,GAAkB,MAAI,CAAChB,KAAL,CAAWgB,KAA7B;AACA8F,UAAAA,WAAW,CAACK,KAAZ,GAAkBN,OAAO,CAACO,WAA1B;AACAN,UAAAA,WAAW,CAACf,aAAZ,GAA4B,MAAI,CAAC/F,KAAL,CAAW+F,aAAvC;;AACA,kBAAOc,OAAO,CAACQ,SAAf;AACI,iBAAK5B,8BAAiB6B,gBAAtB;AAAwC;AACpC,uBAAO/B,eAAe,CAACgC,MAAhB,GAAyB,CAAzB,gBACN,6BAAC,iCAAD;AACG,kBAAA,GAAG,EAAE,qBAAmBlB;AAD3B,mBAEOS,WAFP;AAGG,kBAAA,eAAe,EAAIvB;AAHtB,mBADM,gBAKD;AAAK,kBAAA,GAAG,EAAC;AAAT,kBALN;AAMH;;AACD,iBAAKE,8BAAiBC,GAAtB;AAA2B;AACvB,uBAAOX,kBAAkB,CAACwC,MAAnB,GAA4B,CAA5B,gBACN,6BAAC,uBAAD;AACG,kBAAA,GAAG,EAAE,UAAQlB,KADhB;AAEG,kBAAA,GAAG,EAAE,UAAQA;AAFhB,mBAGOS,WAHP;AAIG,kBAAA,QAAQ,EAAEzB,gBAJb;AAKG,kBAAA,WAAW,EAAEN,kBALhB;AAMG,kBAAA,GAAG,EAAE,aAACzE,QAAD;AAAA,2BAAe,MAAI,CAACA,QAAL,GAAgBA,QAA/B;AAAA,mBANR;AAOG,kBAAA,WAAW,EAAE,MAAI,CAACN,KAAL,CAAWwH,cAP3B;AAQG,kBAAA,eAAe,EAAG;AAAA,2BAAM,MAAI,CAACxH,KAAL,CAAWyH,YAAX,EAAN;AAAA,mBARrB;AASG,kBAAA,gBAAgB,EAAG,4BAAM;AAAC,oBAAA,MAAI,CAACzH,KAAL,CAAW0H,aAAX;;AAA2B,oBAAA,MAAI,CAAClH,QAAL,CAAc;AAACH,sBAAAA,eAAe,EAAE;AAAlB,qBAAd;AAAuC,mBAT/F;AAUG,kBAAA,eAAe,EAAE,MAAI,CAACD,KAAL,CAAWC;AAV/B,mBADM,gBAYD;AAAK,kBAAA,GAAG,EAAC;AAAT,kBAZN;AAaH;;AACD,iBAAKoF,8BAAiBE,UAAtB;AAAkC;AAC9B,oBAAI1D,UAAU,GAAG,qCAAcF,aAAd,CAAjB;AACA,oBAAI4F,kBAAkB,GAAGtC,gBAAgB,CAACjD,MAAjB,CAAwB,UAAAwF,CAAC;AAAA,yBAAI,CAAC,CAACA,CAAC,CAACjF,SAAR;AAAA,iBAAzB,CAAzB;AACA,oBAAIkF,gBAAgB,GAAGF,kBAAkB,CAAC1E,GAAnB,CAAuB,UAAA6E,EAAE,EAAI;AAChDA,kBAAAA,EAAE,CAACpD,EAAH,GAAQoD,EAAE,CAACnH,WAAX;AACAmH,kBAAAA,EAAE,CAACC,SAAH,GAAe,UAAf;AACA,yBAAOD,EAAP;AACH,iBAJsB,CAAvB;AAKA,oBAAIE,qBAAqB,GAAGH,gBAAgB,CAAC5E,GAAjB,CAAqB,UAAAgF,YAAY;AAAA,yBAAIA,YAAY,CAACtH,WAAjB;AAAA,iBAAjC,CAA5B;AACAsB,gBAAAA,UAAU,GAAGA,UAAU,CAACG,MAAX,CAAkB,UAAA8F,SAAS;AAAA,yBAAI,CAACF,qBAAqB,CAACtF,QAAtB,CAA+BwF,SAAS,CAACxD,EAAzC,CAAL;AAAA,iBAA3B,CAAb;AACA,oBAAIyD,eAAe,GAAGlG,UAAU,CAAC+C,MAAX,CAAkB6C,gBAAlB,CAAtB;AACA,uBAAO5F,UAAU,CAACsF,MAAX,GAAoB,CAApB,gBACJ,6BAAC,oBAAD;AACH,kBAAA,GAAG,EAAE,QAAMlB;AADR,mBAECS,WAFD;AAGH,kBAAA,eAAe,EAAEe,gBAAgB,GAAGA,gBAAH,GAAsB,EAHpD;AAIH,kBAAA,WAAW,EAAEM,eAJV;AAKH,kBAAA,GAAG,EAAE,aAACrH,KAAD,EAAW;AAAC,oBAAA,MAAI,CAACA,KAAL,GAAc,CAAC,CAACA,KAAF,GAAUA,KAAK,CAACsH,kBAAN,EAAV,GAAuC,IAArD;AAA0D;AALxE,mBADI,gBAOD;AAAK,kBAAA,GAAG,EAAC;AAAT,kBAPN;AAQH;;AACD,iBAAK3C,8BAAiB4C,MAAtB;AAA8B;AAC1B,uBAAOpD,wBAAwB,GAAG,CAA3B,gBACJ,6BAAC,yBAAD;AACC,kBAAA,GAAG,EAAE,YAAUoB;AADhB,mBAEKS,WAFL;AAGC,kBAAA,WAAW,EAAE,kCAAW/E,aAAX,CAHd;AAIC,kBAAA,GAAG,EAAE,aAAChB,UAAD,EAAgB;AAAC,oBAAA,MAAI,CAACA,UAAL,GAAkBA,UAAlB;AAA6B;AAJpD,mBADI,gBAMG;AAAK,kBAAA,GAAG,EAAC;AAAT,kBANV;AAOH;;AACD,iBAAK0E,8BAAiBG,gBAAtB;AAAwC;AACpC,uBAAOV,iCAAiC,CAACjC,GAAlC,CAAsC,UAACqF,KAAD,EAAQxD,GAAR;AAAA,sCACzC,6BAAC,uBAAD;AACI,oBAAA,GAAG,EAAE,sBAAsBuB,KAAtB,GAA8B,GAA9B,GAAoCvB;AAD7C,qBAEQgC,WAFR;AAGI,oBAAA,GAAG,EAAEhC,GAHT;AAII,oBAAA,WAAW,EAAEwD,KAAK,CAACC,eAAN,IAAyB,EAJ1C;AAKI,oBAAA,KAAK,EAAED,KALX;AAMI,oBAAA,WAAW,EAAE,MAAI,CAACtI,KAAL,CAAWwI,gBAN5B;AAOI,oBAAA,eAAe,EAAG;AAAA,6BAAM,MAAI,CAACxI,KAAL,CAAWyI,cAAX,EAAN;AAAA,qBAPtB;AAQI,oBAAA,gBAAgB,EAAG;AAAA,6BAAM,MAAI,CAACzI,KAAL,CAAW0I,eAAX,EAAN;AAAA,qBARvB;AASI,oBAAA,GAAG,EAAE,aAAC7H,UAAD;AAAA,6BAAiB,MAAI,CAACA,UAAL,GAAkBA,UAAnC;AAAA,qBATT;AAUI,oBAAA,QAAQ,EAAEwE;AAVd,qBADyC;AAAA,iBAAtC,CAAP;AAcH;;AACD,iBAAKI,8BAAiBkD,SAAtB;AAAiC;AAC7B,oCAAO,6BAAC,qCAAD;AACH,kBAAA,GAAG,EAAE,cAActC,KADhB;AAEH,kBAAA,OAAO,EAAEQ,OAAO,CAAChF,YAFd;AAGH,kBAAA,YAAY,EAAE,GAHX;AAIH,kBAAA,YAAY,EAAE;AAJX,kBAAP;AAMH;;AACD;AACI,kCAAO;AAAK,gBAAA,GAAG,EAAC;AAAT,gBAAP;AA9ER;AAgFH,SA1FA,CA1CL,CAJJ,eA0II,6BAAC,wCAAD;AAAiC,UAAA,GAAG,EAAE,cAAciD;AAApD,UA1IJ,CADJ,CADJ;AAiJH;;;IA/T0B8D,gB;;AAkU/B,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAC7I,KAAD,EAAW;AACrC,wBACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACKA,KAAK,CAAC6B,YAAN,iBACD;AAAI,MAAA,SAAS,EAAC;AAAd,OAA8D7B,KAAK,CAAC6B,YAApE,CAFJ,EAGK7B,KAAK,CAAC8I,QAHX,CADJ;AAOH,GARD;;MAUMC,Y;;;;;AACF,0BAAY/I,KAAZ,EAAkB;AAAA;AAAA,gCACRA,KADQ;AAEjB;;;;2CAEmB;AAChB,YAAG,KAAKA,KAAL,CAAWgB,KAAX,CAAiBG,QAApB,EAA6B;AACzB,eAAKnB,KAAL,CAAWgJ,qBAAX,CAAiC,KAAKhJ,KAAL,CAAWgB,KAAX,CAAiBG,QAAlD;AACH;AACJ;;;+BAEO;AACJ,4BAAQ,6BAAC,gBAAD,EAAsB,KAAKnB,KAA3B,CAAR;AACH;;;IAbsB4I,gB;;AAiB3B,MAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAC7I,KAAD;AAAA,WAAY;AAChC2B,MAAAA,aAAa,EAAE,oCAAoB3B,KAApB,CADiB;AAEhCoH,MAAAA,cAAc,EAAE,+BAAepH,KAAf,CAFgB;AAGhCoI,MAAAA,gBAAgB,EAAE,iCAAiBpI,KAAjB,CAHc;AAIhC+E,MAAAA,UAAU,EAAE,8BAAc/E,KAAd;AAJoB,KAAZ;AAAA,GAAxB;;AAOA,MAAM8I,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,WAAe;AACtCvH,MAAAA,cAAc,EAAE,wBAACN,IAAD,EAAOoD,EAAP;AAAA,eAAcyE,QAAQ,CAAC,0BAAe7H,IAAf,EAAqBoD,EAArB,CAAD,CAAtB;AAAA,OADsB;AAEtCsE,MAAAA,qBAAqB,EAAE,+BAACI,UAAD;AAAA,eAAgBD,QAAQ,CAAC,iCAAsBC,UAAtB,CAAD,CAAxB;AAAA,OAFe;AAGtC3B,MAAAA,YAAY,EAAE;AAAA,eAAM0B,QAAQ,CAAC,yBAAD,CAAd;AAAA,OAHwB;AAItCzB,MAAAA,aAAa,EAAE;AAAA,eAAMyB,QAAQ,CAAC,0BAAD,CAAd;AAAA,OAJuB;AAKtCV,MAAAA,cAAc,EAAE;AAAA,eAAMU,QAAQ,CAAC,2BAAD,CAAd;AAAA,OALsB;AAMtCT,MAAAA,eAAe,EAAE;AAAA,eAAMS,QAAQ,CAAC,4BAAD,CAAd;AAAA;AANqB,KAAf;AAAA,GAA3B;;iBASe,yBAAQF,eAAR,EAAwBC,kBAAxB,EAA4CH,YAA5C,C",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport _ from \"lodash\";\n\nimport MultiCartExpandingSectionComponent from \"../shared/MultiCartExpandingSectionComponent\";\nimport MultiCartCollapsedItemComponent from \"../mobile/MultiCartCollapsedItemComponent\";\nimport FixMainProductComponent from \"./FixMainProductComponent\";\nimport UniversalEntryComponent from \"../shared/UniversalEntryComponent\";\nimport {getBonusEntry, getFixConfigurables, isBonusModalOpen, isVasModalOpen} from \"../../../selectors\";\nimport {\n    closeBonusModal,\n    closeVasModal,\n    fetchFixConfigurables,\n    openBonusModal,\n    openVasModal,\n    removeFromCart\n} from \"../../../actions/cart\";\nimport ModalService from \"eshop/flux/utils/OraModalService\";\nimport {FloatingBox} from \"./BoxFragments\";\nimport AddVasesButton from \"./buymore/buttons/AddVasesButton\";\nimport AddBonusButton from \"./buymore/buttons/AddBonusButton\";\nimport AddGadgetsButton from \"./buymore/buttons/AddGadgetsButton\";\nimport AddOfficesServicesButton from \"./buymore/buttons/AddOfficesServicesButton\"\nimport AddTVButton from \"./buymore/buttons/AddTVButton\";\nimport {FinePrintForADSLModem, FinePrintForSatteliteTV} from \"./ProductsFinePrintInfo\";\nimport MultiCartRemovePopup from \"../mobile/MultiCartRemovePopup\";\nimport ProductEntryType from \"../../../../checkout/constants/ProductEntryTypeEnum\";\nimport {\n    getConfigurables,\n    getDevices,\n    getGadgets,\n    getNumberOfGadgets,\n    getServices,\n    getTvPackages,\n    getOfficesServices\n} from \"../../../analyzer/ProductInfoUtils\"\nimport CommonProductEntries from \"../shared/CommonProductEntries\"\nimport AddonType from \"../../../../checkout/constants/AddonTypeEnum\"\nimport CMSParagraphConsoleComponent from \"../../../../fix/components/console/CMSParagraphConsoleComponent\";\nimport {getSecondaryChoiceDiscountsWithRelatedBonuses} from \"../utils/CartUtils\";\nimport {isMandatory} from \"../utils/ConfigurableUtils\";\nimport {getDevicesWithAdjustedDeviceType} from \"../../../analyzer/DeviceUtils\";\n\nclass FixComponentView extends Component  {\n\n    constructor(props){\n        super(props);\n        this.getVasSection = this.getVasSection.bind(this);\n        this.getTVSection = this.getTVSection.bind(this);\n        this.state = {\n            selectedSection: null\n        }\n    }\n\n    vasChangeClicked({selectedSection}){\n        if(this.addVases && this.addVases.addButtonClicked){\n            this.setState({\n                selectedSection\n            })\n            this.addVases.addButtonClicked();\n        } else {\n            console.warn(\"No add vases button found\");\n        }\n    }\n\n    vasRemoveClicked(productCode){\n        if(this.addVases && this.addVases.removeButtonClicked){\n            this.addVases.removeButtonClicked(productCode);\n        } else {\n            console.warn(\"No add vases button found\");\n        }\n    }\n\n    bonusChangeClicked({selectedSection}){\n        if(this.addBonuses && this.addBonuses.addButtonClicked){\n            this.setState({\n                selectedSection\n            });\n            this.addBonuses.addButtonClicked();\n        } else {\n            console.warn(\"No add bonuses button found\");\n        }\n    }\n\n    bonusRemoveClicked(productCode){\n        if(this.addBonuses && this.addBonuses.removeButtonClicked){\n            this.addBonuses.removeButtonClicked(productCode);\n        } else {\n            console.warn(\"No add bonuses button found\");\n        }\n    }\n\n    tvChangeClicked(){\n        if(this.addTV && this.addTV.addButtonClicked){\n            this.addTV.addButtonClicked();\n        } else {\n            console.warn(\"No add TV button found\");\n        }\n    }\n\n    tvRemoveClicked(productCode){\n        if(this.addTV && this.addTV.removeButtonClicked){\n            this.addTV.removeButtonClicked(productCode);\n        } else {\n            console.warn(\"No add TV button found\");\n        }\n    }\n\n    gadgetChangeClicked(){\n        if(this.addGadgets && this.addGadgets.addButtonClicked){\n            this.addGadgets.addButtonClicked();\n        } else {\n            console.warn(\"No add gadgets button found\");\n        }\n    }\n\n    gadgetRemoveClicked(productCode){\n        if(this.addGadgets && this.addGadgets.removeButtonClicked){\n            this.addGadgets.removeButtonClicked(productCode);\n        } else {\n            console.warn(\"No add gadgets button found\");\n        }\n    }\n\n    openRemovePopup() {\n        const {entry} = this.props;\n        ModalService.open('remove-from-cart-modal-' + entry.bundleNo, {\n            bundleNo: entry.bundleNo,\n            offerIndex: entry.bundleNo\n        });\n    }\n\n    registerRemovePopup(entry) {\n        ModalService.add((data) => <MultiCartRemovePopup id={'remove-from-cart-modal-' + entry.bundleNo}\n            bundleNo={entry.bundleNo}\n            title={this.props.sectionConf.deleteEntryPopupTitle}\n            content={this.props.sectionConf.deleteEntryPopupContent}\n            decline={this.props.sectionConf.declineDeleteEntryPopupButtonLabel}\n            confirm={this.props.sectionConf.confirmDeleteEntryPopupButtonLabel}\n            onClickRemove={this.props.removeFromCart.bind(this, null, entry.bundleNo)}\n            textRepresentation={this.props.sectionConf.sectionTitle}/>);\n    }\n\n    componentDidMount() {\n        this.registerRemovePopup(this.props.entry);\n    }\n\n    getVasSection(configurables, mandatoryProducts, tvPackages) {\n        const fixTerminals = (this.props.entry.terminals || []).filter(t => !t.hiddenEntry);\n        const vases = (this.props.entry.vases || []).filter(v => !_.includes(tvPackages, v.productCode) && (!_.includes(mandatoryProducts, v.productCode) || v.addonType === AddonType.SFH) && v.addonType !== AddonType.SECONDARY_CHOICE_DISCOUNT);\n        const allEntries = [...fixTerminals, ...vases];\n        const entries = allEntries.map(v => ({...v, mandatory: this.isEntryMandatory(v,  allEntries, configurables)}));\n        return {\n            entries,\n            onChange: this.vasChangeClicked.bind(this),\n            onRemove: this.vasRemoveClicked.bind(this)\n        };\n    }\n\n    isEntryMandatory(entry, allEntries, configurables) {\n        const selectedGroupedProductsIds = allEntries.filter(e => !!e.quantityGroup && e.quantityGroup === entry.quantityGroup).map(e => e.productCode);\n        return isMandatory(entry.productCode, configurables, selectedGroupedProductsIds);\n    }\n\n    getBonusSection(bonusEntries, configurables) {\n        const bonuses = (this.props.entry.vases || [])\n            .filter(b => b.addonType === AddonType.SECONDARY_CHOICE_DISCOUNT && bonusEntries.some(entry => entry.code === b.productCode))\n            .map(b => ({...b, mandatory: configurables && configurables.mandatoryProducts.includes(b.productCode)}))\n            .map(b => {\n                let entry = bonusEntries.filter(entry => entry.code === b.productCode)[0];\n                b.monthlyPrices = entry.monthlyCosts;\n                b.firstBillPrice = entry.oneTimeCost;\n                b.checkoutPrice = entry.payNowCost;\n                return b;\n            });\n        return {\n            entries: [...bonuses],\n            onChange: this.bonusChangeClicked.bind(this),\n            onRemove: this.bonusRemoveClicked.bind(this)\n        };\n    }\n\n    getTVSection(mandatoryProducts, configurables, tvPackages) {\n        const basicTVs = (configurables && getTvPackages(configurables) || [])\n            .filter(v => v.addonType === AddonType.TVBASIC)\n            .map(v => v.id);\n        const entries = (this.props.entry.vases || [])\n            .filter(v => _.includes(tvPackages, v.productCode) && !_.includes(mandatoryProducts, v.productCode))\n            .filter(v => !_.includes(basicTVs, v.productCode))\n            .map(v => ({...v, mandatory: _.includes(mandatoryProducts, v.productCode)}));\n        return {\n            entries,\n            onChange: this.tvChangeClicked.bind(this),\n            onRemove: this.tvRemoveClicked.bind(this)\n        };\n    }\n\n    render(){\n        const title = this.props.sectionConf.sectionTitle;\n        const idx = \"fix_section\"+this.props.idx;\n        const configurables = getConfigurables(this.props.configurables);\n        const mandatoryProducts = configurables && configurables.mandatoryProducts || [];\n        const servicesAndDevices = []\n                .concat(getServices(configurables))\n                .concat(getDevicesWithAdjustedDeviceType(getDevices(configurables)));\n\n        const numberOfAvailableGadgets = getNumberOfGadgets(configurables);\n        const bonusesForSecondaryChoiceDiscount = getSecondaryChoiceDiscountsWithRelatedBonuses(this.props.configurables, this.props.bonusEntry);\n        const trigger = 'ost-' + this.props.entry.bundleNo;\n        const migratedProducts = this.props.entry.migratedProducts || [];\n        const tvPackagesIds = (configurables && getTvPackages(configurables) || []).map(t => t.id);\n        const officesServices = getOfficesServices(configurables);\n        const sections = {};\n        sections[ProductEntryType.VAS] = this.getVasSection(configurables, mandatoryProducts, tvPackagesIds);\n        sections[ProductEntryType.TV_PACKAGE] = this.getTVSection(mandatoryProducts, configurables, tvPackagesIds);\n        sections[ProductEntryType.SECONDARY_CHOICE] = this.getBonusSection(this.props.bonusEntry, configurables);\n\n        return (\n            <div>\n                <MultiCartExpandingSectionComponent title={title} key={idx} entry={this.props.entry}\n                                                    trigger={trigger}\n                                                    conf={this.props.sectionConf}\n                                                    onRemoveClicked={() => this.openRemovePopup(this.props.entry)}>\n                    <div>\n                        <FloatingBox key={idx}>\n                            <ProductSectionWrapper key={idx} entry={this.props.entry} sectionTitle={\"\"}>\n                                <FixMainProductComponent key={idx }\n                                                         {...this.props}\n                                                         openRemovePopup={this.openRemovePopup.bind(this)}\n                                                         onVasRemove={this.vasRemoveClicked.bind(this)}\n                                                         onVasChange={this.vasChangeClicked.bind(this)}\n                                                         showNetPrices={this.props.showNetPrices}\n                                />\n                            </ProductSectionWrapper>\n                        </FloatingBox>\n                        {\n                            configurables &&\n                            <CommonProductEntries sections={sections}\n                                                  sectionConf={this.props.sectionConf}\n                                                  showNetPrices={this.props.showNetPrices}\n                                                  forFreeLabel={this.props.descriptions.forFreeLabel ? this.props.descriptions.forFreeLabel : \"<div>Urządzenie bezpłatne</div><div>w ramach oferty</div>\"}\n                                                  serviceFreeLabel={this.props.descriptions.serviceFreeLabel ? this.props.descriptions.serviceFreeLabel : \"<div>Bezpłatne w cenie</div><div>pakietu</div>\"}\n                            />\n                        }\n                        {this.props.entry.gadgets.map((gadget, index) => {\n                            let product;\n                            if(numberOfAvailableGadgets <= 1){\n                                product = Object.assign({unchangeable: true},gadget)\n                            } else {\n                                product = gadget;\n                            }\n                            return (\n                                <FloatingBox>\n                                <UniversalEntryComponent\n                                    key={index}\n                                    entry={product}\n                                    onChangeClicked={this.gadgetChangeClicked.bind(this)}\n                                    onRemoveClicked={this.gadgetRemoveClicked.bind(this)}\n                                    showNetPrices={this.props.showNetPrices}\n                                />\n                                </FloatingBox>\n                            )\n                        })}\n                        <FinePrintForSatteliteTV entry={this.props.entry} label={this.props.descriptions[\"fixMultiCartLegalSAT\"]}/>\n                        <FinePrintForADSLModem entry={this.props.entry} label={this.props.descriptions[\"fixMultiCartLegalDSL\"]}/>\n                        {this.props.sectionConf.productSections.map((section,index) => {\n                            let propsToPass = {};\n                            propsToPass.icon = section.icon;\n                            propsToPass.label = section.buyMoreLabel;\n                            propsToPass.header = section.buyMoreLabel;\n                            propsToPass.descriptions = section.descriptions;\n                            propsToPass.configurables=configurables;\n                            propsToPass.entry=this.props.entry;\n                            propsToPass.inner=section.productList;\n                            propsToPass.showNetPrices = this.props.showNetPrices;\n                            switch(section.entryType){\n                                case ProductEntryType.OFFICES_SERVICES: {\n                                    return officesServices.length > 0  ?\n                                    (<AddOfficesServicesButton\n                                        key={\"OFFICES_SERVICES\"+index}\n                                        {...propsToPass}\n                                        officesServices = {officesServices}\n                                    />) : <div key=\"NULL_OFFICES_SERVICES\"/>;\n                                }\n                                case ProductEntryType.VAS: {\n                                    return servicesAndDevices.length > 0 ?\n                                    (<AddVasesButton\n                                        uid={\"VASES\"+index}\n                                        key={\"VASES\"+index}\n                                        {...propsToPass}\n                                        migrated={migratedProducts}\n                                        presentable={servicesAndDevices}\n                                        ref={(addVases) => (this.addVases = addVases)}\n                                        isModalOpen={this.props.isVasModalOpen}\n                                        modalOpenAction={ () => this.props.openVasModal()}\n                                        modalCloseAction={ () => {this.props.closeVasModal();this.setState({selectedSection: null})}}\n                                        selectedSection={this.state.selectedSection}\n                                    />) : <div key=\"NULL_VASES\"/>;\n                                }\n                                case ProductEntryType.TV_PACKAGE: {\n                                    let tvPackages = getTvPackages(configurables);\n                                    let migratedTvPackages = migratedProducts.filter(p => !!p.addonType);\n                                    let extendedPackages = migratedTvPackages.map(tv => {\n                                        tv.id = tv.productCode;\n                                        tv.inputType = \"MIGRATED\";\n                                        return tv;\n                                    });\n                                    let extendedPackagesCodes = extendedPackages.map(extendedPack => extendedPack.productCode);\n                                    tvPackages = tvPackages.filter(tvPackage => !extendedPackagesCodes.includes(tvPackage.id));\n                                    let sumOfTvPackages = tvPackages.concat(extendedPackages);\n                                    return tvPackages.length > 0\n                                    ? (<AddTVButton\n                                    key={\"TVS\"+index}\n                                    {...propsToPass}\n                                    migratedTvPacks={extendedPackages ? extendedPackages : []}\n                                    presentable={sumOfTvPackages}\n                                    ref={(addTV) => {this.addTV =  !!addTV ? addTV.getWrappedInstance() : null}}\n                                    />) : <div key=\"NULL_TVS\"/>;\n                                }\n                                case ProductEntryType.GADGET: {\n                                    return numberOfAvailableGadgets > 0\n                                    ? (<AddGadgetsButton\n                                        key={\"GADGETS\"+index}\n                                        {...propsToPass}\n                                        presentable={getGadgets(configurables)}\n                                        ref={(addGadgets) => {this.addGadgets = addGadgets}}\n                                        />) : <div key=\"NULL_GADGETS\"/>;\n                                }\n                                case ProductEntryType.SECONDARY_CHOICE: {\n                                    return bonusesForSecondaryChoiceDiscount.map((bonus, idx) =>\n                                        <AddBonusButton\n                                            key={\"SECONDARY_CHOICE_\" + index + \"_\" + idx}\n                                            {...propsToPass}\n                                            idx={idx}\n                                            presentable={bonus.relatedProducts || []}\n                                            bonus={bonus}\n                                            isModalOpen={this.props.isBonusModalOpen}\n                                            modalOpenAction={ () => this.props.openBonusModal()}\n                                            modalCloseAction={ () => this.props.closeBonusModal()}\n                                            ref={(addBonuses) => (this.addBonuses = addBonuses)}\n                                            migrated={migratedProducts}\n                                        />\n                                    )\n                                }\n                                case ProductEntryType.PARAGRAPH: {\n                                    return <CMSParagraphConsoleComponent\n                                        key={\"PARAGRAPH\" + index}\n                                        content={section.sectionTitle}\n                                        innerPadding={'s'}\n                                        outerPadding={'s'}\n                                    />\n                                }\n                                default:\n                                    return <div key=\"DEFAULT_NULL\"/>;\n                            }\n                        })}\n                    </div>\n                    <MultiCartCollapsedItemComponent key={\"collapsed\" + idx}/>\n                </MultiCartExpandingSectionComponent>\n            </div>\n\n        )\n    }\n}\n\nconst ProductSectionWrapper = (props) => {\n    return (\n        <div className=\"u-box-shadow\">\n            {props.sectionTitle &&\n            <h3 className=\"h3 u-small-hide u-padding-all-l u-no-spacing\">{props.sectionTitle}</h3>}\n            {props.children}\n        </div>\n    );\n};\n\nclass FixComponent extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    componentWillMount(){\n        if(this.props.entry.bundleNo){\n            this.props.fetchFixConfigurables(this.props.entry.bundleNo);\n        }\n    }\n\n    render(){\n        return (<FixComponentView {...this.props}/>);\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    configurables: getFixConfigurables(state),\n    isVasModalOpen: isVasModalOpen(state),\n    isBonusModalOpen: isBonusModalOpen(state),\n    bonusEntry: getBonusEntry(state)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    removeFromCart: (data, id) => dispatch(removeFromCart(data, id)),\n    fetchFixConfigurables: (cartBundle) => dispatch(fetchFixConfigurables(cartBundle)),\n    openVasModal: () => dispatch(openVasModal()),\n    closeVasModal: () => dispatch(closeVasModal()),\n    openBonusModal: () => dispatch(openBonusModal()),\n    closeBonusModal: () => dispatch(closeBonusModal())\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(FixComponent);\n"],
    "file": "FixComponent.js"
}