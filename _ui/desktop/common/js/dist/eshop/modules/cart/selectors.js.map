{
    "version": 3,
    "sources": ["../../../../../es6/eshop/modules/cart/selectors.js"],
    "names": ["getFixState", "state", "fix", "getVoipState", "voip", "getSelectedVoipNumber", "selectedVoipNumber", "getCartData", "cart", "cartData", "getMiniCartData", "miniCartData", "getCartMetadata", "metadata", "getManualVerificationStatus", "manualVerificationStatus", "getAddTerminalToOfferBundleNo", "addTerminalToOfferBundleNo", "getAssignmnetData", "assignment", "getProductCodeByBundleNo", "allCartEntries", "entries", "bundleNo", "entry", "find", "o", "takeDeviceCode", "getMagnumBundleTemplate", "propositionId", "getMagnumOfferId", "productCode", "terminals", "length", "euroSets", "takeDevice", "getBaseProductIdForBundle", "getCartOffers", "_", "bundleNoFromProps", "offers", "offer", "filter", "baseProductId", "getFixConfigurables", "convergentConfigurables", "configurables", "factoryName", "FactoryType", "FIX", "fixConfigurables", "getTvPackages", "tvPackages", "shouldDisplayLoyaltyDurationChoice", "availableLoyaltyDuration", "tvPackage", "provider", "map", "loyaltyDuration", "every", "duration", "includes", "getBundlesProcessType", "bundlesProcessType", "getCartIsNet", "miniCart", "net", "getPriceIsNet", "priceViewIsNet", "isCartFix", "entryType", "CartEntryType", "isCartMobile", "MOBILE", "isMnpInCart", "processType", "getMobileVasesRaw", "mobileVas", "getMobileVases", "NetGrossUtils", "chooseNetOrGrossPriceForVases", "getCartEntriesRaw", "getCartEntries", "chooseNetOrGrossPrice", "getMobileCartEntries", "e", "hasVoiceCartEntry", "getMiniCart", "getOfferCount", "offerCount", "getCartOmniCode", "bundleOmniCode", "reduce", "result", "code", "getConvergentEntries", "cartEntry", "CONVERGENT", "hasEntries", "getCartCheckoutCostRaw", "checkoutCost", "getCartCheckoutCost", "chooseNetOrGrossPriceForCheckoutCost", "getCartOneTimeCostRaw", "oneTimeCost", "getCartOneTimeCost", "chooseNetOrGrossPriceForCartOneTimeCost", "getCartMonthlyCostsRaw", "monthlyCosts", "getCartMonthlyCosts", "chooseNetOrGrossPriceForCartMonthlyCosts", "getCartServicesRaw", "services", "getCartServices", "chooseNetOrGrossPriceForServices", "getCartOffersRaw", "chooseNetOrGrossPriceForOffers", "getCartFirstOffer", "getCartDevicesRaw", "devices", "getCartDevices", "chooseNetOrGrossPriceForDevices", "getMobileCartDevices", "device", "cartHasMobileDevices", "getCartDiscountsRaw", "bonuses", "getCartDiscounts", "getEntryType", "getNumberOfCartEntries", "getSaleOfAddonsEntry", "pop", "getSaleOfAddonsProducts", "vases", "containsEmptySaleOfAddonsEntry", "products", "getHasMiniCartData", "hasMiniCartData", "getHasCartData", "hasCartData", "getMobileVasUpdatingStatus", "mobileVasUpdating", "isAnyMobileVasUpdating", "updating", "ret", "console", "log", "i", "values", "Object", "j", "VasUpdateStatus", "UPDATING", "hasRetention", "hasWakizashi", "getCartMobileMetadata", "mobile", "getMobileVasMetadata", "mobileVasMetadata", "getCartFixMetadata", "getFixConfigurablesMetadata", "fixConfigurablesMetadata", "getTvModalVisibility", "tvModalVisibility", "getTvFilteredModalVisibility", "tvFilteredModalVisibility", "getCartB2BMetadata", "b2b", "getB2BVasesModalVisibility", "b2bVasesModalVisibility", "getResourceModal", "resourcesModal", "getResourceModalBundleNo", "resMod", "getMsisdns", "msisdnComponent", "msisdns", "getSimCards", "simCardComponent", "simCards", "getMsisdn", "msisdn", "getSimCard", "simCard", "getResourcesMsg", "resourcesMsg", "isResourceModalVisible", "visible", "getEntryForResourceModal", "changingMsisdn", "changingSimCard", "getLowerInstallments", "lowerInstallments", "getLowerInstallmentsBundleNo", "getEntryForLowerInstallmentsModal", "isLowerInstallmentsModalVisible", "visibleModal", "getContractRoleByBundleNo", "allEntries", "prev", "current", "contractRole", "getProcessTypesIncludeAssignment", "OnlineUtils", "isAnyAssignmentFromList", "getCartMonthlyRows", "mc", "index", "otp", "price", "push", "monthlyPrice", "oneTimePrice", "formatPrice", "currency", "monthFrom", "monthTo", "highlighted", "getCartCode", "getCartSummaryTableRows", "rows", "priceIsNet", "oneTimeCostVal", "priceGross", "isBusinessClient", "priceNet", "r", "getOfferDescription", "offerDescriptions", "deviceDescriptions", "planName", "description", "join", "getOfferMsisdn", "getOfferLoyaltyLength", "loyaltyLength", "isSatTechnologyEntry", "some", "subEntry", "technology", "Technology", "SAT", "isDslTechnologyEntry", "isXDSL", "isTvSubEntry", "subEntryType", "SectionEntryType", "TV", "createGetPricesForPeriodSelector", "fixDevicePrecondition", "fixDeviceMonthlyCostsPrecondition", "fixDevicePayPrecondition", "fixPayOnFirstBill", "payNowCost", "props", "discounts", "period", "pricesForPeriod", "getPayNowPrice", "service", "max", "Math", "isPeriodInLoyalty", "concat", "extractDetailedPrices", "forEach", "fixDevice", "discount", "oneTimeText", "monthlyText", "monthlyCost", "cost", "isBusinessClientParam", "undefined", "getMaxBundleNo", "getCartMonthlyRowsAll", "minicartEntries", "mE", "totalMonthlyPrices", "totalFirstBillPrice", "getCartPeriodsForBundles", "monthlyPrices", "periods", "arr", "notnull", "p", "indexOf", "sort", "a", "b", "getCartSummaryTableDetailsRows", "rowsOld", "totalCheckoutPrice", "toFixed", "replace", "reproduceRowsAccordingToMandatoryPeriods", "cartEntryConsiderMigrationProcess", "TransactionProcessType", "isMigration", "msisdnVerificationData", "fillMigrationProcessMsisdns", "cartEntries", "migrationMsisdns", "formatMsisdn", "getUniqueValues", "array", "element", "self", "getOfferDescriptionForBundles", "maxBundleNo", "bundleNoAndDesc", "bundleSimfreeNo", "bundleType", "getTitleForBundleType", "substring", "isDevice", "title", "getPricesForPeriodSelectorForBundles", "mobileDevice", "s", "d", "disc", "changePeriod", "loyaltyLengthForBundle", "mandatoryPeriodsForBundle", "containsPeriod", "splitInPeriod", "r1", "r2", "bundles", "row", "rowsForBundle", "getCartState", "getVoucherData", "voucher", "getVoucherCode", "voucherCode", "getVoucherError", "error", "getVoucherMetadata", "getVoucherApplicableProductsRequested", "loading", "getVoucherApplicableProducts", "applicableProducts", "getVoucherName", "voucherName", "getDepositCost", "deposit", "getTerminalForBundleAndEntryNumber", "bundleNumber", "entryNumber", "terminal", "entryNo", "getCartEntryById", "id", "isVasModalOpen", "vasModalStatus", "isBonusModalOpen", "bonusModalStatus", "getBonusEntry", "getPaymentPlanAssignValue", "isPaymentPlanAssigned", "getDeathCertificateConfirmed", "isDeathCertificateConfirmed", "getEntryUnderChange", "getChangedDevice", "getKdrData", "kdrData", "getKdrNumber", "kdr", "kdrNumber", "getKdrSource", "kdrSource", "getKdrErrors", "getKdrSaving", "saving", "getKdrAccepted", "accepted", "getKdrCheckoutData", "number", "source", "hasOnlyAssignment", "isAssignment", "getCustomFilters", "tvPackagesFilters", "isWwwChannel", "getLeadId", "leadId", "getInvoiceData", "invoiceData", "getChangePackagesModalInitData", "VAS_PACKAGE_CATEGORY", "vasByPropositionId", "v", "bundleCode", "cartPackagesCodes", "categories", "cartVases", "gratisPackageBonuses", "categorizedBonuses", "groups", "exclusions", "calculatePackagesExclusions", "relations", "packets", "longDescriptionInJsonFormat", "weight", "warning", "data", "plan", "name", "capacity", "calculatePackageCapacity", "selected", "notNull", "packages", "availablePacketsCodes", "type", "warnings", "sourceVases", "targetVases", "value", "JSON", "stringify", "min", "packageBonusCodesJoined", "capacityGroup", "g", "targetProducts"],
    "mappings": "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",
    "sourcesContent": ["import {createSelector} from \"Reselect\";\nimport SectionEntryType from \"./components/entriesList/SectionEntryTypeEnum\";\nimport Technology from \"../core/enum/Technology\";\nimport {getAllCartEntries, isVoiceCartEntry} from \"../checkout/utils/MiniCartUtils\";\nimport CartEntryType from \"../checkout/constants/CartEntryTypeEnum\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\nimport NetGrossUtils from \"eshop/utils/NetGrossUtils\";\nimport TransactionProcessType from \"eshop/modules/core/constants/TransactionProcessTypeEnum\";\nimport FactoryType from \"../core/constants/FactoryTypeEnum\";\nimport {convertToCartOmniCode} from \"./components/entriesList/utils/CartUtils\";\nimport VasUpdateStatus from \"../core/enum/VasUpdateStatus\";\n\nexport const getFixState = state => state.fix;\nexport const getVoipState = createSelector(getFixState, fix => fix.voip);\nexport const getSelectedVoipNumber = createSelector(getVoipState, voip => voip.selectedVoipNumber);\n\nconst getCartData = state => state.cart.cartData;\nexport const getMiniCartData = state => state.cart.miniCartData;\nconst getCartMetadata = state => state.cart.metadata;\nexport const getManualVerificationStatus = state => state.cart.manualVerificationStatus;\nexport const getAddTerminalToOfferBundleNo = state => state.cart.addTerminalToOfferBundleNo;\n\nexport const getAssignmnetData = state => state.cart.assignment;\n\nexport const getProductCodeByBundleNo = () => {\n    return createSelector(\n        [allCartEntries, getAddTerminalToOfferBundleNo],\n        (entries = [], bundleNo) => {\n            let entry = entries.find(o => o.bundleNo == bundleNo);\n            return entry && takeDeviceCode(entry);\n        }\n    )\n}\n\n\n\nexport const getMagnumBundleTemplate = () => {\n    return createSelector(\n        [allCartEntries, getAddTerminalToOfferBundleNo],\n        (entries = [], bundleNo) => {\n            let entry = entries.find(o => o.bundleNo == bundleNo);\n            return entry && entry.propositionId;\n        }\n    )\n}\n\nexport const getMagnumOfferId = () => {\n    return createSelector(\n        [allCartEntries, getAddTerminalToOfferBundleNo],\n        (entries = [], bundleNo) => {\n            let entry = entries.find(o => o.bundleNo == bundleNo);\n            return entry && entry.productCode;\n        }\n    )\n}\n\nconst takeDeviceCode = (entry) => {\n    if (entry && entry.terminals.length > 0){\n        return entry.terminals[0].productCode;\n    } else if (entry && entry.euroSets.length > 0){\n        return entry.euroSets[0].productCode;\n    }  else {\n        return\n    }\n}\nconst takeDevice = (entry) => {\n    if (entry && entry.terminals.length > 0){\n        return entry.terminals[0];\n    } else if (entry && entry.euroSets.length > 0){\n        return entry.euroSets[0];\n    }  else {\n        return\n    }\n}\nexport const getBaseProductIdForBundle = () => {\n    return createSelector(\n        [\n            getCartOffers, (_, bundleNoFromProps) => ({\n                bundleNo: bundleNoFromProps,\n            })\n        ],\n        (offers = [], bundleNo) => {\n            let offer = offers.filter(o => o.bundleNo == bundleNo.bundleNo);\n            return offer[0] && offer[0].baseProductId;\n        }\n    )\n}\n\nexport const getFixConfigurables = (state) => {\n    if(state.cart.convergentConfigurables.configurables && state.cart.convergentConfigurables.configurables.length > 0) {\n        return state.cart.convergentConfigurables.configurables.filter(configurables => configurables.factoryName === FactoryType.FIX);\n    } else {\n        return state.cart.fixConfigurables;\n    }\n}\n\nexport const getTvPackages = createSelector(getFixConfigurables, configurables => configurables && configurables[0] && configurables[0].tvPackages);\nexport const shouldDisplayLoyaltyDurationChoice = createSelector(getTvPackages, tvPackages => {\n    if (tvPackages) {\n        const availableLoyaltyDuration = tvPackages.filter((tvPackage) => tvPackage.provider === 'NC').map((tvPackage) => tvPackage.loyaltyDuration);\n        return [12, 24].every(duration => availableLoyaltyDuration.includes(duration));\n    }\n    return false;\n});\nexport const getBundlesProcessType = state => state.cart.bundlesProcessType;\nexport const getCartIsNet = createSelector(getMiniCartData, miniCart => miniCart && miniCart.net);\nexport const getPriceIsNet = state => state.cart.priceViewIsNet;\n\nexport const isCartFix = createSelector(getMiniCartData,miniCart => miniCart.entries && !!miniCart.entries.find(entry => entry.entryType == CartEntryType.FIX));\nexport const isCartMobile = createSelector(getMiniCartData,miniCart => miniCart.entries && !!miniCart.entries.find(entry => entry.entryType == CartEntryType.MOBILE));\nexport const isMnpInCart = createSelector(getMiniCartData,miniCart => miniCart.entries && !!miniCart.entries.find(entry => entry.processType == 'MNP'));\nexport const getMobileVasesRaw = state => state.cart.mobileVas;\nexport const getMobileVases = createSelector([getMobileVasesRaw, getPriceIsNet], NetGrossUtils.chooseNetOrGrossPriceForVases);\n\nexport const getCartEntriesRaw = createSelector(getMiniCartData, miniCart => miniCart && miniCart.entries);\nexport const getCartEntries = createSelector([getCartEntriesRaw, getPriceIsNet], NetGrossUtils.chooseNetOrGrossPrice);\nexport const getMobileCartEntries = createSelector([getCartEntries], entries=>(entries || []).filter(e=>e.entryType === \"MOBILE\"));\nexport const hasVoiceCartEntry = createSelector([getMobileCartEntries], entries => (entries || []).filter(entry=>isVoiceCartEntry(entry)).length>0);\nexport const getMiniCart = createSelector(getMiniCartData, miniCart => miniCart);\nexport const getOfferCount = createSelector(getMiniCartData, miniCart => miniCart.offerCount);\nexport const allCartEntries = createSelector(getMiniCart, miniCart => {\n    if (!miniCart || !miniCart.entries) {\n        return [];\n    }\n    return getAllCartEntries(miniCart);\n});\n\nexport const getCartOmniCode = createSelector(allCartEntries, entries => entries.map(entry => convertToCartOmniCode(entry.bundleOmniCode)).reduce((result, code) => code || result, 'OMNI'));\n\nexport const getConvergentEntries = createSelector(getMiniCart, miniCart => {\n    return miniCart.entries ? miniCart.entries.filter(cartEntry => cartEntry.entryType === CartEntryType.CONVERGENT) : [];\n});\n\nexport const hasEntries = createSelector(getCartEntries, entries => {\n    return entries && entries.length > 0\n});\n\nexport const getCartCheckoutCostRaw = createSelector(getCartData, cart => cart.checkoutCost);\nexport const getCartCheckoutCost = createSelector([getCartCheckoutCostRaw, getPriceIsNet], NetGrossUtils.chooseNetOrGrossPriceForCheckoutCost);\nexport const getCartOneTimeCostRaw = createSelector(getCartData, cart => cart.oneTimeCost);\nexport const getCartOneTimeCost = createSelector([getCartOneTimeCostRaw, getPriceIsNet], NetGrossUtils.chooseNetOrGrossPriceForCartOneTimeCost);\nexport const getCartMonthlyCostsRaw = createSelector(getCartData, cart => cart.monthlyCosts);\nexport const getCartMonthlyCosts = createSelector([getCartMonthlyCostsRaw, getPriceIsNet], NetGrossUtils.chooseNetOrGrossPriceForCartMonthlyCosts);\nexport const getCartServicesRaw = createSelector(getCartData, cart => cart.services);\nexport const getCartServices = createSelector([getCartServicesRaw, getPriceIsNet], NetGrossUtils.chooseNetOrGrossPriceForServices);\nexport const getCartOffersRaw = createSelector(getCartData, cart => cart.offers);\nexport const getCartOffers = createSelector([getCartOffersRaw, getPriceIsNet], NetGrossUtils.chooseNetOrGrossPriceForOffers);\nexport const getCartFirstOffer = createSelector(getCartData, cart => (cart.offers &&  cart.offers[0]) ? cart.offers[0] : {});\n\n\nexport const getCartDevicesRaw = createSelector(getCartData, cart => cart.devices);\nexport const getCartDevices = createSelector([getCartDevicesRaw, getPriceIsNet], NetGrossUtils.chooseNetOrGrossPriceForDevices);\nexport const getMobileCartDevices = createSelector(getCartDevices, (devices = []) => devices.filter(device => device.entryType !== CartEntryType.FIX));\nexport const cartHasMobileDevices = createSelector(getMobileCartDevices, devices => devices && devices.length > 0);\nexport const getCartDiscountsRaw = createSelector(getCartData, cart => cart.bonuses);\nexport const getCartDiscounts = createSelector([getCartDiscountsRaw, getPriceIsNet], NetGrossUtils.chooseNetOrGrossPriceForDevices);\nexport const getEntryType = createSelector(getCartData, cart => cart.entryType);\n\nexport const getNumberOfCartEntries = createSelector(getCartEntries, entries => entries ? entries.length : 0);\n\nconst getSaleOfAddonsEntry = createSelector(getCartEntriesRaw, entries => entries ? entries.filter(entry => entry.processType === 'SALE_OF_ADDONS').pop() : null);\n\nconst getSaleOfAddonsProducts = createSelector(getSaleOfAddonsEntry, entry => {\n    return entry ? entry.vases : [];\n});\n\nexport const containsEmptySaleOfAddonsEntry = createSelector([getSaleOfAddonsEntry,getSaleOfAddonsProducts], (entry, products) => {\n    if(!entry){\n        return false;\n    }\n    return products ? products.length===0 : true;\n});\n\nexport const getHasMiniCartData = createSelector(getCartMetadata, metadata => metadata.hasMiniCartData);\nexport const getHasCartData = createSelector(getCartMetadata, metadata => metadata.hasCartData);\nexport const getMobileVasUpdatingStatus = createSelector(getCartMetadata, metadata => metadata.mobileVasUpdating);\nexport const isAnyMobileVasUpdating = createSelector(getMobileVasUpdatingStatus, updating =>{\n    let ret=false; console.log(updating );\n    if(updating)\n    for(var i=0;i<updating.length;i++){\n        console.log(\"isAnyMobileVasUpdating\", updating[i]);\n        if(updating[i]){\n            var values=Object.values(updating[i]);\n            console.log(\"isAnyMobileVasUpdating\",values);\n            for(var j=0;j<values.length;j++){\n                console.log(\"isAnyMobileVasUpdating\",values[j]==VasUpdateStatus.UPDATING);\n                if(values[j]==VasUpdateStatus.UPDATING) return true;\n\n            }\n        }\n    }\n    console.log(\"isAnyMobileVasUpdating\",false);\n    return false;\n});\n\nexport const hasRetention = createSelector(getCartEntries, entries => !!(entries&&entries.filter(e => e.processType=='RETENTION').length) );\nexport const hasWakizashi = createSelector(getCartEntries, entries => !!(entries&&entries.filter(e => e.processType=='INSTALMENT_SALES_OF_GOODS').length) );\n\nexport const getCartMobileMetadata = createSelector(getCartMetadata, metadata=> metadata.mobile);\nexport const getMobileVasMetadata = createSelector(getCartMobileMetadata, mobile => mobile.mobileVasMetadata);\n\nexport const getCartFixMetadata = createSelector(getCartMetadata, metadata => metadata.fix);\nexport const getFixConfigurablesMetadata = createSelector(getCartFixMetadata, fix => fix.fixConfigurablesMetadata);\nexport const getTvModalVisibility = createSelector(getCartFixMetadata, fix => fix.tvModalVisibility);\nexport const getTvFilteredModalVisibility = createSelector(getCartFixMetadata, fix => fix.tvFilteredModalVisibility);\n\nexport const getCartB2BMetadata = createSelector(getCartMetadata, metadata => metadata.b2b);\nexport const getB2BVasesModalVisibility = createSelector(getCartB2BMetadata, b2b => b2b.b2bVasesModalVisibility);\n\nexport const getResourceModal = state => state.cart.resourcesModal;\nexport const getResourceModalBundleNo = createSelector(getResourceModal, resMod => resMod.bundleNo);\n\n\nexport const getMsisdns = createSelector(getResourceModal, resMod => resMod.msisdnComponent.msisdns);\nexport const getSimCards = createSelector([getResourceModal, getResourceModalBundleNo],\n    (resMod, bundleNo) => resMod.simCardComponent.simCards[bundleNo] || []);\nexport const getMsisdn = createSelector(getResourceModal, resMod => resMod.msisdnComponent.msisdn);\nexport const getSimCard = createSelector(getResourceModal, resMod => resMod.simCardComponent.simCard);\nexport const getResourcesMsg = createSelector(getResourceModal, resMod => resMod.resourcesMsg);\nexport const isResourceModalVisible = createSelector(getResourceModal, resMod => resMod.visible);\nexport const getEntryForResourceModal = createSelector([getResourceModalBundleNo, allCartEntries],\n    (bundleNo, entries = []) => {const [entry = {}] = entries.filter(entry => entry.bundleNo === bundleNo);\n                                 return entry;});\n\n\n\nexport const changingMsisdn = createSelector(getResourceModal, resMod => resMod.msisdnComponent.changingMsisdn);\nexport const changingSimCard = createSelector(getResourceModal, resMod => resMod.simCardComponent.changingSimCard);\n\nexport const getLowerInstallments = state => state.cart.lowerInstallments;\nexport const getLowerInstallmentsBundleNo = createSelector(getLowerInstallments, lowerInstallments => lowerInstallments.bundleNo);\nexport const getEntryForLowerInstallmentsModal = createSelector([getLowerInstallmentsBundleNo, allCartEntries],\n    (bundleNo, entries = []) => {const [entry = {}] = entries.filter(entry => entry.bundleNo === bundleNo);\n        return entry;});\nexport const isLowerInstallmentsModalVisible = createSelector(getLowerInstallments, lowerInstallments => lowerInstallments.visibleModal);\n\nexport const getContractRoleByBundleNo = createSelector(allCartEntries, allEntries=>{\n    return (allEntries || []).reduce(\n        (prev,current) => {\n            prev[current.bundleNo] = current.contractRole\n            return prev\n        },\n        {}\n    )\n});\n\nexport const getProcessTypesIncludeAssignment = createSelector(getBundlesProcessType, processType => {\n    return processType.length !== 0 && !processType.includes(\"ASSIGNMENT_DEATH\") && OnlineUtils.isAnyAssignmentFromList(processType);\n});\n\nexport const getCartMonthlyRows = createSelector(\n    [getCartOneTimeCost, getCartMonthlyCosts],\n    (oneTimeCost, monthlyCosts) => {\n        const entries = [];\n\n        if (monthlyCosts) {\n            monthlyCosts.map((mc,index) => {\n                let otp = \"\";\n\n                if (index === 0 && oneTimeCost.price) {\n\n                    entries.push({\n                        monthlyPrice: mc.price,\n                        oneTimePrice: OnlineUtils.formatPrice(oneTimeCost.price) + \" \" + oneTimeCost.currency,\n                        monthFrom: mc.monthFrom ? mc.monthFrom : 1,\n                        monthTo: mc.monthFrom ? mc.monthFrom : 1,\n                        highlighted: true,\n                        currency: mc.currency\n                    });\n\n                    if (!(mc.monthTo === 1)) {\n                        entries.push({\n                            monthlyPrice: mc.price,\n                            oneTimePrice: otp,\n                            monthFrom: mc.monthFrom + 1,\n                            monthTo: mc.monthTo,\n                            highlighted: false,\n                            currency: mc.currency\n                        })\n                    }\n                } else {\n                    entries.push({\n                        monthlyPrice: mc.price,\n                        oneTimePrice: otp,\n                        monthFrom: mc.monthFrom,\n                        monthTo: mc.monthTo,\n                        highlighted: false,\n                        currency: mc.currency\n                    })\n                }\n            });\n        }\n\n        return entries;\n    }\n);\nexport const getCartCode = createSelector(getCartData,\n    cartData=> cartData.code\n);\nexport const getCartSummaryTableRows = createSelector(\n    [getCartCheckoutCost, getCartMonthlyRows, getPriceIsNet],\n    (checkoutCost, rows, priceIsNet) => {\n        const entries = [];\n\n        if (checkoutCost) {\n            let oneTimeCostVal = OnlineUtils.formatPrice(checkoutCost.priceGross) + \" \" + checkoutCost.currency;\n\n            if(isBusinessClient(checkoutCost) || priceIsNet) {\n                 oneTimeCostVal = OnlineUtils.formatPrice(checkoutCost.priceNet) + \" \" + checkoutCost.currency + (isBusinessClient(checkoutCost) ? \" + VAT\" : \"\");\n            }\n\n            entries.push({\n                monthlyPrice: 0,\n                oneTimePrice: oneTimeCostVal,\n                highlighted: true\n            });\n        }\n\n        rows.map(r => entries.push(r));\n\n        return entries;\n    }\n);\n\nexport const getOfferDescription = createSelector(\n    [getCartDevices, getCartOffers],\n    (devices = [], offers = []) => {\n        let offerDescriptions = [];\n        let deviceDescriptions = [];\n\n        offers.map((offer) => offerDescriptions.push(offer.planName));\n        devices.map((device) => deviceDescriptions.push(device.description));\n        return offerDescriptions.join(\", \") + (deviceDescriptions.length ? \" + \" + deviceDescriptions.join(\", \") : \"\");\n    }\n);\nexport const getOfferMsisdn = createSelector(getCartEntries,\n   entries => (entries ) && entries.length >0 ? entries[0].msisdn :\"\"\n);\nexport const getOfferLoyaltyLength = createSelector(getCartEntries,\n   entries => (entries ) && entries.length >0 ? entries[0].loyaltyLength :\"\"\n);\n\nexport const isSatTechnologyEntry = createSelector(\n    getCartEntries,\n    entries => {\n        return entries && entries.some(\n            entry => entry.entries && entry.entries.some(\n                subEntry => subEntry.technology === Technology.SAT\n            )\n        );\n    }\n);\n\nexport const isDslTechnologyEntry = createSelector(\n    getCartEntries,\n    entries => {\n        return entries && entries.some(\n            entry => entry.entries && entry.entries.some(\n                subEntry => Technology.isXDSL(subEntry.technology)\n            )\n        );\n    }\n);\n\nexport const isTvSubEntry = createSelector(\n    getCartEntries,\n    entries => {\n        return entries && entries.some(\n            entry => entry.entries && entry.entries.some(\n                subEntry => subEntry.subEntryType === SectionEntryType.TV\n            )\n        );\n    }\n);\n\nexport const createGetPricesForPeriodSelector = () => {\n\n    function fixDevicePrecondition(device){\n        return device.entryType === \"FIX\" && (fixDeviceMonthlyCostsPrecondition(device) || fixDevicePayPrecondition(device));\n    }\n\n    function fixDeviceMonthlyCostsPrecondition(device){\n        return device.monthlyCosts && device.monthlyCosts.length > 0;\n    }\n\n    function fixDevicePayPrecondition(device){\n        return device.fixPayOnFirstBill && device.payNowCost && device.payNowCost.price > 0;\n    }\n\n    return createSelector(\n        [getCartCheckoutCost, getCartServices, getCartOffers, getCartDevices, getCartDiscounts, (_, props) => ({monthFrom: props.entry.monthFrom, monthTo: props.entry.monthTo}), getPriceIsNet],\n        (checkoutCost, services = [], offers = [], devices = [], discounts = [], period, getPriceIsNet) => {\n            let pricesForPeriod = [];\n            let isBusinessClient = false;\n\n            if(checkoutCost) {\n                isBusinessClient = checkoutCost.isBusinessClient;\n            }\n\n            let priceIsNet = isBusinessClient || getPriceIsNet\n\n            if(!period.monthFrom) {\n                offers.map((offer) => {\n                    if(offer.payNowCost)\n                        pricesForPeriod.push(getPayNowPrice(offer.payNowCost, offer.description, isBusinessClient, priceIsNet))\n                });\n                services.map((service) => {\n                    if(service.payNowCost)\n                        pricesForPeriod.push(getPayNowPrice(service.payNowCost, service.description, isBusinessClient, priceIsNet))\n                });\n                devices.filter(device => !(device.fixPayOnFirstBill && device.payNowCost && device.payNowCost.price > 0)).map((device) => {\n                    if(device.payNowCost)\n                        pricesForPeriod.push(getPayNowPrice(device.payNowCost, device.description, isBusinessClient, priceIsNet))\n                });\n            } else {\n                const loyaltyLength = offers.reduce((max,offer)  => Math.max(max,offer.loyaltyLength),0);\n                const isPeriodInLoyalty = period.monthTo <= loyaltyLength || loyaltyLength === 0;\n                if(isPeriodInLoyalty) {\n                    offers.map((offer) => pricesForPeriod = pricesForPeriod.concat(extractDetailedPrices(offer, period, \"Opłata aktywacyjna za \", \"Abonament za \")));\n                    services.map((service) => pricesForPeriod = pricesForPeriod.concat(extractDetailedPrices(service, period, \"Opłata aktywacyjna za \", \"Abonament za \")));\n                    devices.filter( device => fixDevicePrecondition(device))\n                        .forEach(fixDevice => pricesForPeriod = pricesForPeriod.concat(extractDetailedPrices(fixDevice, period, \"\", \"\")));\n                }\n                devices.filter(device => device.entryType !== \"FIX\" ).forEach(device => {\n                    pricesForPeriod = pricesForPeriod.concat(extractDetailedPrices(device, period, \"\", \"Rata za \"));\n                });\n                if(isPeriodInLoyalty) {\n                    discounts.map((discount) => pricesForPeriod = pricesForPeriod.concat(extractDetailedPrices(discount, period, \"\", \"\")));\n                }\n            }\n\n            return pricesForPeriod;\n        }\n    );\n};\n\nfunction extractDetailedPrices(entry, period, oneTimeText, monthlyText) {\n    let result = [];\n    if((entry.entryType === \"SIMFREE\" && period.monthFrom !== null) || (entry.description === null && entry.oneTimeCost === null)) {\n        // NOR-94276 - hide in summary table viking terminal in sections \"W pierwszym miesiacu\", \"Oplaty od 2 do 24 miesiaca\"...\n        return result;\n    }\n    if((period.monthFrom === 1 || entry.oneTimeCost.monthFrom + 1 === period.monthFrom) && entry.oneTimeCost && entry.oneTimeCost.price > 0){\n        result.push({\n            monthlyPrice: \"\",\n            oneTimeCost: OnlineUtils.formatPrice(entry.oneTimeCost.price) + \" \" + entry.oneTimeCost.currency,\n            description: period.processType === \"RETENTION\" ? \"Opłata za realizację oferty utrzymaniowej\" : oneTimeText + entry.description\n        });\n    }\n    if (entry.fixPayOnFirstBill && (period.monthFrom === 1 || period.monthFrom === entry.payNowCost.monthFrom) && entry.payNowCost && entry.payNowCost.price > 0) {\n         result.push({\n                    monthlyPrice: \"\",\n                    oneTimeCost: OnlineUtils.formatPrice(entry.payNowCost.price) + \" \" + entry.payNowCost.currency,\n                    description: oneTimeText + entry.description\n                });\n    }\n\n    let monthlyCost = entry.monthlyCosts.find((cost) => {\n        return period.monthFrom >= cost.monthFrom && ((cost.monthTo === null || (period.monthTo !== null && cost.monthTo >= period.monthTo)) ||\n               (cost.monthTo != null && period.monthTo === null && cost.monthTo > period.monthFrom));\n    });\n\n    if(monthlyCost) {\n        result.push({\n            monthlyPrice: OnlineUtils.formatPrice(monthlyCost.price) + \" \" + monthlyCost.currency,\n            oneTimeCost: \"\",\n            description: monthlyText + entry.description\n        });\n    }\n\n    return result;\n}\n\nfunction getPayNowPrice(payNowCost, description, isBusinessClientParam, priceIsNet) {\n    let oneTimeCostVal = OnlineUtils.formatPrice(payNowCost.priceGross) + \" \" + payNowCost.currency;\n    let isBusinessClient = isBusinessClientParam !== undefined && isBusinessClientParam !== null && isBusinessClientParam === true\n\n    if(priceIsNet) {\n        oneTimeCostVal = OnlineUtils.formatPrice(payNowCost.priceNet) + \" \" + payNowCost.currency + (isBusinessClient ? \" + VAT\" : \"\");\n    }\n\n    return {\n        oneTimeCost: oneTimeCostVal,\n        description: description\n    };\n}\n\n\n/*\n    New Summary Details\n*/\n\nexport const getMaxBundleNo = createSelector(getCartEntries, entries => entries && entries.length > 0 ? Math.max(...entries.map(entry => entry.bundleNo)) : 0)\n\nexport const getCartMonthlyRowsAll = createSelector(\n    [getCartEntries, getCartOneTimeCost, getCartMonthlyCosts],\n    (minicartEntries, oneTimeCost, monthlyCosts) => {\n        const entries = [];\n\n        if(minicartEntries) {\n            minicartEntries.map((mE, i) => {\n                if (mE.totalMonthlyPrices) {\n                    mE.totalMonthlyPrices.map((mc) => {\n                        let otp = \"\";\n                        //\"Logic\" equal to pl.orange.opl.ecare.orderinfocomponentaddon.services.impl.DispositionsPaymentGroupingService - change both files.\n                        if (mc.monthFrom === 1 && mE.totalFirstBillPrice.price) {\n                            entries.push({\n                                monthlyPrice: mc.price,\n                                oneTimePrice: OnlineUtils.formatPrice(mE.totalFirstBillPrice.price) + \" \" + minicartEntries[0].totalFirstBillPrice.currency,\n                                monthFrom: mc.monthFrom,\n                                monthTo: mc.monthFrom,\n                                highlighted: true,\n                                currency: mc.currency,\n                                bundleNo: mE.bundleNo,\n                                processType: mE.processType\n                            });\n\n                            if (!(mc.monthTo === 1)) {\n                                entries.push({\n                                    monthlyPrice: mc.price,\n                                    oneTimePrice: otp,\n                                    monthFrom: mc.monthFrom + 1,\n                                    monthTo: mc.monthTo,\n                                    highlighted: false,\n                                    currency: mc.currency,\n                                    bundleNo: mE.bundleNo,\n                                    processType: mE.processType\n                                });\n                            }\n                        } else {\n                            entries.push({\n                                monthlyPrice: mc.price,\n                                oneTimePrice: otp,\n                                monthFrom: mc.monthFrom,\n                                monthTo: mc.monthTo,\n                                highlighted: false,\n                                currency: mc.currency,\n                                bundleNo: mE.bundleNo,\n                                processType: mE.processType\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        return entries;\n    }\n);\n\nconst getCartPeriodsForBundles = createSelector(\n    [getCartEntries, getCartServices, getCartOffers, getCartDiscounts],\n    (minicartEntries = [],  services = [], offers = [], discounts = []) => {\n\n        let monthlyCosts = minicartEntries.concat(services).concat(offers).concat(discounts)\n        .map( o => o.monthlyPrices ? {...o, monthlyCosts:  o.monthlyPrices}: o );\n\n        let periods = {}\n\n        monthlyCosts\n        .filter(o=>o.bundleNo)\n        .forEach(o=>{\n            if(!periods[o.bundleNo]){\n                periods[o.bundleNo] = []\n            }\n            let arr = periods[o.bundleNo]\n            if(o.monthlyCosts){\n                o.monthlyCosts.forEach( mc => {\n                    [mc.monthTo, mc.monthFrom]\n                    .filter(notnull=>notnull)\n                    .filter(p => arr.indexOf(p) == -1)\n                    .forEach(p => arr.push(p))\n                })\n            }\n            arr.sort((a,b) => a - b)\n        })\n\n        return periods\n    }\n)\n\n\nexport const getCartSummaryTableDetailsRows = createSelector(\n    [getCartEntries, getCartCheckoutCost, getCartMonthlyRows, getCartMonthlyRowsAll, getCartPeriodsForBundles, getPriceIsNet ],\n    (minicartEntries, checkoutCost, rowsOld, rows, periods, getPriceIsNet) => {\n\n    const entries = [];\nlet oneTimeCostVal;\nlet oneTimePrice;\n\nif (checkoutCost && minicartEntries) {\n    for (let i = 0; i < minicartEntries.length; i++) {\n\n        if (minicartEntries[i].processType === \"SALE_OF_GOODS\"){\n            oneTimeCostVal = OnlineUtils.formatPrice(minicartEntries[i].totalCheckoutPrice.priceGross) + \" \" + checkoutCost.currency\n\n            if(isBusinessClient(checkoutCost) || getPriceIsNet) {\n                oneTimeCostVal = OnlineUtils.formatPrice(minicartEntries[i].totalCheckoutPrice.priceNet) + \" \" + checkoutCost.currency + (isBusinessClient(checkoutCost) ? \" + VAT\" : \"\");\n            }\n            entries.push({\n                monthlyPrice: 0,\n                oneTimePrice: oneTimeCostVal,\n                highlighted: true,\n                bundleNo: minicartEntries[i].terminals[0].bundleNo\n            });\n        } else if(!!minicartEntries[i].terminals.length || !!minicartEntries[i].euroSets.length) {\n            oneTimePrice = minicartEntries[i].totalCheckoutPrice.price - minicartEntries[i].totalFirstBillPrice.price;\n            oneTimePrice = oneTimePrice.toFixed(2) || \"0,00\";\n            oneTimePrice = oneTimePrice + '';\n            oneTimePrice = oneTimePrice.replace('.', ',');\n\n            oneTimeCostVal = oneTimePrice + \" \" + checkoutCost.currency;\n\n            entries.push({\n                monthlyPrice: 0,\n                oneTimePrice: oneTimeCostVal,\n                highlighted: true,\n                bundleNo: minicartEntries[i].bundleNo\n            });\n        }\n    }\n}\n\nrows.map(r => entries.push(r));\n\nreturn reproduceRowsAccordingToMandatoryPeriods(entries, periods)\n}\n);\n\nconst cartEntryConsiderMigrationProcess = cartEntry => {\n    return TransactionProcessType.isMigration(cartEntry.processType)\n        && cartEntry.msisdnVerificationData\n        && cartEntry.msisdnVerificationData.msisdn;\n};\nconst fillMigrationProcessMsisdns = (cartEntries, msisdns) => {\n    const migrationMsisdns = cartEntries\n        .filter(cartEntry => cartEntryConsiderMigrationProcess(cartEntry))\n        .map(cartEntry => cartEntry.msisdnVerificationData.msisdn)\n        .map(msisdn => formatMsisdn(msisdn));\n    migrationMsisdns.forEach(msisdn => {\n        msisdns.push(msisdn);\n    });\n};\nconst getUniqueValues = array => {\n    return array.filter((element, index, self) => {\n        return self.indexOf(element) === index;\n    })\n};\n\nexport const getOfferDescriptionForBundles = createSelector(\n    [getCartDevices, getCartOffers, getMaxBundleNo, getCartEntries],\n    (devices = [], offers = [], maxBundleNo, cartEntries) => {\n    let offerDescriptions = [];\nlet deviceDescriptions = [];\nlet msisdn = [];\nconst bundleNoAndDesc = [];\nlet bundleSimfreeNo;\nlet entries;\nlet bundleType;\n\nif (cartEntries) {\n    entries = cartEntries.filter(entry => entry.processType === \"SALE_OF_GOODS\");\n    if (entries.length > 0 ) {\n        bundleSimfreeNo = entries[0].terminals[0].bundleNo\n    }\n    devices.filter(device => device.entryType === \"SIMFREE\").map((device) => deviceDescriptions.push(device.description))\n    if (bundleSimfreeNo && deviceDescriptions) {\n        bundleNoAndDesc.push(\n            [bundleSimfreeNo,\n                (deviceDescriptions.length ? deviceDescriptions.join(\", \") : \"\"),\n                (\"Urządzenia bez umowy\")]\n        );\n        offerDescriptions = [];\n        deviceDescriptions = [];\n        msisdn = [];\n    }\n\n    for (let bundleNo = 1; bundleNo <= maxBundleNo; bundleNo++){\n        entries = cartEntries.filter(entry => entry.bundleNo === bundleNo);\n        if (entries.length > 0) {\n            bundleType = entries[0].bundleType;\n            fillMigrationProcessMsisdns(entries, msisdn);\n        }\n        offers.filter(offer => offer.bundleNo === bundleNo).map((offer) => {\n            offerDescriptions.push(offer.planName);\n            !!offer.msisdn && offer.msisdn.length === 9 && msisdn.push(formatMsisdn(offer.msisdn))\n        });\n        devices.filter(device => device.entryType !== \"SIMFREE\").filter(device => device.bundleNo === bundleNo).map((device) => deviceDescriptions.push(device.description));\n        msisdn = getUniqueValues(msisdn);\n        bundleNoAndDesc.push(\n            [bundleNo,\n                (offerDescriptions.join(\", \") + (deviceDescriptions.length ? \" + \" + deviceDescriptions.join(\", \") : \"\")),\n                (offerDescriptions.length && deviceDescriptions.length ? (getTitleForBundleType(bundleType, msisdn, true)) : (getTitleForBundleType(bundleType, msisdn, false)))]\n        );\n\n        offerDescriptions = [];\n        deviceDescriptions = [];\n        msisdn = [];\n    }\n}\n\nreturn bundleNoAndDesc;\n}\n);\n\nconst formatMsisdn = (msisdn) =>{\n    return msisdn.substring(0, 3) + '\\u00a0' + msisdn.substring(3, 6) + '\\u00a0' + msisdn.substring(6, msisdn.length);\n}\n\nconst getTitleForBundleType = (bundleType, msisdn, isDevice) => {\n    let title;\n    switch(bundleType){\n        case 'VOICE':{\n            title = isDevice ? \"Abonament komórkowy z telefonem\" : \"Abonament komórkowy\";\n            break;\n        }\n        case 'DATA': {\n            title = isDevice ? \"Internet mobilny z urządzeniem\" : \"Internet mobilny\";\n            break;\n        }\n        case 'SIMFREE_INST': {\n            title = 'Urządzenia bez abonamentu na raty';\n            break;\n        }\n        default: {\n            title = isDevice ? \"Abonament z telefonem\" : \"Abonament\";\n            break;\n        }\n    }\n    return msisdn.length > 0 ? title.concat(\" (\" + msisdn + \")\") : title;\n};\n\nexport const getPricesForPeriodSelectorForBundles = () => {\n    return createSelector(\n        [getCartEntries, getCartCheckoutCost, getCartServices, getCartOffers, getCartDevices, getCartDiscounts, (_, props) => ({\n            monthFrom: props.entry.monthFrom,\n            monthTo: props.entry.monthTo,\n            bundleNo: props.bundleNo,\n            processType: props.entry.processType\n        }), getPriceIsNet],\n        (minicartEntries, checkoutCost, services = [], offers = [], devices = [], discounts = [], period, getPriceIsNet) => {\n            let pricesForPeriod = [];\n            let isBusinessClient = false;\n            let mobileDevice;\n\n            if (checkoutCost) {\n                isBusinessClient = checkoutCost.isBusinessClient;\n            }\n\n            let priceIsNet = getPriceIsNet || isBusinessClient\n\n            if (!period.monthFrom) {\n                offers.filter(o => o.bundleNo === period.bundleNo).map((offer) => {\n                    if (offer.payNowCost && (offer.payNowCost.priceNet || offer.payNowCost.priceGross))\n                        pricesForPeriod.push(getPayNowPrice(offer.payNowCost, offer.description, isBusinessClient, priceIsNet))\n                });\n\n                services.filter(s => s.bundleNo === period.bundleNo).map((service) => {\n                    if (service.payNowCost)\n                        pricesForPeriod.push(getPayNowPrice(service.payNowCost, service.description, isBusinessClient, priceIsNet))\n                });\n\n                mobileDevice = devices.filter(d => d.entryType !== \"SIMFREE\").filter(d => d.bundleNo === period.bundleNo);\n                if (mobileDevice.length > 0) {\n                    mobileDevice.map((device) => {\n                        if (device.payNowCost)\n                            pricesForPeriod.push(getPayNowPrice(device.payNowCost, device.description, isBusinessClient, priceIsNet))\n                    });\n                } else {\n                    devices.filter(d => d.entryType === \"SIMFREE\").map((device) => {\n                        if (device.payNowCost)\n                            pricesForPeriod.push(getPayNowPrice(device.payNowCost, device.description, isBusinessClient, priceIsNet))\n                    });\n                }\n\n            } else {\n                offers.filter(o => o.bundleNo === period.bundleNo)\n                    .map((offer) => pricesForPeriod = pricesForPeriod\n                        .concat(extractDetailedPrices(offer, period, \"Opłata aktywacyjna za \", \"Abonament za \")));\n                discounts.filter(disc => disc.bundleNo === period.bundleNo)\n                    .map((discount) => pricesForPeriod = pricesForPeriod\n                        .concat(extractDetailedPrices(discount.monthlyCosts[discount.monthlyCosts.length - 1].monthTo === null ?\n                                changePeriod(discount, period.bundleNo, minicartEntries) : discount, period, \"\", \"\")));\n                services.filter(s => s.bundleNo === period.bundleNo)\n                    .map((service) => pricesForPeriod = pricesForPeriod\n                        .concat(extractDetailedPrices(([...service.monthlyCosts].pop() || {}).monthTo === null ?\n                            changePeriod(service, period.bundleNo, minicartEntries) : service, period, \"Opłata aktywacyjna za \", \"Abonament za \")));\n                devices.filter(d => d.entryType !== \"SIMFREE\").filter(d => d.bundleNo === period.bundleNo)\n                    .map((device) => pricesForPeriod = pricesForPeriod\n                        .concat(extractDetailedPrices(device.monthlyCosts[device.monthlyCosts.length - 1].monthTo === null ?\n                            changePeriod(device, period.bundleNo, minicartEntries) : device, period, \"\", device.entryType === \"FIX\" ? \"\" : \"Rata za \")));\n                devices.filter(d => d.entryType === \"SIMFREE\")\n                    .map((device) => pricesForPeriod = pricesForPeriod\n                        .concat(extractDetailedPrices(device, period, \"\", device.entryType === \"FIX\" ? \"\" : \"Rata za \")));\n            }\n            return pricesForPeriod;\n        }\n    );\n};\n\nfunction changePeriod(entry, bundleNo, minicartEntries){\n    const loyaltyLengthForBundle = minicartEntries.find(mE => mE.bundleNo === bundleNo).loyaltyLength;\n    if(loyaltyLengthForBundle > 0)\n        entry.monthlyCosts[entry.monthlyCosts.length-1].monthTo = loyaltyLengthForBundle;\n\n    return entry;\n}\n\nfunction isBusinessClient(checkoutCost){\n    return checkoutCost.isBusinessClient !== undefined && checkoutCost.isBusinessClient !== null && checkoutCost.isBusinessClient === true\n}\n\nfunction reproduceRowsAccordingToMandatoryPeriods(rows, mandatoryPeriodsForBundle){\n    function containsPeriod(rows, period){\n        return rows.filter(r=> r.monthTo == period || r.monthFrom == period)[0] != undefined\n    }\n    function splitInPeriod(rows, period){\n        let ret = []\n        rows.forEach(r => {\n            if(r.monthTo<period){\n                ret.push(r)\n            } else if(r.monthFrom>period){\n                ret.push(r)\n            }else{\n                //reproduce\n                let r1 = {...r}\n                let r2 = {...r}\n                r1.monthTo = period\n                r2.monthFrom = period + 1\n                ret.push(r1)\n                ret.push(r2)\n            }\n        })\n        return ret\n    }\n\n    let bundles = []\n    rows.forEach(row => {\n        if(bundles.indexOf(row.bundleNo) == -1){\n        bundles.push(row.bundleNo)\n        }\n    })\n\n    let ret = []\n    bundles.forEach(bundleNo => {\n        let rowsForBundle = rows.filter(r=> r.bundleNo == bundleNo);\n        let periods = mandatoryPeriodsForBundle[bundleNo];\n        periods.forEach(period => {\n            if(!containsPeriod(rowsForBundle, period)){\n                rowsForBundle = splitInPeriod(rowsForBundle, period)\n            }\n        })\n\n        ret = ret.concat(rowsForBundle)\n    })\n    return ret\n}\n\nexport const getCartState = state => state[\"cart\"];\nexport const getVoucherData = createSelector(getCartState, cart => cart.voucher);\nexport const getVoucherCode = createSelector(getVoucherData, voucher => voucher.voucherCode);\nexport const getVoucherError = createSelector(getVoucherData, voucher => voucher.error);\nexport const getVoucherMetadata = createSelector(getVoucherData, voucher => voucher.metadata);\nexport const getVoucherApplicableProductsRequested = createSelector(getVoucherMetadata, metadata => metadata.loading);\nexport const getVoucherApplicableProducts = createSelector(getVoucherData, voucher => voucher.applicableProducts);\nexport const getVoucherName = createSelector(getVoucherData, voucher => voucher.voucherName);\nexport const getDepositCost = createSelector(getCartData, cart => cart.checkoutCost ? cart.checkoutCost.deposit : 0);\n\nexport const getTerminalForBundleAndEntryNumber = (bundleNumber, entryNumber) => createSelector(getCartEntries, cartEntries => cartEntries\n    .reduce((terminals, cartEntry) => [...terminals, ...cartEntry.terminals], [])\n    .find(terminal => terminal.bundleNo === bundleNumber && terminal.entryNo === entryNumber)\n);\nexport const getCartEntryById = id => createSelector(getCartEntries, cartEntries => cartEntries.find(cartEntry => cartEntry.bundleNo = id));\n\nexport const isVasModalOpen = createSelector(getCartState, cart => cart.vasModalStatus);\nexport const isBonusModalOpen = createSelector(getCartState, cart => cart.bonusModalStatus);\n\nexport const getBonusEntry = createSelector(getCartData, cart => cart.bonuses || []);\n\nexport const getPaymentPlanAssignValue = createSelector(getAssignmnetData, assignment => assignment.isPaymentPlanAssigned);\n\nexport const getDeathCertificateConfirmed = createSelector(getAssignmnetData, assignment => assignment.isDeathCertificateConfirmed);\n\nexport const getEntryUnderChange = createSelector([getCartEntries, getAddTerminalToOfferBundleNo], (cartEntries, addTerminalToOfferBundleNo) => {\n    if(addTerminalToOfferBundleNo && cartEntries) {\n      return cartEntries.find(e => e.bundleNo == addTerminalToOfferBundleNo);\n    }\n});\nexport const getChangedDevice = createSelector(getEntryUnderChange, entry => takeDevice(entry));\nexport const getKdrData = createSelector(getCartState, cart => cart.kdrData);\nexport const getKdrNumber = createSelector(getKdrData, kdr => kdr.kdrNumber || \"\");\nexport const getKdrSource = createSelector(getKdrData, kdr => kdr.kdrSource || \"\");\nexport const getKdrErrors = createSelector(getKdrData, kdr => kdr.error);\nexport const getKdrSaving = createSelector(getKdrData, kdr => kdr.saving);\nexport const getKdrAccepted = createSelector(getKdrData, kdr => !!kdr.accepted);\nexport const getKdrCheckoutData = createSelector([getKdrNumber, getKdrSource], (number, source) => ({number, source}));\n\nexport const hasOnlyAssignment = createSelector(getCartEntriesRaw, entries => {\n    return entries && entries.length &&  entries.every(entry => TransactionProcessType.isAssignment(entry.processType));\n});\n\nexport const getCustomFilters = createSelector(getCartState, cart => cart.tvPackagesFilters);\nexport const isWwwChannel = createSelector(getMiniCart, miniCart => miniCart.isWwwChannel);\nexport const getLeadId = createSelector(getMiniCart, miniCart => miniCart.leadId);\n\nexport const getInvoiceData = createSelector(getCartState, cart => cart.invoiceData);\n\nexport const getChangePackagesModalInitData = createSelector(getMobileVases, getCartEntries, (vases, entries) => {\n    if (vases.length === 0) {\n        return {};\n    }\n    let VAS_PACKAGE_CATEGORY = \"GratisPackageBonuses\"\n    const vasByPropositionId = (vases || []).reduce((a,b) => ({...a, [b.propositionId]: b}), {});\n    let ret =  (entries || []).map(entry => {\n        //FROM ENTRY\n        const v = vasByPropositionId[entry.bundleCode];\n        if(!v) return;\n\n        let cartPackagesCodes = ((entry && entry.vases) || [])\n            .filter(v => (v.categories || []).includes(VAS_PACKAGE_CATEGORY))\n            .map(v => v.productCode);\n        let cartVases = ((entry && entry.vases) || [])\n        .filter(v => !(v.categories || []).includes(VAS_PACKAGE_CATEGORY))\n\n        //FORM AVAILABLE VASES\n        let gratisPackageBonuses = v.categorizedBonuses && v.categorizedBonuses[VAS_PACKAGE_CATEGORY];\n        let groups = (gratisPackageBonuses && gratisPackageBonuses.groups) || [];\n        let services = (gratisPackageBonuses && gratisPackageBonuses.services) || [];\n\n        let exclusions = calculatePackagesExclusions(services, cartVases, v.relations);\n        console.log(\"exclusions: \")\n        console.log(exclusions)\n\n        let packets = services.map(p => ({\n            ...p.longDescriptionInJsonFormat,\n            id: p.id,\n            title: p.title,\n            weight: p.weight || 1,\n            warning: exclusions.filter(e => e.packets.includes(p.id)).map(e => e.warning)[0]\n        }));\n\n        return {\n            bundleNo: entry.bundleNo,\n            data: {\n                plan: {\n                    name: entry && entry.planName,\n                    capacity: calculatePackageCapacity(services, groups)\n                },\n                packets: packets,\n                selected: cartPackagesCodes\n            }\n        };\n\n    }).filter(notNull => notNull).reduce((a,b) => ({...a, [b.bundleNo]: b.data}) ,{});\n\n    return ret;\n});\n\nfunction calculatePackagesExclusions(packages, cartVases, relations){\n    let availablePacketsCodes = packages.map(s => s.id);\n\n    return (relations || [])\n    .filter(r => r.type == \"EXCLUDE\")\n    .map(r => ({\n        warnings: cartVases.filter(v => [...r.sourceVases, ...r.targetVases].includes(v.productCode))\n            .map(v => ({id: v.productCode, name: v.name })),\n        packets: [...r.sourceVases, ...r.targetVases].filter(value => availablePacketsCodes.includes(value))\n    }))\n    .filter(r => r.warnings[0] && r.packets[0])\n    .map(r => {\n        if(r.warnings.length > 1){\n            console.error(\"More than one conflict with vases in cart is not supported. Warnings: \"+ JSON.stringify(r.warnings) + \". Packets: \"+ JSON.stringify(r.packets))\n        }\n        return {\n            warning: r.warnings[0],\n            packets: r.packets\n        }\n    });\n}\n\nfunction calculatePackageCapacity(services, groups){\n    if (groups.length == 0){\n        console.error(\"Cannot find any group\")\n        return 0;\n    } else if (groups.length == 1){\n        return groups[0].min || 0;\n    }\n\n    let packageBonusCodesJoined = services\n    .filter(p => p.bonuses && p.bonuses.length === 1 && p.bonuses[0].code)\n    .map(p => p.bonuses && p.bonuses.length === 1 && p.bonuses[0].code)\n    .sort()\n    .join();\n\n    let capacityGroup = groups.filter(\n        g => (g.targetProducts || []).sort().join() == packageBonusCodesJoined\n    )[0]\n\n    return (capacityGroup && capacityGroup.min) || 0;\n}"],
    "file": "selectors.js"
}