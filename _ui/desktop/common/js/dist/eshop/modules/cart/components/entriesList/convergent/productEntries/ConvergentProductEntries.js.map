{
    "version": 3,
    "sources": ["../../../../../../../../../es6/eshop/modules/cart/components/entriesList/convergent/productEntries/ConvergentProductEntries.jsx"],
    "names": ["ConvergentProductEntries", "props", "state", "loader", "callback", "show", "hasConfigurables", "OPL", "UI", "fire", "$", "section", "setState", "configurables", "length", "doContinueActionCallback", "productSections", "sectionConf", "ProcessType", "_2U", "entry", "entries", "filter", "ProductEntryType", "PARAGRAPH", "entryType", "mandatoryProducts", "Object", "keys", "map", "s", "reduce", "a", "b", "concat", "tvPackages", "getAllTvPackages", "sections", "TERMINAL", "getMobileTerminals", "onChange", "onDeviceChange", "onRemove", "onRemoveTerminal", "lowerInstallmentsClicked", "VAS", "getVases", "onClickAddVas", "onRemoveProduct", "EURO_SET", "getEuroSets", "TV_PACKAGE", "getTvPackages", "onClickAddTvPackage", "SECONDARY_CHOICE", "getBonusSection", "buyMoreProductsSections", "index", "GADGET", "buyMoreLabel", "icon", "console", "log", "showBodyLoader", "isTvSubEntry", "areSecondaryChoiceBonusesAvailable", "onClickAddFixBonus", "marginLeft", "marginRight", "sectionTitle", "showNetPrices", "subEntry", "CartEntryType", "MOBILE", "acc", "terminals", "e", "mandatory", "_", "includes", "productCode", "is3ULTEActivation", "processType", "_3ULTE", "fixTerminals", "FIX", "t", "hiddenEntry", "vases", "getAllVases", "v", "allEntries", "isEntryMandatory", "selectedGroupedProductsIds", "quantityGroup", "euroSets", "is3ULTE", "fix", "ProcessTypeEnum", "TV0_ACTIVATION", "shouldTvPackageBeDisplayed", "tvPackage", "tvPackageConf", "getTvPackageConfiguration", "addonType", "AddonType", "TVBASIC", "vas", "configurablesEntry", "id", "shift", "undefined", "bonusEntries", "is2ULTE", "_2ULTE", "getBonusSectionLTE", "getDiscounts", "bonus", "secondaryChoiceDiscount", "code", "discountGroup", "magnumDiscounts", "service", "SECONDARY_CHOICE_DISCOUNT", "some", "checkoutPrice", "payNowCost", "firstBillPrice", "oneTimeCost", "monthlyPrices", "monthlyCosts", "copy", "cost", "copyCost", "net", "OnlineUtils", "formatPrice", "price", "gross", "unchangeable", "name", "description", "Component", "mapStateToProps", "cart", "convergentConfigurables"],
    "mappings": ";;;;;;;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;MAEMA,wB;;;;;AAEL,sCAAYC,KAAZ,EAAmB;AAAA;;AAAA;AAClB,gCAAMA,KAAN;AADkB,yGAWW,YAAM;AAChC,YAAG,CAAC,CAAC,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,QAApB,IAAgC,MAAKF,KAAL,CAAWC,MAAX,CAAkBE,IAAlD,IAA0D,MAAKC,gBAAL,EAA7D,EAAsF;AAC/EC,UAAAA,GAAG,CAACC,EAAJ,CAAOC,IAAP,CAAY,qBAAZ,EAAmCC,CAAC,CAAC,oBAAD,CAApC;;AACN,gBAAKR,KAAL,CAAWC,MAAX,CAAkBC,QAAlB,CAA2B;AAACO,YAAAA,OAAO,EAAE,MAAKT,KAAL,CAAWC,MAAX,CAAkBQ;AAA5B,WAA3B;;AACA,gBAAKC,QAAL,CAAc;AAACT,YAAAA,MAAM,EAAE;AAAT,WAAd;AACA;AACD,OAjBe;AAAA,iGAmBG,YAAM;AACxB,eAAO,MAAKF,KAAL,CAAWY,aAAX,IAA4B,MAAKZ,KAAL,CAAWY,aAAX,CAAyBA,aAArD,IAAsE,MAAKZ,KAAL,CAAWY,aAAX,CAAyBA,aAAzB,CAAuCC,MAApH;AACA,OArBe;AAElB,YAAKZ,KAAL,GAAa;AACZC,QAAAA,MAAM,EAAE;AADI,OAAb;AAFkB;AAKlB;;;;2CAEuB;AACvB,aAAKY,wBAAL;AACG;;;+BAcQ;AAAA;;AACL,YAAIC,eAAe,GAAG,KAAKf,KAAL,CAAWgB,WAAX,GAAyB,KAAKhB,KAAL,CAAWgB,WAAX,CAAuBD,eAAhD,GAAkE,EAAxF;;AAEA,YAAGE,yBAAYC,GAAZ,IAAmB,2BAAe,KAAKlB,KAAL,CAAWmB,KAAX,CAAiBC,OAAhC,CAAtB,EAA+D;AAC3DL,UAAAA,eAAe,GAAGA,eAAe,CAACM,MAAhB,CAAwB,UAAAX,OAAO;AAAA,mBAAIY,8BAAiBC,SAAjB,IAA8Bb,OAAO,CAACc,SAA1C;AAAA,WAA/B,CAAlB;AACH;;AAED,YAAMZ,aAAa,GAAG,KAAKZ,KAAL,CAAWY,aAAX,CAAyBA,aAA/C;AACA,YAAMa,iBAAiB,GAAGb,aAAa,IAAIc,MAAM,CAACC,IAAP,CAAYf,aAAZ,CAAjB,IAC1Bc,MAAM,CAACC,IAAP,CAAYf,aAAZ,EAA2BgB,GAA3B,CAA+B,UAAAC,CAAC;AAAA,iBAAIjB,aAAa,CAACiB,CAAD,CAAjB;AAAA,SAAhC,EAAsDC,MAAtD,CAA6D,UAACC,CAAD,EAAGC,CAAH;AAAA,iBAASD,CAAC,CAACE,MAAF,CAASD,CAAC,CAACP,iBAAX,CAAT;AAAA,SAA7D,EAAqG,EAArG,CAD0B,IACkF,EAD5G;AAGA,YAAMS,UAAU,GAAG,KAAKC,gBAAL,CAAsBvB,aAAtB,CAAnB;AAEA,YAAMwB,QAAQ,GAAG,EAAjB;AACAA,QAAAA,QAAQ,CAACd,8BAAiBe,QAAlB,CAAR,GAAsC;AAACjB,UAAAA,OAAO,EAAE,KAAKkB,kBAAL,CAAwBb,iBAAxB,CAAV;AAAsDc,UAAAA,QAAQ,EAAE,KAAKvC,KAAL,CAAWwC,cAA3E;AAA2FC,UAAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAW0C,gBAAhH;AAAkIC,UAAAA,wBAAwB,EAAE,KAAK3C,KAAL,CAAW2C;AAAvK,SAAtC;AACAP,QAAAA,QAAQ,CAACd,8BAAiBsB,GAAlB,CAAR,GAAiC;AAACxB,UAAAA,OAAO,EAAE,KAAKyB,QAAL,CAAcjC,aAAd,EAA6BsB,UAA7B,CAAV;AAAoDK,UAAAA,QAAQ,EAAE,KAAKvC,KAAL,CAAW8C,aAAzE;AAAwFL,UAAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAW+C;AAA7G,SAAjC;AACAX,QAAAA,QAAQ,CAACd,8BAAiB0B,QAAlB,CAAR,GAAsC;AAAC5B,UAAAA,OAAO,EAAE,KAAK6B,WAAL,CAAiBxB,iBAAjB,CAAV;AAA+Cc,UAAAA,QAAQ,EAAE,KAAKvC,KAAL,CAAWwC,cAApE;AAAoFC,UAAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAW0C;AAAzG,SAAtC;AACAN,QAAAA,QAAQ,CAACd,8BAAiB4B,UAAlB,CAAR,GAAwC;AAAC9B,UAAAA,OAAO,EAAE,KAAK+B,aAAL,CAAmBvC,aAAnB,EAAkCsB,UAAlC,CAAV;AAAyDK,UAAAA,QAAQ,EAAE,KAAKvC,KAAL,CAAWoD,mBAA9E;AAAmGX,UAAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAW+C;AAAxH,SAAxC;AACAX,QAAAA,QAAQ,CAACd,8BAAiB+B,gBAAlB,CAAR,GAA8C;AAACjC,UAAAA,OAAO,EAAE,KAAKkC,eAAL,CAAqB,KAAKtD,KAA1B,EAAiCyB,iBAAjC,CAAV;AAA+Dc,UAAAA,QAAQ,EAAE,KAAKvC,KAAL,CAAW8C,aAApF;AAAmGL,UAAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAW+C;AAAxH,SAA9C;AAEA,YAAMQ,uBAAuB,GAAGxC,eAAe,CAACa,GAAhB,CAAoB,UAAClB,OAAD,EAAS8C,KAAT,EAAmB;AACnE,kBAAO9C,OAAO,CAACc,SAAf;AACI,iBAAKF,8BAAiBmC,MAAtB;AAA8B;AAC1B,oCACI;AAAK,kBAAA,GAAG,EAAE/C,OAAO,CAACc,SAAR,GAAkBgC,KAA5B;AAAmC,kBAAA,SAAS,EAAC;AAA7C,gCACI,6BAAC,6BAAD;AACI,kBAAA,YAAY,EAAE9C,OAAO,CAACgD,YAD1B;AAEI,kBAAA,IAAI,EAAEhD,OAAO,CAACiD,IAFlB;AAGI,kBAAA,gBAAgB,EAAE;AAAA,2BAAMC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAN;AAAA;AAHtB,kBADJ,CADJ;AASH;;AACD,iBAAKvC,8BAAiBsB,GAAtB;AAA2B;AACvB,oCACK;AAAK,kBAAA,GAAG,EAAElC,OAAO,CAACc,SAAR,GAAoBgC;AAA9B,gCACG;AAAK,kBAAA,SAAS,EAAC;AAAf,gCACI;AAAK,kBAAA,EAAE,EAAC;AAAR,gCACI,6BAAC,6BAAD;AACI,kBAAA,YAAY,EAAE9C,OAAO,CAACgD,YAD1B;AAEI,kBAAA,IAAI,EAAEhD,OAAO,CAACiD,IAFlB;AAGI,kBAAA,gBAAgB,EAAE,4BAAK;AAAC,oBAAA,MAAI,CAACG,cAAL,CAAoB,MAAI,CAAC9D,KAAL,CAAW8C,aAA/B,EAA8CpC,OAA9C;AAAuD;AAHnF,kBADJ,CADJ,CADH,CADL;AAaH;;AACD,iBAAKY,8BAAiB4B,UAAtB;AAAkC;AAC9B,oCACI;AAAK,kBAAA,GAAG,EAAExC,OAAO,CAACc,SAAR,GAAoBgC;AAA9B,mBACK,MAAI,CAACxD,KAAL,CAAW+D,YAAX,iBACG;AAAK,kBAAA,SAAS,EAAC;AAAf,gCACI;AAAK,kBAAA,EAAE,EAAC;AAAR,gCACI,6BAAC,6BAAD;AACI,kBAAA,YAAY,EAAErD,OAAO,CAACgD,YAD1B;AAEI,kBAAA,IAAI,EAAEhD,OAAO,CAACiD,IAFlB;AAGI,kBAAA,gBAAgB,EAAE,4BAAK;AAAC,oBAAA,MAAI,CAACG,cAAL,CAAoB,MAAI,CAAC9D,KAAL,CAAWoD,mBAA/B,EAAoD1C,OAApD;AAA6D;AAHzF,kBADJ,CADJ,CAFR,CADJ;AAeH;;AACD,iBAAKY,8BAAiB+B,gBAAtB;AAAwC;AACpC,oCACI;AAAK,kBAAA,GAAG,EAAE3C,OAAO,CAACc,SAAR,GAAoBgC;AAA9B,mBACK,MAAI,CAACxD,KAAL,CAAWgE,kCAAX,iBACG;AAAK,kBAAA,SAAS,EAAC;AAAf,gCACI;AAAK,kBAAA,EAAE,EAAC;AAAR,gCACI,6BAAC,6BAAD;AACI,kBAAA,YAAY,EAAEtD,OAAO,CAACgD,YAD1B;AAEI,kBAAA,IAAI,EAAEhD,OAAO,CAACiD,IAFlB;AAGI,kBAAA,gBAAgB,EAAE,4BAAM;AAAC,oBAAA,MAAI,CAACG,cAAL,CAAoB,MAAI,CAAC9D,KAAL,CAAWiE,kBAA/B,EAAmDvD,OAAnD;AAA4D;AAHzF,kBADJ,CADJ,CAFR,CADJ;AAeH;;AACD,iBAAKY,8BAAiBC,SAAtB;AAAiC;AAC7B,oCACI;AAAK,kBAAA,SAAS,EAAC,WAAf;AAA2B,kBAAA,KAAK,EAAE;AAAC2C,oBAAAA,UAAU,EAAE,OAAb;AAAsBC,oBAAAA,WAAW,EAAE;AAAnC;AAAlC,gCACI,6BAAC,qCAAD;AACI,kBAAA,GAAG,EAAEzD,OAAO,CAACc,SAAR,GAAoBgC,KAD7B;AAEI,kBAAA,OAAO,EAAE9C,OAAO,CAAC0D,YAFrB;AAGI,kBAAA,YAAY,EAAE,GAHlB;AAII,kBAAA,YAAY,EAAE;AAJlB,kBADJ,CADJ;AAUH;;AACD;AAAS;AACL,uBAAO,IAAP;AACH;AA3EL;AA6EH,SA9E+B,CAAhC;AAgFA,4BACK;AAAK,UAAA,EAAE,EAAC;AAAR,wBACO;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI,6BAAC,6BAAD;AAAsB,UAAA,QAAQ,EAAEhC,QAAhC;AAA0C,UAAA,WAAW,EAAE,KAAKpC,KAAL,CAAWgB,WAAlE;AAA+E,UAAA,aAAa,EAAE,KAAKhB,KAAL,CAAWqE;AAAzG,UADJ,CADP,eAIO;AAAK,UAAA,SAAS,EAAC;AAAf,wBACQ;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAyC,UAAA,EAAE,EAAC;AAA5C,WACSd,uBADT,CADR,CAJP,CADL;AAYH;;;qCAEcpD,Q,EAAUO,O,EAAS;AACjC,YAAG,KAAKL,gBAAL,EAAH,EAA4B;AAC3BF,UAAAA,QAAQ,CAAC;AAACO,YAAAA,OAAO,EAAEA;AAAV,WAAD,CAAR;AACA,SAFD,MAEO;AACN,eAAKC,QAAL,CAAc;AACbT,YAAAA,MAAM,EAAC;AACTC,cAAAA,QAAQ,EAAEA,QADD;AAETO,cAAAA,OAAO,EAAEA,OAFA;AAGTN,cAAAA,IAAI,EAAE;AAHG;AADM,WAAd;AAOME,UAAAA,GAAG,CAACC,EAAJ,CAAOC,IAAP,CAAY,qBAAZ,EAAmCC,CAAC,CAAC,oBAAD,CAApC;AACN;AACJ;;;yCAEqBgB,iB,EAAmB;AAAA;;AAClC,eAAO,KAAKzB,KAAL,CAAWmB,KAAX,CAAiBC,OAAjB,CACFC,MADE,CACK,UAAAiD,QAAQ;AAAA,iBAAIA,QAAQ,CAAC9C,SAAT,KAAuB+C,2BAAcC,MAAzC;AAAA,SADb,EAEF1C,MAFE,CAEK,UAAC2C,GAAD,EAAMH,QAAN;AAAA,iBAAmBG,GAAG,CAACxC,MAAJ,CAAWqC,QAAQ,CAACI,SAApB,CAAnB;AAAA,SAFL,EAEwD,EAFxD,EAGF9C,GAHE,CAGE,UAAA+C,CAAC;AAAA,mCAASA,CAAT;AAAYC,YAAAA,SAAS,EAAEC,gBAAEC,QAAF,CAAWrD,iBAAX,EAA8BkD,CAAC,CAACI,WAAhC,KAAgD,MAAI,CAACC,iBAAL;AAAvE;AAAA,SAHH,CAAP;AAIH;;;gCAES;AACN,YAAMC,WAAW,GAAG,2BAAe,KAAKjF,KAAL,CAAWmB,KAAX,CAAiBC,OAAhC,CAApB;AACA,eAAO6D,WAAW,KAAKhE,yBAAYiE,MAAnC;AACH;;;+BAEQtE,a,EAAesB,U,EAAY;AAAA;;AAChC,YAAMiD,YAAY,GAAG,KAAKnF,KAAL,CAAWmB,KAAX,CAAiBC,OAAjB,CAChBC,MADgB,CACT,UAAAiD,QAAQ;AAAA,iBAAIA,QAAQ,CAAC9C,SAAT,KAAuB+C,2BAAca,GAAzC;AAAA,SADC,EAEhBtD,MAFgB,CAET,UAAC2C,GAAD,EAAMH,QAAN;AAAA,iBAAmBG,GAAG,CAACxC,MAAJ,CAAW,CAACqC,QAAQ,CAACI,SAAT,IAAsB,EAAvB,EAA2BrD,MAA3B,CAAkC,UAAAgE,CAAC;AAAA,mBAAI,CAACA,CAAC,CAACC,WAAP;AAAA,WAAnC,CAAX,CAAnB;AAAA,SAFS,EAE8E,EAF9E,CAArB;AAGA,YAAMC,KAAK,GAAG,KAAKC,WAAL,GAAmBnE,MAAnB,CAA0B,UAAAoE,CAAC;AAAA,iBAAI,CAACZ,gBAAEC,QAAF,CAAW5C,UAAX,EAAuBuD,CAAC,CAACV,WAAzB,CAAL;AAAA,SAA3B,CAAd;AAEA,YAAMW,UAAU,4CAAOP,YAAP,kCAAwBI,KAAxB,EAAhB;AACA,eAAOG,UAAU,CAAC9D,GAAX,CAAe,UAAA6D,CAAC;AAAA,mCAASA,CAAT;AAAYb,YAAAA,SAAS,EAAE,MAAI,CAACe,gBAAL,CAAsBF,CAAtB,EAAyBC,UAAzB,EAAqC9E,aAArC;AAAvB;AAAA,SAAhB,CAAP;AACH;;;uCAEgBO,K,EAAOuE,U,EAAY9E,a,EAAe;AAC/C,YAAMgF,0BAA0B,GAAGF,UAAU,CAACrE,MAAX,CAAkB,UAAAsD,CAAC;AAAA,iBAAI,CAAC,CAACA,CAAC,CAACkB,aAAJ,IAAqBlB,CAAC,CAACkB,aAAF,KAAoB1E,KAAK,CAAC0E,aAAnD;AAAA,SAAnB,EAAqFjE,GAArF,CAAyF,UAAA+C,CAAC;AAAA,iBAAIA,CAAC,CAACI,WAAN;AAAA,SAA1F,CAAnC;AACA,eAAO,oCAAY5D,KAAK,CAAC4D,WAAlB,EAA+BnE,aAA/B,EAA8CgF,0BAA9C,CAAP;AACH;;;kCAEWnE,iB,EAAkB;AAAA;;AAC1B,eAAO,KAAKzB,KAAL,CAAWmB,KAAX,CAAiBC,OAAjB,CACFC,MADE,CACK,UAAAiD,QAAQ;AAAA,iBAAIA,QAAQ,CAAC9C,SAAT,KAAuB+C,2BAAcC,MAAzC;AAAA,SADb,EAEF1C,MAFE,CAEK,UAAC2C,GAAD,EAAKH,QAAL;AAAA,iBAAkBG,GAAG,CAACxC,MAAJ,CAAWqC,QAAQ,CAACwB,QAApB,CAAlB;AAAA,SAFL,EAEsD,EAFtD,EAGFlE,GAHE,CAGE,UAAA+C,CAAC;AAAA,mCAASA,CAAT;AAAYC,YAAAA,SAAS,EAAEC,gBAAEC,QAAF,CAAWrD,iBAAX,EAA8BkD,CAAC,CAACI,WAAhC,KAAgD,MAAI,CAACC,iBAAL;AAAvE;AAAA,SAHH,CAAP;AAIH;;;0CAEkB;AACf,eAAO,KAAKe,OAAL,MAAkB,KAAK/F,KAAL,CAAWmB,KAAX,CAAiBC,OAAjB,CACpBC,MADoB,CACb,UAAAiD,QAAQ;AAAA,iBAAIA,QAAQ,CAAC9C,SAAT,KAAuB+C,2BAAca,GAAzC;AAAA,SADK,EAEpB/D,MAFoB,CAEb,UAAA2E,GAAG;AAAA,iBAAIA,GAAG,CAACf,WAAJ,KAAoBgB,0BAAgBC,cAAxC;AAAA,SAFU,EAE8CrF,MAF9C,GAEuD,CAFhF;AAGH;;;oCAEaD,a,EAAesB,U,EAAW;AAAA;;AACpC,eAAO,KAAKsD,WAAL,GACFnE,MADE,CACK,UAAAoE,CAAC;AAAA,iBAAIZ,gBAAEC,QAAF,CAAW5C,UAAX,EAAuBuD,CAAC,CAACV,WAAzB,CAAJ;AAAA,SADN,EAEF1D,MAFE,CAEK,UAAAoE,CAAC;AAAA,iBAAI,MAAI,CAACU,0BAAL,CAAgCvF,aAAhC,EAA+C6E,CAA/C,CAAJ;AAAA,SAFN,CAAP;AAGH;;;oCAEa;AACV,eAAO,KAAKzF,KAAL,CAAWmB,KAAX,CAAiBC,OAAjB,CAAyBU,MAAzB,CAAgC,UAAC2C,GAAD,EAAKH,QAAL;AAAA,iBAAkBG,GAAG,CAACxC,MAAJ,CAAWqC,QAAQ,CAACiB,KAApB,CAAlB;AAAA,SAAhC,EAA8E,EAA9E,CAAP;AACH;;;iDAE0B3E,a,EAAewF,S,EAAW;AACjD,YAAIC,aAAa,GAAG,KAAKC,yBAAL,CAA+B1F,aAA/B,EAA8CwF,SAA9C,CAApB;AAEA,eAAOC,aAAa,IAAIA,aAAa,CAACE,SAAd,KAA4BC,uBAAUC,OAA9D;AACH;;;gDAEyB7F,a,EAAe8F,G,EAAK;AAC1C,YAAG9F,aAAH,EAAkB;AACf,iBAAOA,aAAa,CACdkB,MADC,CACM,UAAC2C,GAAD,EAAMkC,kBAAN;AAAA,mBAA6BlC,GAAG,CAACxC,MAAJ,CAAW0E,kBAAkB,CAACzE,UAA9B,CAA7B;AAAA,WADN,EAC8E,EAD9E,EAEDb,MAFC,CAEM,UAAA+E,SAAS;AAAA,mBAAIA,SAAS,CAACQ,EAAV,KAAiBF,GAAG,CAAC3B,WAAzB;AAAA,WAFf,EAGD8B,KAHC,EAAP;AAIF,SALD,MAKO;AACH,iBAAOC,SAAP;AACH;AACJ;;;uCAEgBlG,a,EAAe;AAC5B,eAAOA,aAAa,IAAIA,aAAa,CAChCkB,MADmB,CACZ,UAAC2C,GAAD,EAAMkC,kBAAN;AAAA,iBAA6BlC,GAAG,CAACxC,MAAJ,CAAW0E,kBAAkB,CAACzE,UAA9B,CAA7B;AAAA,SADY,EAC4D,EAD5D,EAEnBN,GAFmB,CAEf,UAAA6D,CAAC;AAAA,iBAAIA,CAAC,CAACmB,EAAN;AAAA,SAFc,CAAjB,IAEgB,EAFvB;AAGH;;;sCAEe5G,K,EAAOyB,iB,EAAmB;AAAA,YAC/BsF,YAD+B,GACf/G,KADe,CAC/B+G,YAD+B;AAEtC,YAAMC,OAAO,GAAG/F,yBAAYgG,MAAZ,KAAuB,2BAAe,KAAKjH,KAAL,CAAWmB,KAAX,CAAiBC,OAAhC,CAAvC;;AACA,YAAI4F,OAAJ,EAAa;AACT,iBAAO,KAAKE,kBAAL,CAAwBlH,KAAxB,EAA+ByB,iBAA/B,CAAP;AACH,SALqC,CAMtC;;;AACA,eAAO,KAAK0F,YAAL,CAAkBJ,YAAY,CAAC1F,MAAb,CAAoB,UAAA+F,KAAK;AAAA,iBAAIA,KAAK,CAACC,uBAAV;AAAA,SAAzB,KAA+D,EAAjF,EACFzF,GADE,CACE,UAAAI,CAAC;AAAA,mCACCA,CADD;AAEF+C,YAAAA,WAAW,EAAE/C,CAAC,CAACsF,IAFb;AAGF1C,YAAAA,SAAS,EAAE,CAAC,CAAC5C,CAAC,CAACuF,aAAJ,IAAsB9F,iBAAiB,IAAIA,iBAAiB,CAACqD,QAAlB,CAA2B9C,CAAC,CAACsF,IAA7B;AAHpD;AAAA,SADH,CAAP;AAMH;;;yCAEkBtH,K,EAAOyB,iB,EAAmB;AAAA;;AAAA,YAClCsF,YADkC,GAClB/G,KADkB,CAClC+G,YADkC;AAEzC,YAAIS,eAAe,GAAG,KAAKL,YAAL,CAAkBJ,YAAY,CAAC1F,MAAb,CAAoB,UAAA+F,KAAK;AAAA,iBAAIA,KAAK,CAACC,uBAAN,IAAiC,CAAC,MAAI,CAACrH,KAAL,CAAWgE,kCAAjD;AAAA,SAAzB,KAAiH,EAAnI,EACjBpC,GADiB,CACb,UAAAI,CAAC;AAAA,mCAASA,CAAT;AAAY4C,YAAAA,SAAS,EAAE,CAAC,CAAC5C,CAAC,CAACuF,aAAJ,IAAsB9F,iBAAiB,IAAIA,iBAAiB,CAACqD,QAAlB,CAA2B9C,CAAC,CAACsF,IAA7B;AAAlE;AAAA,SADY,CAAtB;AAGA,eAAO,CAAC,CAACE,eAAe,CAAC3G,MAAlB,GAA2B2G,eAA3B,GACH,yCAAI,KAAKhC,WAAL,EAAJ,kCAA2BxF,KAAK,CAACmB,KAAN,CAAYoE,KAAvC,GACKlE,MADL,CACY,UAAAoG,OAAO;AAAA,iBAAIA,OAAO,CAAClB,SAAR,KAAsBC,uBAAUkB,yBAAhC,IAA6DX,YAAY,CAACY,IAAb,CAAkB,UAAAhD,CAAC;AAAA,mBAAIA,CAAC,CAAC2C,IAAF,KAAWG,OAAO,CAAC1C,WAAvB;AAAA,WAAnB,CAAjE;AAAA,SADnB,EAEKnD,GAFL,CAES,UAAAwF,KAAK,EAAI;AACV,cAAMjG,KAAK,GAAG4F,YAAY,CAAC1F,MAAb,CAAoB,UAAAsD,CAAC;AAAA,mBAAIA,CAAC,CAAC2C,IAAF,KAAWF,KAAK,CAACrC,WAArB;AAAA,WAArB,EAAuD,CAAvD,CAAd;;AACA,cAAI5D,KAAJ,EAAW;AACPiG,YAAAA,KAAK,CAACQ,aAAN,GAAsBzG,KAAK,CAAC0G,UAA5B;AACAT,YAAAA,KAAK,CAACU,cAAN,GAAuB3G,KAAK,CAAC4G,WAA7B;AACAX,YAAAA,KAAK,CAACY,aAAN,GAAsB7G,KAAK,CAAC8G,YAA5B;AACH;;AACDb,UAAAA,KAAK,CAACxC,SAAN,GAAkB,CAAC,CAACzD,KAAK,CAACoG,aAAR,IAA0B9F,iBAAiB,IAAIA,iBAAiB,CAACqD,QAAlB,CAA2BsC,KAAK,CAACrC,WAAjC,CAAjE;AACA,iBAAOqC,KAAP;AACH,SAXL,CADJ;AAaH;;;mCAEYL,Y,EAAc;AACvB,eAAOA,YAAY,CAACnF,GAAb,CAAiB,UAAAwF,KAAK,EAAI;AAC7B,cAAIc,IAAI,qBAAOd,KAAP,CAAR;;AACA,cAAGA,KAAK,CAACa,YAAT,EAAsB;AAClBC,YAAAA,IAAI,CAACF,aAAL,GAAqBZ,KAAK,CAACa,YAAN,CAAmBrG,GAAnB,CAAwB,UAAAuG,IAAI,EAAI;AACjD,kBAAIC,QAAQ,qBAAKD,IAAL,CAAZ;;AACAC,cAAAA,QAAQ,CAACC,GAAT,GAAgBC,qBAAYC,WAAZ,CAAyBH,QAAQ,CAACI,KAAlC,CAAhB;AACAJ,cAAAA,QAAQ,CAACK,KAAT,GAAiBH,qBAAYC,WAAZ,CAAyBH,QAAQ,CAACI,KAAlC,CAAjB;AACA,qBAAOJ,QAAP;AACH,aALoB,CAArB;AAMH;;AACDF,UAAAA,IAAI,CAACQ,YAAL,GAAoB,IAApB;AACAR,UAAAA,IAAI,CAACS,IAAL,GAAYT,IAAI,CAACU,WAAjB;AACAV,UAAAA,IAAI,CAACU,WAAL,GAAmB,EAAnB;AACA,iBAAOV,IAAP;AACH,SAdM,CAAP;AAeH;;;IAtRkCW,gB;;AA0RvC,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAA7I,KAAK;AAAA,WAAK;AAC9B8D,MAAAA,YAAY,EAAE,6BAAa9D,KAAb,CADgB;AAE9BW,MAAAA,aAAa,EAAEX,KAAK,CAAC8I,IAAN,CAAWC,uBAFI;AAG9BjC,MAAAA,YAAY,EAAE,8BAAc9G,KAAd;AAHgB,KAAL;AAAA,GAA7B;;iBAMe,yBAAQ6I,eAAR,EAAyB,IAAzB,EAA+B/I,wBAA/B,C",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport _ from \"lodash\";\n\nimport BuyMoreProductsEntry from \"./BuyMoreProductsEntry\";\nimport ProductEntryType from \"../../../../../checkout/constants/ProductEntryTypeEnum\";\nimport {getBonusEntry, isTvSubEntry} from \"../../../../selectors\";\nimport AddonType from \"../../../../../checkout/constants/AddonTypeEnum\";\nimport CartEntryType from \"../../../../../checkout/constants/CartEntryTypeEnum\";\nimport CommonProductEntries from \"../../shared/CommonProductEntries\";\nimport {getProcessType} from \"eshop/modules/magnum2/utils\";\nimport ProcessType from \"eshop/modules/magnum2/constants/ProcessTypeEnum\";\nimport CMSParagraphConsoleComponent from \"../../../../../fix/components/console/CMSParagraphConsoleComponent\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\nimport {isMandatory} from \"../../utils/ConfigurableUtils\";\nimport ProcessTypeEnum from \"../../../../../checkout/constants/ProcessTypeEnum\";\n\nclass ConvergentProductEntries extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloader: {}\n\t\t};\n\t}\n\n   \tcomponentDidUpdate() {\n\t\tthis.doContinueActionCallback();\n   \t}\n\n   \tdoContinueActionCallback = () => {\n   \t\tif(!!this.state.loader.callback && this.state.loader.show && this.hasConfigurables()) {\n            OPL.UI.fire('modules.loader.hide', $(\"#buy-more-products\"));\n   \t\t\tthis.state.loader.callback({section: this.state.loader.section});\n   \t\t\tthis.setState({loader: {}});\n   \t\t}\n   \t};\n\n   \thasConfigurables = () => {\n   \t\treturn this.props.configurables && this.props.configurables.configurables && this.props.configurables.configurables.length;\n   \t};\n\n    render() {\n        let productSections = this.props.sectionConf ? this.props.sectionConf.productSections : [];\n\n        if(ProcessType._2U == getProcessType(this.props.entry.entries)){\n            productSections = productSections.filter( section => ProductEntryType.PARAGRAPH != section.entryType);\n        }\n\n        const configurables = this.props.configurables.configurables;\n        const mandatoryProducts = configurables && Object.keys(configurables) &&\n        Object.keys(configurables).map(s => configurables[s]).reduce((a,b) => a.concat(b.mandatoryProducts), []) || [];\n\n        const tvPackages = this.getAllTvPackages(configurables);\n\n        const sections = {};\n        sections[ProductEntryType.TERMINAL] = {entries: this.getMobileTerminals(mandatoryProducts), onChange: this.props.onDeviceChange, onRemove: this.props.onRemoveTerminal, lowerInstallmentsClicked: this.props.lowerInstallmentsClicked};\n        sections[ProductEntryType.VAS] = {entries: this.getVases(configurables, tvPackages), onChange: this.props.onClickAddVas, onRemove: this.props.onRemoveProduct};\n        sections[ProductEntryType.EURO_SET] = {entries: this.getEuroSets(mandatoryProducts), onChange: this.props.onDeviceChange, onRemove: this.props.onRemoveTerminal};\n        sections[ProductEntryType.TV_PACKAGE] = {entries: this.getTvPackages(configurables, tvPackages), onChange: this.props.onClickAddTvPackage, onRemove: this.props.onRemoveProduct};\n        sections[ProductEntryType.SECONDARY_CHOICE] = {entries: this.getBonusSection(this.props, mandatoryProducts), onChange: this.props.onClickAddVas, onRemove: this.props.onRemoveProduct};\n\n        const buyMoreProductsSections = productSections.map((section,index) => {\n            switch(section.entryType) {\n                case ProductEntryType.GADGET: {\n                    return (\n                        <div key={section.entryType+index} className=\"g-white1-bg u-box-shadow u-spacing\">\n                            <BuyMoreProductsEntry\n                                buyMoreLabel={section.buyMoreLabel}\n                                icon={section.icon}\n                                addButtonClicked={() => console.log('Add GADGET clicked')}\n                            />\n                        </div>\n                    );\n                }\n                case ProductEntryType.VAS: {\n                    return (\n                         <div key={section.entryType + index}>\n                            <div className=\"g-white1-bg u-box-shadow u-spacing\">\n                                <div id=\"buy-more-products-vases-entry\" >\n                                    <BuyMoreProductsEntry\n                                        buyMoreLabel={section.buyMoreLabel}\n                                        icon={section.icon}\n                                        addButtonClicked={() =>{this.showBodyLoader(this.props.onClickAddVas, section)}}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    );\n                }\n                case ProductEntryType.TV_PACKAGE: {\n                    return (\n                        <div key={section.entryType + index}>\n                            {this.props.isTvSubEntry &&\n                                <div className=\"g-white1-bg u-box-shadow u-spacing\">\n                                    <div id=\"buy-more-products-tv-entry\" >\n                                        <BuyMoreProductsEntry\n                                            buyMoreLabel={section.buyMoreLabel}\n                                            icon={section.icon}\n                                            addButtonClicked={() =>{this.showBodyLoader(this.props.onClickAddTvPackage, section)}}\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                    );\n                }\n                case ProductEntryType.SECONDARY_CHOICE: {\n                    return (\n                        <div key={section.entryType + index}>\n                            {this.props.areSecondaryChoiceBonusesAvailable &&\n                                <div className=\"g-white1-bg u-box-shadow u-spacing\">\n                                    <div id=\"buy-more-products-fixBonus-entry\">\n                                        <BuyMoreProductsEntry\n                                            buyMoreLabel={section.buyMoreLabel}\n                                            icon={section.icon}\n                                            addButtonClicked={() => {this.showBodyLoader(this.props.onClickAddFixBonus, section)}}\n                                    />\n                                </div>\n                            </div>\n                            }\n                        </div>\n                    );\n                }\n                case ProductEntryType.PARAGRAPH: {\n                    return (\n                        <div className=\"u-padding\" style={{marginLeft: '-20px', marginRight: '-20px'}}>\n                            <CMSParagraphConsoleComponent\n                                key={section.entryType + index}\n                                content={section.sectionTitle}\n                                innerPadding={'s'}\n                                outerPadding={'s'}\n                            />\n                        </div>\n                    )\n                }\n                default: {\n                    return null;\n                }\n            }\n        });\n\n        return (\n             <div id=\"convergent-product-entries\">\n                    <div className=\"u-padding-top u-padding\">\n                        <CommonProductEntries sections={sections} sectionConf={this.props.sectionConf} showNetPrices={this.props.showNetPrices}/>\n                    </div>\n                    <div className=\"l-page-row\">\n                            <div className=\"u-padding-top u-padding\" id=\"buy-more-products\" >\n                                    {buyMoreProductsSections}\n                            </div>\n                    </div>\n            </div>\n        )\n    }\n\n    showBodyLoader(callback, section) {\n    \tif(this.hasConfigurables()) {\n    \t\tcallback({section: section})\n    \t} else {\n\t    \tthis.setState({\n\t    \t\tloader:{\n\t\t\t\t\tcallback: callback,\n\t\t\t\t\tsection: section,\n\t\t\t\t\tshow: true\n\t\t\t\t}\n\t\t\t});\n            OPL.UI.fire('modules.loader.show', $(\"#buy-more-products\"));\n\t    }\n\t}\n\n    getMobileTerminals(mandatoryProducts) {\n        return this.props.entry.entries\n            .filter(subEntry => subEntry.entryType === CartEntryType.MOBILE)\n            .reduce((acc, subEntry) => acc.concat(subEntry.terminals), [])\n            .map(e => ({...e, mandatory: _.includes(mandatoryProducts, e.productCode) || this.is3ULTEActivation()}));\n    }\n\n    is3ULTE() {\n        const processType = getProcessType(this.props.entry.entries);\n        return processType === ProcessType._3ULTE;\n    }\n\n    getVases(configurables, tvPackages) {\n        const fixTerminals = this.props.entry.entries\n            .filter(subEntry => subEntry.entryType === CartEntryType.FIX)\n            .reduce((acc, subEntry) => acc.concat((subEntry.terminals || []).filter(t => !t.hiddenEntry)), []);\n        const vases = this.getAllVases().filter(v => !_.includes(tvPackages, v.productCode));\n\n        const allEntries = [...fixTerminals, ...vases];\n        return allEntries.map(v => ({...v, mandatory: this.isEntryMandatory(v, allEntries, configurables)}));\n    }\n\n    isEntryMandatory(entry, allEntries, configurables) {\n        const selectedGroupedProductsIds = allEntries.filter(e => !!e.quantityGroup && e.quantityGroup === entry.quantityGroup).map(e => e.productCode);\n        return isMandatory(entry.productCode, configurables, selectedGroupedProductsIds);\n    }\n\n    getEuroSets(mandatoryProducts){\n        return this.props.entry.entries\n            .filter(subEntry => subEntry.entryType === CartEntryType.MOBILE)\n            .reduce((acc,subEntry) => acc.concat(subEntry.euroSets), [])\n            .map(e => ({...e, mandatory: _.includes(mandatoryProducts, e.productCode) || this.is3ULTEActivation()}));\n    }\n\n    is3ULTEActivation(){\n        return this.is3ULTE() && this.props.entry.entries\n            .filter(subEntry => subEntry.entryType === CartEntryType.FIX)\n            .filter(fix => fix.processType === ProcessTypeEnum.TV0_ACTIVATION).length > 0;\n    }\n\n    getTvPackages(configurables, tvPackages){\n        return this.getAllVases()\n            .filter(v => _.includes(tvPackages, v.productCode))\n            .filter(v => this.shouldTvPackageBeDisplayed(configurables, v));\n    }\n\n    getAllVases() {\n        return this.props.entry.entries.reduce((acc,subEntry) => acc.concat(subEntry.vases), []);\n    }\n\n    shouldTvPackageBeDisplayed(configurables, tvPackage) {\n        let tvPackageConf = this.getTvPackageConfiguration(configurables, tvPackage);\n\n        return tvPackageConf && tvPackageConf.addonType !== AddonType.TVBASIC;\n    }\n\n    getTvPackageConfiguration(configurables, vas) {\n        if(configurables) {\n           return configurables\n                .reduce((acc, configurablesEntry) => acc.concat(configurablesEntry.tvPackages), [])\n                .filter(tvPackage => tvPackage.id === vas.productCode)\n                .shift();\n        } else {\n            return undefined;\n        }\n    }\n\n    getAllTvPackages(configurables) {\n        return configurables && configurables\n            .reduce((acc, configurablesEntry) => acc.concat(configurablesEntry.tvPackages), [])\n            .map(v => v.id) || [];\n    }\n\n    getBonusSection(props, mandatoryProducts) {\n        const {bonusEntries} = props;\n        const is2ULTE = ProcessType._2ULTE === getProcessType(this.props.entry.entries);\n        if (is2ULTE) {\n            return this.getBonusSectionLTE(props, mandatoryProducts);\n        }\n        //Removing grouped discounts is not supported as of now. Don't think we need it at the moment, so let's treat them as mandatory.\n        return this.getDiscounts(bonusEntries.filter(bonus => bonus.secondaryChoiceDiscount) || [])\n            .map(b => ({\n                ...b,\n                productCode: b.code,\n                mandatory: !!b.discountGroup || (mandatoryProducts && mandatoryProducts.includes(b.code))\n            }));\n    }\n\n    getBonusSectionLTE(props, mandatoryProducts) {\n        const {bonusEntries} = props;\n        let magnumDiscounts = this.getDiscounts(bonusEntries.filter(bonus => bonus.secondaryChoiceDiscount && !this.props.areSecondaryChoiceBonusesAvailable) || [])\n            .map(b => ({...b, mandatory: !!b.discountGroup || (mandatoryProducts && mandatoryProducts.includes(b.code))}));\n\n        return !!magnumDiscounts.length ? magnumDiscounts :\n            [...this.getAllVases(), ...props.entry.vases]\n                .filter(service => service.addonType === AddonType.SECONDARY_CHOICE_DISCOUNT && bonusEntries.some(e => e.code === service.productCode))\n                .map(bonus => {\n                    const entry = bonusEntries.filter(e => e.code === bonus.productCode)[0];\n                    if (entry) {\n                        bonus.checkoutPrice = entry.payNowCost;\n                        bonus.firstBillPrice = entry.oneTimeCost;\n                        bonus.monthlyPrices = entry.monthlyCosts;\n                    }\n                    bonus.mandatory = !!entry.discountGroup || (mandatoryProducts && mandatoryProducts.includes(bonus.productCode));\n                    return bonus;\n                });\n    }\n\n    getDiscounts(bonusEntries) {\n        return bonusEntries.map(bonus => {\n            let copy={ ... bonus};\n            if(bonus.monthlyCosts){\n                copy.monthlyPrices = bonus.monthlyCosts.map( cost => {\n                    let copyCost={...cost};\n                    copyCost.net =  OnlineUtils.formatPrice (copyCost.price);\n                    copyCost.gross = OnlineUtils.formatPrice (copyCost.price);\n                    return copyCost;\n                })\n            }\n            copy.unchangeable = true;\n            copy.name = copy.description;\n            copy.description = \"\";\n            return copy;\n        });\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    isTvSubEntry: isTvSubEntry(state),\n    configurables: state.cart.convergentConfigurables,\n    bonusEntries: getBonusEntry(state),\n});\n\nexport default connect(mapStateToProps, null)(ConvergentProductEntries);"],
    "file": "ConvergentProductEntries.js"
}