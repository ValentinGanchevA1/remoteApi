{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/cart/analyzer/Analyzer.js"],
    "names": ["analyzeCombination", "configurablesData", "selectedProducts", "previouslyAutoadded", "productAdded", "productRemoved", "coreRequireRules", "relations", "filter", "rule", "type", "RuleType", "REQUIRE", "additionalRequireRules", "REQUIRE_SOME", "disableRules", "EXCLUDE", "_", "includes", "sourceVases", "concat", "disableOnceRules", "EXCLUDE_ONCE", "validationGroups", "groups", "slice", "mandatoryProducts", "bundleProducts", "previousCombination", "products", "autoadded", "indexOf", "splice", "push", "product", "realMandatoryCombination", "console", "log", "combinations", "map", "combination", "lastActionIncluded", "validCombinations", "validationResult", "valid", "sort", "JSON", "stringify", "find", "name", "extendedCombinationData", "hiddenProducts", "extendedCombinationAnalysis", "requireShowRules", "SHOW", "productsThatCanBeHidden", "mobileAnalyzeCombination", "configurableData", "bonusVasRelations", "source", "secondaryChoiceVases", "services", "service", "productType", "AddonType", "SECONDARY_CHOICE_DISCOUNT", "vas", "id", "secondaryChoiceRelations", "some", "removeProducts", "addProducts", "removeSecondaryChoiceRelation", "targetVases", "forEach", "rel", "requiredVases", "conditionalVases", "length", "excludeVases", "sourceVas", "cartConditionalVases", "removeSecondaryVas", "rem"],
    "mappings": "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",
    "sourcesContent": ["import {dilateProductList,erodeProductList,dilateProductListSpecial,validate,findProductsToHide} from \"./RuleUtils\";\nimport {createBaseCombination, createSmallerCombinations} from \"./CombinationUtils\";\nimport {removeAllFromArray, sumArraysWithoutDupes} from \"./ArrayUtils\";\nimport {compareCombinations} from \"./CartInfoUtils\";\nimport RuleType from \"../../checkout/constants/RuleTypeEnum\";\nimport AddonType from \"eshop/modules/checkout/constants/AddonTypeEnum\";\nimport _ from \"lodash\";\n\nexport const analyzeCombination = (configurablesData, selectedProducts, previouslyAutoadded, productAdded, productRemoved) => {\n    let coreRequireRules = configurablesData.relations.filter(rule => rule.type === RuleType.REQUIRE);\n    let additionalRequireRules = configurablesData.relations.filter(rule => rule.type === RuleType.REQUIRE_SOME);\n    let disableRules = configurablesData.relations.filter(rule => rule.type === RuleType.EXCLUDE);\n    disableRules = disableRules.filter(rule => _.includes(rule.sourceVases, productAdded))\n        .concat(disableRules.filter(rule => !_.includes(rule.sourceVases, productAdded)));\n    let disableOnceRules = configurablesData.relations.filter(rule => rule.type === RuleType.EXCLUDE_ONCE)\n        .filter(rule => rule.sourceVases.includes(productAdded));\n    let validationGroups = configurablesData.groups.slice();\n    let mandatoryProducts = configurablesData.mandatoryProducts.slice();\n    let bundleProducts = configurablesData.mandatoryProducts.slice();\n\n    let previousCombination = dilateProductList({products:selectedProducts,autoadded:previouslyAutoadded},coreRequireRules);\n\n    if(productRemoved && selectedProducts.indexOf(productRemoved)!==-1){\n        selectedProducts.splice(selectedProducts.indexOf(productRemoved),1);\n    }\n    if(productAdded){\n        selectedProducts.push(productAdded);\n    }\n\n    selectedProducts = selectedProducts.filter(product => !previouslyAutoadded.includes(product));\n\n    let realMandatoryCombination = dilateProductList({products:mandatoryProducts,autoadded:[]}, coreRequireRules);\n\n    console.log(\"Real mandatory products\");\n    console.log(realMandatoryCombination.products);\n\n    let combinations = [];\n    combinations.push(createBaseCombination(selectedProducts,realMandatoryCombination));\n    combinations = combinations.concat(createSmallerCombinations(selectedProducts,realMandatoryCombination));\n    combinations = combinations.map(combination => erodeProductList(combination,disableOnceRules));\n    combinations = combinations.map(combination => dilateProductList(combination,coreRequireRules.concat(additionalRequireRules)));\n    combinations = combinations.map(combination => erodeProductList(combination,disableRules));\n    combinations = combinations.map(combination => validate(combination,validationGroups));\n    combinations = combinations.map(combination => {\n        combination.lastActionIncluded = (productAdded && combination.products.includes(productAdded))\n        || (productRemoved && !combination.products.includes(productRemoved)) ? true : false;\n        return combination;\n    });\n\n    let validCombinations = combinations.filter(combination => combination.validationResult.valid);\n    //Sort combinations to find the best\n    validCombinations.sort(compareCombinations(previousCombination));\n\n    let combination = validCombinations[0];\n    console.log(JSON.stringify(combination));\n    if(!combination){\n        combination = combinations.find(combination => combination.name===\"selection\");\n        return [null, null, combination.validationResult, null];\n    }\n\n    let extendedCombinationData = {};\n    extendedCombinationData.hiddenProducts = extendedCombinationAnalysis(configurablesData, combination);\n\n    return [combination.products, combination.autoadded, combination.validationResult, extendedCombinationData];\n};\n\nconst extendedCombinationAnalysis = (configurablesData, combination) => {\n    let requireShowRules = configurablesData.relations.filter(rule => rule.type === RuleType.SHOW);\n    let productsThatCanBeHidden = removeAllFromArray(configurablesData.bundleProducts.slice(),combination.products);\n    return findProductsToHide(combination.products, productsThatCanBeHidden, requireShowRules);\n};\n\nexport const mobileAnalyzeCombination = (configurableData, selectedProducts, productAdded, productRemoved) => {\n    const bonusVasRelations = configurableData.relations.filter(rule => rule.type === RuleType.REQUIRE).filter(rule => rule.source === \"bonusVasRelation\");\n    var secondaryChoiceVases = configurableData.services.filter(service => service.productType === AddonType.SECONDARY_CHOICE_DISCOUNT).map(vas => vas.id);\n    var secondaryChoiceRelations = configurableData.relations\n        .filter(rule => rule.type === RuleType.REQUIRE)\n        .filter(rule => rule.source !== \"bonusVasRelation\")\n        .filter(rule => rule.sourceVases.some(vas => secondaryChoiceVases.includes(vas)));\n    var removeProducts = [];\n    var addProducts = [];\n    var removeSecondaryChoiceRelation = [];\n    if (productRemoved) {\n        removeProducts.push(productRemoved);\n        bonusVasRelations.filter(rule => rule.targetVases.includes(productRemoved))\n            .forEach(rule => rule.sourceVases.forEach(vas => removeProducts.push(vas)));\n\n        removeSecondaryChoiceRelation = secondaryChoiceRelations.filter(rel => rel.targetVases.includes(productRemoved));\n    }\n    if (productAdded) {\n        if (secondaryChoiceVases.includes(productAdded)) {\n            var requiredVases = [];\n            secondaryChoiceRelations.filter(rel => rel.sourceVases.includes(productAdded))\n                .forEach(rel => rel.targetVases.forEach(vas => requiredVases.push(vas)));\n            var conditionalVases = requiredVases.filter(vas => selectedProducts.includes(vas));\n            if (requiredVases.length == 0 || (requiredVases.length > 0 && conditionalVases.length > 0)) {\n                addProducts.push(productAdded);\n                bonusVasRelations.filter(rule => rule.targetVases.includes(productAdded))\n                    .forEach(rule => rule.sourceVases.forEach(vas => addProducts.push(vas)));\n            }\n        } else {\n            addProducts.push(productAdded);\n            bonusVasRelations.filter(rule => rule.targetVases.includes(productAdded))\n                .forEach(rule => rule.sourceVases.forEach(vas => addProducts.push(vas)));\n\n            //remove exclude vases and related bonuses\n            var excludeVases = [];\n            configurableData.relations.filter(rule => rule.type === RuleType.EXCLUDE)\n                .filter(rule => rule.sourceVases.includes(productAdded))\n                .forEach(rule => rule.targetVases.forEach(vas => excludeVases.push(vas)));\n\n            excludeVases.forEach(vas => {\n                removeProducts.push(vas);\n                bonusVasRelations.filter(rule => rule.targetVases.includes(vas))\n                    .forEach(rule => rule.sourceVases.forEach(sourceVas => removeProducts.push(sourceVas)));\n            });\n        }\n    }\n\n    //add products\n    selectedProducts = sumArraysWithoutDupes(selectedProducts, addProducts);\n\n    //remove products\n    selectedProducts = removeAllFromArray(selectedProducts, removeProducts);\n\n    removeSecondaryChoiceRelation.forEach(rel => {\n        var cartConditionalVases = rel.targetVases.filter(vas => selectedProducts.some(product => product === vas));\n        if (cartConditionalVases.length === 0) {\n            var removeSecondaryVas = rel.sourceVases;\n            bonusVasRelations.filter(rel => rel.targetVases.filter(vas => removeSecondaryVas.some(rem => rem === vas)).length > 0)\n                .forEach(rel => rel.sourceVases.forEach(vas => removeSecondaryVas.push(vas)));\n            selectedProducts = removeAllFromArray(selectedProducts, removeSecondaryVas);\n        }\n    });\n\n    return selectedProducts;\n};\n\n\n"],
    "file": "Analyzer.js"
}