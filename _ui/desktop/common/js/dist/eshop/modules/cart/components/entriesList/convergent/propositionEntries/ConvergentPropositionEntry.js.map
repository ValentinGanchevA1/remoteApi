{
    "version": 3,
    "sources": ["../../../../../../../../../es6/eshop/modules/cart/components/entriesList/convergent/propositionEntries/ConvergentPropositionEntry.jsx"],
    "names": ["ConvergentPropositionEntry", "props", "handleShowModalVoip", "bind", "handleShowModalMobileVoice", "getProductCustomData", "onDetailsClicked", "name", "entry", "entries", "map", "e", "bundleNo", "join", "details", "JSON", "parse", "err", "console", "log", "ModalService", "add", "data", "propositionId", "preventDefault", "openVoipModal", "openMobileVoiceModal", "entryType", "SectionEntryType", "VOIP", "voipNumber", "selectedVoipNumber", "voipFixProduct", "phoneNumber", "descriptions", "number", "voipModalComponentIsMounted", "sectionConf", "changeEntryLabel", "MOBILE_VOICE", "MOBILE_DATA", "isActivation", "processType", "ProcessType", "ACTIVATION", "isMnp", "MNP", "MNP_TWOSTEP", "msisdn", "msisdnVerificationData", "simCard", "mnpNumber", "open", "availableDevices", "mandatoryProducts", "product", "devicesWithSameType", "deviceType", "filter", "d", "_", "includes", "id", "length", "productCode", "find", "terminals", "dev", "vases", "vas", "type", "sections", "productSections", "productSection", "mainEntries", "subEntries", "proposition", "subEntryType", "broadband", "devices", "descriptionShort", "description", "device", "imgUrl", "imageUrl", "title", "longDescription", "subEntry", "code", "push", "tvProduct", "tvPackages", "terminal", "voip", "voice", "vasSection", "findSectionByType", "forEach", "thumbnailIcon", "icon", "planName", "additionalContent", "fixConfigurables", "configurables", "configurablesEntry", "factoryName", "CartEntryType", "FIX", "modemFixProduct", "changeable", "isDeviceChangeable", "removable", "section", "decoderFixProduct", "offerPrice", "monthlyCosts", "planTotalMonthlyPrices", "oneTimeCost", "planTotalPayNowPrice", "tooltip", "convergentPropositionLegal", "deleteLabel", "deleteEntryLabelMainItem", "changeLabel", "detailsLabel", "changeDeviceLabel", "changeDevice", "forFreeLabel", "deviceFreeWithinProposition", "serviceFreeLabel", "serviceFreeWithinProposition", "detailsModal", "populateDetailsModal", "knowledgeBaseDetailsComponent", "transactions", "loyaltyLength", "entryNo", "openRemovePopup", "args", "openVasModal", "rejectionReason", "showNetPrices", "onRemoveProduct", "findBundleNoByProductCode", "Component", "mapDispatchToProps", "dispatch", "mapStateToProps", "state"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport _ from \"lodash\";\nimport {resourceModalOpen} from \"../../../../actions/resources\";\nimport SectionEntryType from \"./../../SectionEntryTypeEnum\";\nimport {transformMsisdn, transformVoip} from \"./../../utils/CartUtils\"\nimport ProcessType from \"../../../../enum/ProcessType\";\nimport {voipModalComponentIsMounted} from \"eshop/modules/fix/selectors/root\"\nimport CommonPropositionEntry from \"../../shared/CommonPropositionEntry\"\nimport CartEntryType from \"../../../../../checkout/constants/CartEntryTypeEnum\";\nimport {findDeviceByType} from \"../../../../analyzer/DeviceUtils\";\nimport OfferPropositionDetails\n    from \"../../../../../magnum2/components/OfferPropositionList/OfferProposition/OfferPropositionDetails\"\nimport ModalService from \"eshop/flux/utils/OraModalService\";\nimport CartDetailsModal from 'eshop/modules/cart/components/CartDetailsModal';\nimport {voipSelection} from \"../../../../../fix/actions/voip\";\nimport {getSelectedVoipNumber} from \"../../../../selectors\";\nimport {getTransactions} from \"../../../../../magnum2/selectors\";\nimport {isRemovable} from \"../../utils/ConfigurableUtils\";\n\nclass ConvergentPropositionEntry extends Component  {\n\n    constructor (props) {\n        super(props);\n        this.handleShowModalVoip = this.handleShowModalVoip.bind(this);\n        this.handleShowModalMobileVoice = this.handleShowModalMobileVoice.bind(this);\n        this.getProductCustomData = this.getProductCustomData.bind(this);\n        this.onDetailsClicked=this.onDetailsClicked.bind(this);\n        this.name = this.props.entry.entries.map( (e) => {return e.bundleNo} ).join('-');\n    }\n\n    componentWillMount() {\n            let details = [{\"key\":\"brak\", \"value\":\"danych\"}];\n            try {\n                details = JSON.parse(this.props.entry.details)\n            } catch(err) {\n                console.log(\"## details on cart parsing error##\")\n            }\n            ModalService.add((data) => \n                <CartDetailsModal \n                        id={(\"offer_proposition_details_\" + this.props.entry.propositionId)}\n                        details={details} \n                        proposition={this.props.entry}/>\n            );\n    }\n\n    handleShowModalVoip(e) {\n        e.preventDefault();\n        this.props.openVoipModal();\n    }\n\n    handleShowModalMobileVoice(e, bundleNo) {\n        e.preventDefault();\n        this.props.openMobileVoiceModal(bundleNo);\n    }\n\n    getProductCustomData(entryType, entry) {\n        switch(entryType) {\n            case SectionEntryType.VOIP: {\n                const voipNumber = this.props.selectedVoipNumber !== \"\" ? this.props.selectedVoipNumber : entry.voipFixProduct.phoneNumber;\n                return (\n                    <div key={entryType}>\n                        {this.props.descriptions.number}&nbsp;<span className=\"u-font-bold\">{transformVoip(voipNumber)}</span>\n                        {this.props.voipModalComponentIsMounted && <a href=\"#\" onClick={this.handleShowModalVoip} className=\"u-spacing-left\">{this.props.sectionConf.changeEntryLabel}</a>}\n                    </div>\n                );\n            }\n            case SectionEntryType.MOBILE_VOICE:\n            case SectionEntryType.MOBILE_DATA: {\n                const isActivation = entry.processType === ProcessType.ACTIVATION;\n                const isMnp = entry.processType === ProcessType.MNP || entry.processType === ProcessType.MNP_TWOSTEP;\n                const msisdn = isActivation ? entry.msisdn : entry.msisdnVerificationData.msisdn;\n                return (\n                    <div key={entryType}>\n                        {this.props.descriptions.simCard} {entry.details}, {isMnp ? this.props.descriptions.mnpNumber : this.props.descriptions.number}&nbsp;<span className=\"u-font-bold\">{msisdn && transformMsisdn(msisdn)}</span>\n                        <a href=\"#\" onClick={(e) => this.handleShowModalMobileVoice(e, entry.bundleNo)} className=\"u-spacing-left\">\n                            {this.props.sectionConf.changeEntryLabel}\n                        </a>\n                    </div>\n                );\n            }\n            default: {\n                console.log(\"ConvergentComponent: Unsupported product section type: \" + entryType);\n                return null;\n            }\n        }\n    }\n\n    onDetailsClicked() {\n        ModalService.open(\"productDetails-\"+this.name);\n    }\n\n    isDeviceChangeable(availableDevices, mandatoryProducts, product) {\n        const devicesWithSameType = availableDevices && findDeviceByType(availableDevices, product.deviceType);\n        return devicesWithSameType && devicesWithSameType.filter(d => !_.includes(mandatoryProducts, d.id)).length > 0;\n    }\n\n    findBundleNoByProductCode(entry, productCode){\n        return entry.entries.find(entry => entry.terminals.find(dev => dev.productCode === productCode)\n                                || entry.vases.find(vas => vas.productCode === productCode)).bundleNo;\n    }\n\n    findSectionByType(sectionConf, type) {\n        let sections = this.props.sectionConf && this.props.sectionConf.productSections\n                                            .filter(productSection => productSection.entryType === type);\n\n        return sections && sections[0] || null;\n    }\n\n    populateDetailsModal(mainEntries, subEntries) {\n        const proposition = {};\n\n        mainEntries.map(product => {\n\n            if (\"BROADBAND\" === product.subEntryType && product.terminals && product.terminals.length > 0) {\n                proposition.broadband = {};\n                proposition.broadband.name = product.name;\n                proposition.broadband.devices = [];\n                proposition.broadband.details = product.descriptionShort;\n                proposition.details = product.description;\n\n\n                const device = {};\n                device.imgUrl = product.terminals[0].imageUrl;\n                device.title = product.terminals[0].name;\n                device.longDescription = product.terminals[0].details;\n\n                subEntries.filter(subEntry => subEntry.code == product.terminals[0].productCode).map(subEntry => {\n                        device.title = subEntry.description;\n                        device.deviceType = subEntry.deviceType;\n                });\n\n                proposition.broadband.devices.push(device);\n\n            } else if (\"TV\" === product.subEntryType && product.terminals && product.terminals.length > 0) {\n                proposition.tvProduct = {};\n                proposition.tvPackages = [];\n                proposition.tvProduct.name = product.name;\n                proposition.tvProduct.devices = [];\n\n                const subEntry = subEntries.filter(entry => entry.deviceType == \"STB\")[0];\n\n                product.terminals.filter(terminal => terminal.productCode == subEntry.code)\n                .map(terminal => {\n                    proposition.tvProduct.devices.push({\n                       imgUrl: terminal.imageUrl,\n                       longDescription: terminal.details,\n                       title: subEntry.description,\n                       deviceType: subEntry.deviceType,\n                   });\n\n                });\n\n            } else if (\"VOIP\" === product.subEntryType && product.voipFixProduct) {\n                proposition.voip = {};\n                proposition.voip.name = product.voipFixProduct.name;\n                proposition.voip.details = product.voipFixProduct.description;\n                proposition.voip.devices = [];\n\n            } else if (\"MOBILE_VOICE\" === product.subEntryType) {\n                proposition.voice = {};\n                proposition.voice.name = product.name;\n                proposition.voice.details = product.description;\n                proposition.voice.devices = [];\n            } else if (\"MOBILE_DATA\" === product.subEntryType) {\n                proposition.data = {};\n                proposition.data.name = product.name;\n                proposition.data.devices = [];\n                proposition.data.details = \"<span><b>\"+ product.name +\"</b> \" + product.description +\"</span>\";\n            }\n\n        });\n\n        return proposition;\n    }\n\n    render() {\n        //TODO: Manage most of it (or all of it) on backend side\n        let mainEntries = [];\n        let vasSection = this.findSectionByType(this.props.sectionConf, \"VAS\");\n\n        this.props.sectionConf && this.props.sectionConf.productSections.forEach(productSection => {\n            const subEntry = this.props.entry.entries.find(entry => productSection.entryType === entry.subEntryType);\n            subEntry && mainEntries.push({\n                ...subEntry,\n                code: subEntry.productCode,\n                thumbnailIcon: productSection.icon,\n                name: subEntry.planName,\n                additionalContent: this.getProductCustomData(subEntry.subEntryType, subEntry)\n            })\n        })\n\n        let fixConfigurables = this.props.configurables.find(configurablesEntry => configurablesEntry.factoryName === CartEntryType.FIX);\n        const availableDevices = fixConfigurables && fixConfigurables.devices;\n        const mandatoryProducts = fixConfigurables && fixConfigurables.mandatoryProducts;\n        //TODO: Backend should return the list with subentries and their names should come from classification attributes\n        const subEntries = [];\n        this.props.entry.modemFixProduct &&\n        subEntries.push({\n            ...this.props.entry.modemFixProduct,\n            name: \"Modem\",\n            description: this.props.entry.modemFixProduct.name,\n            changeable: this.isDeviceChangeable(availableDevices, mandatoryProducts, this.props.entry.modemFixProduct),\n            removable: isRemovable(fixConfigurables, mandatoryProducts, this.props.entry.modemFixProduct.code),\n            section: \"NEO_VASES\"\n        });\n        this.props.entry.decoderFixProduct &&\n        subEntries.push({\n            ...this.props.entry.decoderFixProduct,\n            name: \"Dekoder\",\n            description: this.props.entry.decoderFixProduct.name,\n            changeable: this.isDeviceChangeable(availableDevices, mandatoryProducts, this.props.entry.decoderFixProduct),\n            removable: isRemovable(fixConfigurables, mandatoryProducts, this.props.entry.decoderFixProduct.code),\n            section: \"TV_VASES\"\n        });\n        const offerPrice = {\n            monthlyCosts: this.props.entry.planTotalMonthlyPrices,\n            oneTimeCost: this.props.entry.planTotalPayNowPrice,\n            tooltip: this.props.descriptions.convergentPropositionLegal\n        }\n\n        const descriptions = {\n            deleteLabel: this.props.sectionConf.deleteEntryLabelMainItem || \"Usuń\",\n            changeLabel: this.props.sectionConf.changeEntryLabel,\n            detailsLabel: this.props.sectionConf.detailsLabel,\n            changeDeviceLabel: this.props.descriptions.changeDevice,\n            forFreeLabel: this.props.descriptions.deviceFreeWithinProposition ? this.props.descriptions.deviceFreeWithinProposition : \"<div>Urządzenie bezpłatne</div><div>w ramach oferty</div>\",\n            serviceFreeLabel: this.props.descriptions.serviceFreeWithinProposition ? this.props.descriptions.serviceFreeWithinProposition : \"<div>Bezpłatne w cenie</div><div>pakietu</div>\",\n        };\n\n        const detailsModal = this.populateDetailsModal(mainEntries, subEntries);\n        const knowledgeBaseDetailsComponent = <OfferPropositionDetails linkName={this.props.sectionConf.detailsLabel}\n                                                                       proposition={detailsModal}\n                                                                        transactions={this.props.transactions}/>\n\n        return (\n            <CommonPropositionEntry mainEntries={mainEntries}\n                                    subEntries={subEntries}\n                                    offerPrice={offerPrice}\n                                    loyaltyLength={this.props.entry.loyaltyLength}\n                                    bundleNo={this.props.entry.bundleNo}\n                                    entryNo={this.props.entry.entryNo}\n                                    onRemove={this.props.openRemovePopup}\n                                    onDetails={this.onDetailsClicked}\n                                    onChange={(args) => this.props.openVasModal({section: vasSection, ...args})}\n                                    descriptions={descriptions}\n                                    overrideDefaultDetailsPartBy={knowledgeBaseDetailsComponent}\n                                    rejectionReason={this.props.entry.rejectionReason}\n                                    showNetPrices={this.props.showNetPrices}\n                                    onVasRemove={(productCode) => this.props.onRemoveProduct(productCode,this.findBundleNoByProductCode(this.props.entry,productCode))}\n                                    showButtons={true}\n            />\n        )\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    openVoipModal: () => dispatch(voipSelection(true)),\n    openMobileVoiceModal: (bundleNo) => dispatch(resourceModalOpen(bundleNo))\n});\n\nconst mapStateToProps = state => ({\n    selectedVoipNumber: getSelectedVoipNumber(state),\n    voipModalComponentIsMounted: voipModalComponentIsMounted(state),\n    transactions: getTransactions(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConvergentPropositionEntry);"],
    "file": "ConvergentPropositionEntry.js"
}