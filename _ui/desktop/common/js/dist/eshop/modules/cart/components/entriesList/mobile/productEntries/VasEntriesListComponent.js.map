{
    "version": 3,
    "sources": ["../../../../../../../../../es6/eshop/modules/cart/components/entriesList/mobile/productEntries/VasEntriesListComponent.jsx"],
    "names": ["VasEntriesListComponent", "props", "bundle", "vases", "find", "vas", "getVasesForBundle", "services", "inServices", "forEach", "service", "id", "productCode", "push", "length", "mobileVasUpdatingStatus", "cartBundle", "presentedVases", "baseId", "that", "$", "each", "attr", "getVasLoaderIdBase", "console", "log", "css", "entries", "filter", "isInServices", "isVasInServices", "hideUnusedLoaders", "map", "idx", "VasUpdateStatus", "UPDATING", "DELETED", "detailsHeader", "propositionId", "Component", "propTypes", "PropTypes", "number", "isRequired", "arrayOf", "object", "string", "mapStateToProps", "state"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport {OraLoader} from \"eshop/components/OraCommonComponents\";\nimport {connect} from \"react-redux\";\nimport {getMobileVases, getMobileVasUpdatingStatus} from \"eshop/modules/cart/selectors\";\nimport VasEntryComponent from \"eshop/modules/cart/components/entriesList/mobile/productEntries/VasEntryComponent\"\nimport VasUpdateStatus from \"eshop/modules/core/enum/VasUpdateStatus\"\n\nclass VasEntriesListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    getVasesForBundle(bundle) {\n        return this.props.vases && this.props.vases.find(vas => vas.bundle == bundle);\n    }\n\n    isVasInServices(vas) {\n        let vases = this.getVasesForBundle(this.props.bundle);\n        if (!vases || !vases.services) {\n            return false\n        }\n        let services = vases.services;\n\n        let inServices = [];\n        services.forEach(service => {\n            if (service.id == vas.productCode)\n                inServices.push(vas)\n        })\n        return !!inServices.length;\n    }\n\n    mobileVasUpdatingStatus(vas) {\n        return this.props.mobileVasUpdatingStatus && this.props.mobileVasUpdatingStatus[this.props.cartBundle] && this.props.mobileVasUpdatingStatus[this.props.cartBundle][vas.productCode];\n    }\n\n    getVasLoaderIdBase() {\n        return \"vasComponent-loader_\" + this.props.cartBundle + \"_\";\n    }\n\n    hideUnusedLoaders(presentedVases, baseId) {\n        let that = this;\n        if ($(\"[id*=\" + baseId + \"]\") && $(\"[id*=\" + baseId + \"]\").length) {\n            $(\"[id*=\" + baseId + \"]\").each(function () {\n                let id = $(this).attr(\"id\");\n                if (presentedVases.find(vas => (that.getVasLoaderIdBase() + vas.productCode) === id)) {\n                    console.log(\"I Exist \", id);\n                } else {\n                    console.log(\"I am a ghost \", id);\n                    $(\".\" + id).css({\"display\": \"none\"});\n                }\n            });\n        }\n    }\n\n    render() {\n        let presentedVases = this.props.entries.filter(isInServices => this.isVasInServices(isInServices));\n        this.hideUnusedLoaders(presentedVases, this.getVasLoaderIdBase());\n        return (\n            <div className={\"u-position-relative\"}>\n                {presentedVases && presentedVases.map((vas, idx) =>\n                    <OraLoader\n                        loading={this.mobileVasUpdatingStatus(vas) === VasUpdateStatus.UPDATING || this.mobileVasUpdatingStatus(vas) === VasUpdateStatus.DELETED}\n                        key={\"loader_\" + this.props.cartBundle + \"_\" + vas.productCode}\n                        id={this.getVasLoaderIdBase() + vas.productCode}\n                        parentId=\"cart-loader\"\n                        useHeightFixing={false}\n                    >\n                        <VasEntryComponent\n                            key={\"VAS\" + vas.productCode + \"_\" + this.props.idx}\n                            detailsHeader={this.props.detailsHeader}\n                            entry={vas}\n                            cartBundle={this.props.cartBundle}\n                            bundle={this.props.bundle}\n                            propositionId={this.props.propositionId}\n                            topBorder={true}\n                        />\n                    </OraLoader>\n                )}\n\n            </div>\n        )\n    }\n}\n\nVasEntriesListComponent.propTypes = {\n    idx: PropTypes.number.isRequired,\n    entries: PropTypes.arrayOf(PropTypes.object),\n    detailsHeader: PropTypes.string,\n    propositionId: PropTypes.string,\n    bundle: PropTypes.string,\n    cartBundle: PropTypes.string\n}\nconst mapStateToProps = (state) => ({\n    vases: getMobileVases(state),\n    mobileVasUpdatingStatus: getMobileVasUpdatingStatus(state),\n});\n\n\nexport default connect(mapStateToProps, null)(VasEntriesListComponent);\n\n\n"],
    "file": "VasEntriesListComponent.js"
}