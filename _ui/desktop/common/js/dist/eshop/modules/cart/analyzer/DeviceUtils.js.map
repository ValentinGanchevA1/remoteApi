{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/cart/analyzer/DeviceUtils.js"],
    "names": ["findTVDevicesNoMUL", "devices", "filter", "d", "deviceType", "DeviceType", "isTVDeviceNoMUL", "findSTB", "STB", "findDeviceByType", "restoreMigratedTVDevicesOnNewSTBRemoval", "availableSTBs", "migratedTVDevicesNoMUL", "ruleType", "RuleType", "NONE", "sourceVases", "map", "id", "productCode", "targetVases", "type", "REQUIRE_SOME", "createCustomRules", "presentable", "migratedDevices", "customRules", "presentableSTB", "concat", "length", "push", "prepareDevices", "descriptions", "migratedProducts", "migratedSTBs", "mandatory", "some", "s", "warningMessage", "onRemoveWarning", "title", "getDevicesWithAdjustedDeviceType", "productType", "STBMUL"],
    "mappings": "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",
    "sourcesContent": ["import DeviceType from '../enum/DeviceType';\nimport RuleType from '../../checkout/constants/RuleTypeEnum';\nimport {createCMSDescriptionWithParams} from '../../core/utils/CmsUtils';\n\nexport const findTVDevicesNoMUL = (devices) => {\n    return devices.filter(d => !!d.deviceType && DeviceType.isTVDeviceNoMUL(d.deviceType));\n};\n\nexport const findSTB = (devices) => {\n    return devices.filter(d => !!d.deviceType && DeviceType.STB === d.deviceType);\n};\n\nexport const findDeviceByType = (devices, deviceType) => {\n  return devices.filter(d => d.deviceType === deviceType);\n};\n\nexport const restoreMigratedTVDevicesOnNewSTBRemoval = (availableSTBs, migratedTVDevicesNoMUL) => {\n    return {\n        ruleType: RuleType.NONE,\n        sourceVases: availableSTBs.map(d => d.id || d.productCode),\n        targetVases: migratedTVDevicesNoMUL.map(d => d.id || d.productCode),\n        type: RuleType.REQUIRE_SOME\n    };\n};\n\nexport const createCustomRules = (presentable, migratedDevices) => {\n    const customRules = [];\n    const migratedTVDevicesNoMUL = migratedDevices ? findTVDevicesNoMUL(migratedDevices) : [];\n    const presentableSTB = presentable ? findSTB(presentable) : [];\n    const availableSTBs = presentableSTB.concat(findSTB(migratedTVDevicesNoMUL));\n    if (migratedTVDevicesNoMUL.length > 0 && presentableSTB.length > 0) {\n        customRules.push(restoreMigratedTVDevicesOnNewSTBRemoval(availableSTBs, migratedTVDevicesNoMUL));\n    }\n    return customRules;\n};\n\nexport const prepareDevices = (devices, descriptions, migratedProducts) => {\n    const migratedSTBs = migratedProducts && findSTB(migratedProducts).map(d => d.id || d.productCode);\n    if (!devices) {\n        return [];\n    }\n    if (!descriptions || migratedSTBs.length === 0) {\n        return devices;\n    }\n\n    return devices.map(d => {\n        if (DeviceType.STB === d.deviceType && !d.mandatory && !migratedSTBs.some(s => s === d.id || s === d.productCode)) {\n            d.warningMessage = descriptions['optionalSTBWarning'];\n            d.onRemoveWarning = createCMSDescriptionWithParams(descriptions['onRemoveRestoreDevicesWarning'], [d.title]);\n        }\n        return d;\n    });\n};\n\nexport const getDevicesWithAdjustedDeviceType = (devices) => {\n  return (devices || []).map(d => ({...d, productType: d.deviceType === DeviceType.STBMUL ? \"ADDON\" : d.productType}));\n};\n\n\n\n"],
    "file": "DeviceUtils.js"
}