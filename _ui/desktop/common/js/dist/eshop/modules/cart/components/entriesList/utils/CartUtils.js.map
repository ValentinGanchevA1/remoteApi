{
    "version": 3,
    "sources": ["../../../../../../../../es6/eshop/modules/cart/components/entriesList/utils/CartUtils.jsx"],
    "names": ["transformMsisdn", "number", "replace", "arguments", "transformVoip", "getHighestMonthlyPrice", "monthlyPrices", "slice", "sort", "a", "b", "price", "pop", "createSimCardDescription", "simCard", "startUpperCase", "prefix", "baseCode", "description", "fillRelatedProductsForSecondaryChoiceDiscount", "secondaryChoiceDiscount", "configurables", "relatedProducts", "fillDescriptionsForSecondaryChoiceDiscounts", "bonusEntries", "filter", "entry", "code", "id", "paymentDescriptions", "payNowPayment", "payNowCost", "oneTimePayment", "oneTimeCost", "monthlyPayments", "monthlyCosts", "fillRelatedProductsForSecondaryChoiceDiscountMobile", "getSecondaryChoiceDiscountsWithRelatedBonuses", "_", "flatMap", "configurable", "factoryName", "service", "addonType", "AddonType", "SECONDARY_CHOICE_DISCOUNT", "mandatoryProducts", "includes", "map", "productType", "convertToCartOmniCode", "bundleOmniCode", "split"],
    "mappings": "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",
    "sourcesContent": ["import _ from 'lodash';\nimport {getServices, getServicesRelatedToBonus, getSecondaryChoiceDiscountServicesRelated} from \"../../../analyzer/ProductInfoUtils\";\nimport AddonType from \"../../../../checkout/constants/AddonTypeEnum\";\n\nexport const transformMsisdn = (number) => {\n    return number.replace(/^(\\d{3})(\\d{3})(\\d{3})$/, function () {\n        return arguments[1] + '\\xa0' + arguments[2] + '\\xa0' + arguments[3];\n    });\n};\n\nexport const transformVoip = (number) => {\n    return number.replace(/^(\\d{2})(\\d{3})(\\d{2})(\\d{2})$/, function () {\n        return arguments[1] + '\\xa0' + arguments[2] + '\\xa0' + arguments[3] + '\\xa0' + arguments[4];\n    });\n};\n\nexport const getHighestMonthlyPrice = (monthlyPrices) => {\n    return monthlyPrices\n     .slice()\n     .sort((a, b) => {return a.price - b.price})\n     .pop();\n};\n\nexport const createSimCardDescription = (simCard, startUpperCase = true) => {\n    let prefix = startUpperCase ? 'Karta' : 'karta';\n    switch (simCard.baseCode) {\n        case 'MOB_SIM_ESIM':\n            return `${prefix} ${simCard.description}, `;\n        default:\n            return `${prefix} SIM ${simCard.description}, `;\n    }\n};\n\nfunction fillRelatedProductsForSecondaryChoiceDiscount(secondaryChoiceDiscount, configurables) {\n    secondaryChoiceDiscount.relatedProducts = getServicesRelatedToBonus(configurables);\n    return secondaryChoiceDiscount;\n}\n\nfunction fillDescriptionsForSecondaryChoiceDiscounts(secondaryChoiceDiscount, bonusEntries) {\n    if (bonusEntries.filter(entry => entry.code === secondaryChoiceDiscount.id)) {\n        let entry = bonusEntries.filter(entry => entry.code === secondaryChoiceDiscount.id)[0];\n        if (secondaryChoiceDiscount.paymentDescriptions && entry) {\n            secondaryChoiceDiscount.paymentDescriptions.payNowPayment = entry.payNowCost;\n            secondaryChoiceDiscount.paymentDescriptions.oneTimePayment = entry.oneTimeCost;\n            secondaryChoiceDiscount.paymentDescriptions.monthlyPayments = entry.monthlyCosts;\n        }\n    }\n    return secondaryChoiceDiscount;\n}\n\nfunction fillRelatedProductsForSecondaryChoiceDiscountMobile(secondaryChoiceDiscount, configurables) {\n    secondaryChoiceDiscount.relatedProducts = getSecondaryChoiceDiscountServicesRelated(configurables);\n    return secondaryChoiceDiscount;\n}\n\nexport const getSecondaryChoiceDiscountsWithRelatedBonuses = (configurables, bonusEntries) => {\n    return _.flatMap(configurables, configurable => {\n        if (configurable) {\n            if (configurable.factoryName === \"FIX\") {\n                return getServices(configurable)\n                    .filter(service => service.addonType === AddonType.SECONDARY_CHOICE_DISCOUNT)\n                    .filter(service => configurable.mandatoryProducts && !configurable.mandatoryProducts.includes(service.id))\n                    .map(secondaryChoiceDiscount => fillRelatedProductsForSecondaryChoiceDiscount(secondaryChoiceDiscount, configurables))\n                    .map(secondaryChoiceDiscount => fillDescriptionsForSecondaryChoiceDiscounts(secondaryChoiceDiscount, bonusEntries));\n            } else {\n                return getServices(configurable)\n                    .filter(service => service.productType === AddonType.SECONDARY_CHOICE_DISCOUNT)\n                    .map(secondaryChoiceDiscount => fillRelatedProductsForSecondaryChoiceDiscountMobile(secondaryChoiceDiscount, configurables))\n                    .map(secondaryChoiceDiscount => fillDescriptionsForSecondaryChoiceDiscounts(secondaryChoiceDiscount, bonusEntries));\n            }\n        } else {\n            return [];\n        }\n    })\n};\n\nexport const convertToCartOmniCode = bundleOmniCode => bundleOmniCode && bundleOmniCode.split('X')[0];"],
    "file": "CartUtils.js"
}