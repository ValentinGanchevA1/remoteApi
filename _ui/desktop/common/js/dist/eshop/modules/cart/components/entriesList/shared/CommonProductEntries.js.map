{
    "version": 3,
    "sources": ["../../../../../../../../es6/eshop/modules/cart/components/entriesList/shared/CommonProductEntries.jsx"],
    "names": ["CommonProductEntries", "props", "sectionConf", "sections", "productSections", "renderRelatedDevices", "entry", "entryType", "section", "relatedDevices", "map", "relatedDevice", "entryNo", "productType", "onChange", "vas", "showNetPrices", "forFreeLabel", "serviceFreeLabel", "index", "productList", "entries", "innerLists", "length", "innerSection", "presentableProducts", "productFilter", "sort", "productCodes", "visible", "selectedSection", "onRemove", "descriptions", "lowerInstallmentsClicked", "DisableWrapper", "hidden", "children"],
    "mappings": "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",
    "sourcesContent": ["import React from \"react\";\n\nimport {compareByProductCodeListAndMandatoryAndTitle, Filters} from \"../../../analyzer/CartInfoUtils\";\nimport UniversalEntryComponent from \"./UniversalEntryComponent\";\nimport {FloatingBox} from \"../fix/BoxFragments\";\n\nconst CommonProductEntries = (props) => {\n    const {sectionConf, sections} = props;\n    const productSections = sectionConf ? sectionConf.productSections : [];\n\n    function renderRelatedDevices(entry, entryType, section) {\n        return entry.relatedDevices && entry.relatedDevices.map(relatedDevice =>\n            <div key={`${entryType}-${relatedDevice.entryNo}`}>\n                <div className=\"u-padding-left-m u-padding-right-m\">\n                    <div className=\"o-separator\"/>\n                </div>\n                <UniversalEntryComponent\n                    borderTop={true}\n                    sectionConf={section}\n                    entry={({...relatedDevice, productType: entryType})}\n                    onChange={() => sections[entryType].onChange({section, vas: relatedDevice})}\n                    showNetPrices={props.showNetPrices}\n                    forFreeLabel={props.forFreeLabel}\n                    serviceFreeLabel={props.serviceFreeLabel}\n                />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            {\n                productSections.map((section, index) => {\n                    const {entryType, productList} = section;\n                    if (!sections[entryType] || !sections[entryType].entries) return null;\n                    if (!!productList && !!productList.innerLists && productList.innerLists.length > 0) {\n                        return productList.innerLists.map(innerSection => {\n                            let presentableProducts = Filters()[innerSection.productFilter](sections[entryType].entries);\n                            presentableProducts.sort(compareByProductCodeListAndMandatoryAndTitle(innerSection.productCodes));\n                            return presentableProducts.map(entry => {\n                                return (\n                                    <DisableWrapper hidden={entry.visible === false} key={\"WRAPPER\" + entry.entryNo}>\n                                        <FloatingBox>\n                                            <UniversalEntryComponent\n                                                key={`${innerSection.productFilter}-${entry.entryNo}-${index}`}\n                                                sectionConf={section}\n                                                entry={({...entry, productType: innerSection.productFilter})}\n                                                onChange={() => sections[entryType].onChange({\n                                                    section,\n                                                    selectedSection: innerSection.productFilter\n                                                })}\n                                                onRemove={sections[entryType].onRemove}\n                                                showNetPrices={props.showNetPrices}\n                                                descriptions={props.descriptions}\n                                                lowerInstallmentsClicked={sections[entryType].lowerInstallmentsClicked}\n                                            />\n                                            {renderRelatedDevices(entry, entryType, section)}\n                                        </FloatingBox>\n                                    </DisableWrapper>\n                                )\n                            })\n                        })\n                    } else {\n                        return sections[entryType].entries.map(entry => {\n                            return (\n                                <FloatingBox>\n                                    <UniversalEntryComponent\n                                        key={`${entryType}-${entry.entryNo}-${index}`}\n                                        sectionConf={section}\n                                        entry={({...entry, productType: entryType})}\n                                        onChange={() => sections[entryType].onChange({section, vas: entry})}\n                                        onRemove={sections[entryType].onRemove}\n                                        showNetPrices={props.showNetPrices}\n                                        descriptions={props.descriptions}\n                                        lowerInstallmentsClicked={sections[entryType].lowerInstallmentsClicked}\n                                    />\n                                    {renderRelatedDevices(entry, entryType, section)}\n                                </FloatingBox>\n                            );\n                        });\n                    }\n                })\n            }\n        </div>\n    )\n};\n\nconst DisableWrapper = (props) => {\n    if (props.hidden) {\n        return <div className=\"u-hide\"/>\n    }\n    return <div>{props.children}</div>\n}\n\nexport default CommonProductEntries;"],
    "file": "CommonProductEntries.js"
}