{
    "version": 3,
    "sources": ["../../../../../../../../es6/eshop/modules/cart/components/entriesList/simfree/SimfreeMenuItem.jsx"],
    "names": ["preventDefaultWrapper", "handler", "event", "preventDefault", "SimfreeMenuItem", "props", "e", "console", "warn", "setOfferType", "label", "addItemIcon", "entries", "itemClickedHandler", "Component", "mapDispatchToProps", "dispatch", "propTypes", "icon", "PropTypes", "string", "isRequired", "link", "availabilityRestrictions", "arrayOf", "shape", "menuItemType", "cartBundleNumberLimit", "oneOfType", "number", "type", "object"],
    "mappings": ";;;;;;;AAAA;AAIA;;;;;;AAEA,MAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,OAAD;AAAA,WAAa,UAACC,KAAD,EAAW;AAClDA,MAAAA,KAAK,CAACC,cAAN;AACAF,MAAAA,OAAO,CAACC,KAAD,CAAP;AACH,KAH6B;AAAA,GAA9B;;MAIME,e;;;;;AACF,6BAAYC,KAAZ,EAAkB;AAAA;AAAA,+BACRA,KADQ;AAEjB;;;;yCAEkBC,C,EAAE;AACjBC,QAAAA,OAAO,CAACC,IAAR,CAAa,SAAb;AACAD,QAAAA,OAAO,CAACC,IAAR,CAAa,IAAb;AACAD,QAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb;AACA,aAAKD,KAAL,CAAWI,YAAX;AACH;;;+BAEO;AAAA;;AACJ,4BACI,6BAAC,iBAAD;AAAU,UAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWK,KAA1B;AAAiC,UAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM;AAAzD,WAA0E,KAAKN,KAA/E;AAAsF,UAAA,OAAO,EAAE,KAAKA,KAAL,CAAWO,OAA1G;AAAmH,UAAA,kBAAkB,EAAE;AAAA,mBAAM,KAAI,CAACC,kBAAL,EAAN;AAAA;AAAvI,WADJ;AAGH;;;IAhByBC,gB;;AAmB9B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,WAAe;AACtCP,MAAAA,YAAY,EAAE;AAAA,eAAMO,QAAQ,CAAC,iCAAD,CAAd;AAAA;AADwB,KAAf;AAAA,GAA3B;;iBAIe,yBAAQ,IAAR,EAAcD,kBAAd,EAAkCX,eAAlC,C;;;AAEfA,EAAAA,eAAe,CAACa,SAAhB,GAA4B;AACxBC,IAAAA,IAAI,EAAEC,qBAAUC,MAAV,CAAiBC,UADC;AAExBX,IAAAA,KAAK,EAAES,qBAAUC,MAAV,CAAiBC,UAFA;AAGxBC,IAAAA,IAAI,EAAEH,qBAAUC,MAAV,CAAiBC,UAHC;AAIxBE,IAAAA,wBAAwB,EAAEJ,qBAAUK,OAAV,CAAkBL,qBAAUM,KAAV,CAAgB;AACxDC,MAAAA,YAAY,EAAEP,qBAAUC,MADgC;AAExDO,MAAAA,qBAAqB,EAAER,qBAAUS,SAAV,CAAoB,CAACT,qBAAUC,MAAX,EAAmBD,qBAAUU,MAA7B,CAApB;AAFiC,KAAhB,CAAlB,EAGtBR,UAPoB;AAQxBV,IAAAA,WAAW,EAAEQ,qBAAUC,MAAV,CAAiBC,UARN;AASxBS,IAAAA,IAAI,EAAEX,qBAAUC,MATQ;AAUxBR,IAAAA,OAAO,EAAEO,qBAAUK,OAAV,CAAkBL,qBAAUY,MAA5B;AAVe,GAA5B",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {PropTypes} from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {setSimfreeProcessData} from \"eshop/modules/simfree/actions/app\";\nimport MenuItem from \"eshop/modules/cart/components/MenuItem\";\n\nconst preventDefaultWrapper = (handler) => (event) => {\n    event.preventDefault();\n    handler(event);\n}\nclass SimfreeMenuItem extends Component {\n    constructor(props){\n        super(props);\n    }\n    \n    itemClickedHandler(e){\n        console.warn(\"simfree\")\n        console.warn(this);\n        console.warn(e);\n        this.props.setOfferType();\n    }\n    \n    render(){\n        return(\n            <MenuItem key={this.props.label} addItemIcon={this.props.addItemIcon} {...this.props} entries={this.props.entries} itemClickedHandler={() => this.itemClickedHandler()}/>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setOfferType: () => dispatch(setSimfreeProcessData())\n})\n\nexport default connect(null, mapDispatchToProps)(SimfreeMenuItem);\n\nSimfreeMenuItem.propTypes = {\n    icon: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    availabilityRestrictions: PropTypes.arrayOf(PropTypes.shape({\n        menuItemType: PropTypes.string,\n        cartBundleNumberLimit: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    })).isRequired,\n    addItemIcon: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    entries: PropTypes.arrayOf(PropTypes.object)\n}"],
    "file": "SimfreeMenuItem.js"
}