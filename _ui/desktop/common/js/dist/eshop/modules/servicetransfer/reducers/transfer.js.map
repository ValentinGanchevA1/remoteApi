{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/servicetransfer/reducers/transfer.js"],
    "names": ["errorMessage", "state", "action", "type", "ACTIONS", "FETCH_SERVICES_TO_TRANSFER_ERROR", "console", "log", "message", "fetchingServices", "FETCH_SERVICES_TO_TRANSFER_START", "FETCH_SERVICES_TO_TRANSFER_END", "process", "SELECT_PROCESS", "accountBalanceWithInstallmentPlanExists", "ACCOUNT_BALANCE_WITH_INSTALLMENT_PLAN", "payload", "services", "servicesToTransfer", "packageDiscountConfirmation", "PACKAGE_DISCOUNT_CONFIRM_CHECKED", "PACKAGE_DISCOUNT_CONFIRM_UNCHECKED", "selectedServices", "SELECTED_SERVICE_CHANGED", "newState", "serviceType", "FactoryType", "FIX", "includes", "serviceNumber", "filter", "val", "push"],
    "mappings": ";;;;;;;AAAA;AACA;;AAEO,MAAMA,YAAY,GAAG,SAAfA,YAAe,GAAwB;AAAA,QAAvBC,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AAChD,YAAOA,MAAM,CAACC,IAAd;AACI,WAAKC,OAAO,CAACC,gCAAb;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,OAAnB;AACA,eAAON,MAAM,CAACM,OAAd;;AACJ;AACI,eAAOP,KAAP;AALR;AAOH,GARM;;;;AAUA,MAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,GAA2B;AAAA,QAA1BR,KAA0B,uEAAlB,KAAkB;AAAA,QAAXC,MAAW;;AACvD,YAAOA,MAAM,CAACC,IAAd;AACI,WAAKC,OAAO,CAACM,gCAAb;AACI,eAAO,IAAP;;AACJ,WAAKN,OAAO,CAACO,8BAAb;AACA,WAAKP,OAAO,CAACC,gCAAb;AACI,eAAO,KAAP;;AACJ;AACI,eAAOJ,KAAP;AAPR;AASH,GAVM;;;;AAYA,MAAMW,OAAO,GAAG,SAAVA,OAAU,GAA0B;AAAA,QAAzBX,KAAyB,uEAAjB,IAAiB;AAAA,QAAXC,MAAW;;AAC7C,YAAOA,MAAM,CAACC,IAAd;AACI,WAAKC,OAAO,CAACS,cAAb;AACI,eAAOX,MAAM,CAACU,OAAd;;AACJ;AACI,eAAOX,KAAP;AAJR;AAMH,GAPM;;;;AASA,MAAMa,uCAAuC,GAAG,SAA1CA,uCAA0C,GAA2B;AAAA,QAA1Bb,KAA0B,uEAAlB,KAAkB;AAAA,QAAXC,MAAW;;AAC9E,YAAOA,MAAM,CAACC,IAAd;AACI,WAAKC,OAAO,CAACW,qCAAb;AACI,eAAOb,MAAM,CAACc,OAAP,CAAeF,uCAAtB;;AACJ;AACI,eAAOb,KAAP;AAJR;AAMH,GAPM;;;;AAUA,MAAMgB,QAAQ,GAAG,SAAXA,QAAW,GAAwB;AAAA,QAAvBhB,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AAC5C,YAAQA,MAAM,CAACC,IAAf;AACI,WAAKC,OAAO,CAACO,8BAAb;AACI,eAAOT,MAAM,CAACc,OAAP,CAAeE,kBAAtB;;AACJ;AACA,eAAOjB,KAAP;AAJJ;AAMH,GAPM;;;;AASA,MAAMkB,2BAA2B,GAAG,SAA9BA,2BAA8B,GAA2B;AAAA,QAA1BlB,KAA0B,uEAAlB,KAAkB;AAAA,QAAXC,MAAW;;AAClE,YAAOA,MAAM,CAACC,IAAd;AACI,WAAKC,OAAO,CAACgB,gCAAb;AACI,eAAO,IAAP;;AACJ,WAAKhB,OAAO,CAACiB,kCAAb;AACI,eAAO,KAAP;;AACJ;AACI,eAAOpB,KAAP;AANR;AAQH,GATM;;;;AAWA,MAAMqB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAwB;AAAA,QAAvBrB,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AACpD,YAAQA,MAAM,CAACC,IAAf;AACI,WAAKC,OAAO,CAACmB,wBAAb;AACI,YAAIC,QAAQ,GAAGtB,MAAM,CAACuB,WAAP,KAAuBC,yBAAYC,GAAnC,GAAyC,EAAzC,kCAAkD1B,KAAlD,CAAf;;AACA,YAAIuB,QAAQ,CAACI,QAAT,CAAkB1B,MAAM,CAAC2B,aAAzB,CAAJ,EAA6C;AACzCL,UAAAA,QAAQ,GAAGA,QAAQ,CAACM,MAAT,CAAgB,UAAAC,GAAG;AAAA,mBAAIA,GAAG,KAAK7B,MAAM,CAAC2B,aAAnB;AAAA,WAAnB,CAAX;AACH,SAFD,MAEO;AACHL,UAAAA,QAAQ,CAACQ,IAAT,CAAc9B,MAAM,CAAC2B,aAArB;AACH;;AACD,eAAOL,QAAP;;AACJ;AACI,eAAOvB,KAAP;AAVR;AAYH,GAbM",
    "sourcesContent": ["import * as ACTIONS from '../actionTypes';\nimport FactoryType from \"../../core/constants/FactoryTypeEnum\";\n\nexport const errorMessage = (state = \"\", action) => {\n    switch(action.type) {\n        case ACTIONS.FETCH_SERVICES_TO_TRANSFER_ERROR:\n            console.log(action.message);\n            return action.message;\n        default:\n            return state;\n    }\n}\n\nexport const fetchingServices = (state = false, action) => {\n    switch(action.type) {\n        case ACTIONS.FETCH_SERVICES_TO_TRANSFER_START:\n            return true;\n        case ACTIONS.FETCH_SERVICES_TO_TRANSFER_END:\n        case ACTIONS.FETCH_SERVICES_TO_TRANSFER_ERROR:\n            return false;\n        default:\n            return state;\n    }\n}\n\nexport const process = (state = null, action) => {\n    switch(action.type) {\n        case ACTIONS.SELECT_PROCESS:\n            return action.process;\n        default:\n            return state;\n    }\n}\n\nexport const accountBalanceWithInstallmentPlanExists = (state = false, action) => {\n    switch(action.type) {\n        case ACTIONS.ACCOUNT_BALANCE_WITH_INSTALLMENT_PLAN:\n            return action.payload.accountBalanceWithInstallmentPlanExists;\n        default:\n            return state;\n    }\n}\n\n\nexport const services = (state = [], action) => {\n    switch (action.type) {\n        case ACTIONS.FETCH_SERVICES_TO_TRANSFER_END:\n            return action.payload.servicesToTransfer;\n        default:\n        return state;\n    }\n}\n\nexport const packageDiscountConfirmation = (state = false, action) => {\n    switch(action.type) {\n        case ACTIONS.PACKAGE_DISCOUNT_CONFIRM_CHECKED:\n            return true;\n        case ACTIONS.PACKAGE_DISCOUNT_CONFIRM_UNCHECKED:\n            return false;\n        default:\n            return state;\n    }\n}\n\nexport const selectedServices = (state = [], action) => {\n    switch (action.type) {\n        case ACTIONS.SELECTED_SERVICE_CHANGED:\n            let newState = action.serviceType === FactoryType.FIX ? [] : [...state];\n            if (newState.includes(action.serviceNumber)) {\n                newState = newState.filter(val => val !== action.serviceNumber);\n            } else {\n                newState.push(action.serviceNumber);\n            }\n            return newState;\n        default:\n            return state;\n    }\n}\n"],
    "file": "transfer.js"
}