{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/auth/components/MulticartMessageComponentView.jsx"],
    "names": ["MulticartMessageComponentView", "props", "setSalesChannel", "channels", "sales", "text", "msg", "messageType", "type", "descriptionName", "descriptions", "__html", "showModal", "clearMessage", "size", "escapeClose", "clickClose", "getModalProps", "onClose", "bind", "renderMessage", "Component", "mapStateToProps", "state", "mapDispatchToProps", "dispatch", "channel"],
    "mappings": ";;;;;;;AAAA;AAKA;;;;;;MAIMA,6B;;;;;AACF,2CAAYC,KAAZ,EAAkB;AAAA;AAAA,+BACRA,KADQ;AAEjB;;;;0CACmB;AAChB,aAAKA,KAAL,CAAWC,eAAX,CAA2B,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,KAA/C;AACH;;;sCAEe;AACZ,YAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWK,GAAX,CAAeD,IAA1B;AACA,YAAIE,WAAW,GAAG,KAAKN,KAAL,CAAWK,GAAX,CAAeE,IAAjC;AACA,YAAIC,eAAe,GAAG,KAAKR,KAAL,CAAWK,GAAX,CAAeG,eAArC;;AACA,YAAGF,WAAW,IAAI,UAAlB,EAA8B;AAC1BA,UAAAA,WAAW,GAAG,MAAd;AACH;;AACD,YAAI,CAAC,CAAC,KAAKN,KAAL,CAAWS,YAAb,IAA6B,CAAC,CAAC,KAAKT,KAAL,CAAWS,YAAX,CAAwBD,eAAxB,CAAnC,EAA6E;AACzEJ,UAAAA,IAAI,GAAG,KAAKJ,KAAL,CAAWS,YAAX,CAAwBD,eAAxB,CAAP;AACH;;AACD,YAAG,KAAKR,KAAL,CAAWK,GAAX,IAAkB,IAAlB,IAA0BD,IAAI,IAAI,WAAlC,IAAkDA,IAAI,IAAI,IAA1D,IAAkEA,IAAI,IAAI,EAA7E,EAAiF;AAC7E,cAAI,mBAAOA,IAAP,CAAJ,EAAkB;AACd,gCAAQ;AAAK,cAAA,uBAAuB,EAAE;AAACM,gBAAAA,MAAM,EAAEN;AAAT;AAA9B,cAAR;AACH;;AACD,8BACI;AAAK,YAAA,EAAE,EAAC;AAAR,0BACI,6BAAC,+BAAD;AAAY,YAAA,IAAI,EAAEA,IAAlB;AAAwB,YAAA,IAAI,EAAEE;AAA9B,YADJ,CADJ;AAKH;AACJ;;;gCAES;AACN,YAAG,KAAKN,KAAL,CAAWW,SAAd,EAAwB;AACpB,eAAKX,KAAL,CAAWY,YAAX;AACH;AACJ;;;sCAEe;AACZ,eAAO;AACHC,UAAAA,IAAI,EAAE,QADH;AAEHC,UAAAA,WAAW,EAAE,KAFV;AAGHC,UAAAA,UAAU,EAAE;AAHT,SAAP;AAKH;;;+BAEQ;AACL,4BACI;AAAK,UAAA,EAAE,EAAC;AAAR,wBACI,6BAAC,cAAD,2BAAe,KAAKC,aAAL,EAAf;AAAqC,UAAA,SAAS,EAAE,IAAhD;AAAsD,UAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWW,SAAvE;AAAkF,UAAA,OAAO,EAAE,KAAKM,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAA3F;AAAoH,UAAA,EAAE,EAAC;AAAvH,YACK,KAAKC,aAAL,EADL,CADJ,CADJ;AAOH;;;IApDuCC,gB;;AAwD5C,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC7BjB,MAAAA,GAAG,EAAE,mCAAeiB,KAAf,CADwB;AAE7BX,MAAAA,SAAS,EAAE,mCAAeW,KAAf,KAAuB,EAAvB,IAA6B,mCAAeA,KAAf,KAAuB;AAFlC,KAAL;AAAA,GAA7B;;AAKA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,WAAK;AACpCZ,MAAAA,YAAY,EAAE;AAAA,eAAMY,QAAQ,CAAC,mCAAD,CAAd;AAAA,OADsB;AAEpCvB,MAAAA,eAAe,EAAG,yBAACwB,OAAD;AAAA,eAAaD,QAAQ,CAAC,qCAAgBC,OAAhB,CAAD,CAArB;AAAA;AAFkB,KAAL;AAAA,GAAnC;;iBAKe,yBAAQJ,eAAR,EAAwBE,kBAAxB,EAA4CxB,6BAA5C,C",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getAuthMessage} from \"../selectors/authorization\";\nimport {clearMessage, setSalesChannel} from \"../actions/authorization\";\n\nimport OraModal from \"../../core/components/ui/Modal\";\nimport {OraMessage} from \"../../../components/OraCommonComponents\";\nimport {isHtml} from \"../../configurator/utils\";\n\nclass MulticartMessageComponentView extends Component {\n    constructor(props){\n        super(props);\n    }\n    componentDidMount() {\n        this.props.setSalesChannel(this.props.channels.sales);\n    }\n\n    renderMessage() {\n        let text = this.props.msg.text;\n        let messageType = this.props.msg.type;\n        let descriptionName = this.props.msg.descriptionName;\n        if(messageType == \"progress\") {\n            messageType = \"info\";\n        }\n        if (!!this.props.descriptions && !!this.props.descriptions[descriptionName]) {\n            text = this.props.descriptions[descriptionName];\n        }\n        if(this.props.msg != null && text != 'undefined'  && text != null && text != \"\") {\n            if (isHtml(text)) {\n                return (<div dangerouslySetInnerHTML={{__html: text}}></div>);\n            }\n            return (\n                <div id=\"multicartMessageSection\">\n                    <OraMessage text={text} type={messageType}></OraMessage>\n                </div>\n            );\n        }\n    }\n\n    onClose() {\n        if(this.props.showModal){\n            this.props.clearMessage();\n        }\n    }\n\n    getModalProps() {\n        return {\n            size: \"narrow\",\n            escapeClose: false,\n            clickClose: false\n        };\n    }\n\n    render() {\n        return (\n            <div id=\"messageModalWrapper\">\n                <OraModal  {...this.getModalProps()} showClose={true} open={this.props.showModal} onClose={this.onClose.bind(this)} id=\"message-modal\">\n                    {this.renderMessage()}\n                </OraModal>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n     msg: getAuthMessage(state),\n     showModal: getAuthMessage(state)!='' && getAuthMessage(state)!=null\n});\n\nconst mapDispatchToProps = dispatch => ({\n    clearMessage: () => dispatch(clearMessage()),\n    setSalesChannel : (channel) => dispatch(setSalesChannel(channel))\n\n});\nexport default connect(mapStateToProps,mapDispatchToProps)(MulticartMessageComponentView);\n"],
    "file": "MulticartMessageComponentView.js"
}