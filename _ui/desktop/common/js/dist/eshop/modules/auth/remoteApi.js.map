{
    "version": 3,
    "sources": ["../../../../../es6/eshop/modules/auth/remoteApi.js"],
    "names": ["BASE_PATH", "DATA_PATH", "prepareUrl", "url", "bsfContextPath", "prefixWWW", "logOut", "getLoggedCustomerData", "pushAccount", "data", "selectAccount", "getAccount", "getAccountByCode", "checkMarketCompatibility", "lightLogout", "requestMobileBillingAccounts", "setCimByMsisdn", "setCimByLogin", "pushVerifiedMsisdn", "setMsisdnOrLogin", "checkOfferSelector", "requestPeselAndAddressAuth", "pesel", "isPeselAndAddressedVerified", "timeout", "interval", "iterations", "response"],
    "mappings": "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",
    "sourcesContent": ["import {get, post,postJsonObject,poll} from \"eshop/flux/utils/OraApiUtils\";\n\nconst BASE_PATH = \"/koszyk/multi\";\nconst DATA_PATH = BASE_PATH + \"/_data\";\nconst prepareUrl = (url) => bsfContextPath  + (typeof prefixWWW !== \"undefined\" ? prefixWWW : \"\")  + url//to trzeba do jakiegos shared folderu przerzucic\n\n\n\nexport default{\n    logOut: () => get(prepareUrl(DATA_PATH + \"/customer/logout\")),\n    getLoggedCustomerData: () => get(prepareUrl(\"/customerSmsVerification/loggedCustomerData\")),\n    pushAccount :(data) => post(prepareUrl(\"/customerSmsVerification/pushAccountByMsisdn\"),data),\n    selectAccount :(data) => post(prepareUrl(\"/customerSmsVerification/selectAccount\"),data),\n    getAccount  :(data) => get(prepareUrl(\"/customerSmsVerification/getAccount\"),data),\n    getAccountByCode  :(data) => get(prepareUrl(\"/customerSmsVerification/getAccountByCode\"),data),\n    checkMarketCompatibility : (data) => get(prepareUrl(\"/customerSmsVerification/checkMarketCompatibility\"),data),\n    lightLogout : () => get(prepareUrl(\"/customerSmsVerification/lightLogout\")),\n    requestMobileBillingAccounts  :() => get(prepareUrl(\"/customerSmsVerification/getMobileAccounts\"),{}),\n    setCimByMsisdn:(data) =>post(prepareUrl(\"/customerSmsVerification/setCimByMsisdn\"),data),\n    setCimByLogin:(data) =>post(prepareUrl(\"/customerSmsVerification/setCimByLogin\"),data),\n    pushVerifiedMsisdn:(data) =>post(prepareUrl(\"/customerSmsVerification/pushVerifiedMsisdn\"),data),\n    setMsisdnOrLogin:(data)=>post(prepareUrl(\"/customerSmsVerification/setMsisdnOrLogin\"),data),\n    checkOfferSelector: (data) => post(prepareUrl(\"/customerSmsVerification/checkOfferSelector\"), data),\n    requestPeselAndAddressAuth: (data,pesel) => postJsonObject(prepareUrl(\"/customerAddressVerification/requestPeselAddressVerification/\"+pesel), data),\n    isPeselAndAddressedVerified:(timeout=30000) =>\n    {\n        var url = prepareUrl(\"/customerAddressVerification/isVerified\");\n        var interval=1000;\n        var iterations = timeout/interval;\n        return  poll(url, null,  response => response !== \"pending\", iterations, interval);\n\n    }\n\n\n\n}"],
    "file": "remoteApi.js"
}