{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/auth/components/MulticartCustomerSmsVerificationComponent.jsx"],
    "names": ["MulticartCustomerSmsVerificationComponent", "props", "setShowSection", "showSection", "closeAuthModal", "selectedPropositionName", "selectedDeviceName", "selectedProcessName", "ShowSectionName", "CHECK_IS_CUSTOMER", "MSISDN", "LEAD_FORM", "console", "warn", "setCartConfigurationFromUrl", "descriptions", "isPeselAndAddresVerificationEnabled", "setPeselAndAddressVerificationEnabled", "channels", "sales", "setSalesChannel", "registerBillingAccountPopupToPubSub", "height", "getMyHeight", "setState", "minHeight", "that", "$", "on", "logIn", "elem", "document", "getElementById", "outerHeight", "log", "prvProps", "isAuthNeeded", "isCallbackNeeded", "requestCallbackModal", "customerContactMsisdn", "isLoading", "state", "msisdn", "dismissCallbackErrors", "window", "_gt", "data", "cmbQueueName", "push", "msg", "separator", "onlyMessage", "showModalForAccountIdentify", "showModalForProcess", "messageType", "type", "text", "descriptionName", "renderSeparator", "__html", "processes", "isUserCaapAuthenticated", "loggedCustomerData", "isOnlineCookie", "indexOf", "processType", "isCaapAuthenticatedAndInProcess", "TransactionProcessType", "RETENTION", "MIGRATION_PRE_POST", "INSTALMENT_SALES_OF_GOODS", "accountAlreadyChosen", "accountCode", "isMobileCart", "accountSelectHeader", "msisdnVerificationIsNotRequired", "title", "ACCOUNT", "FIX_PROCESS_CHANGED", "CART_WAS_CHANGED", "INCOMPATIBLE_MARKET_MODAL", "STAY_LOVE", "accountByMsisdn", "billingAccounts", "isBillingAccountContractLimitExceeded", "isB2B", "getAccount", "getAccountByCode", "requestMobileBillingAccountsAndChooseDefault", "requestMobileBillingAccounts", "selectAccount", "selectedBillingAccountId", "showModal", "length", "offersLoading", "accountSelectionInNotRequired", "CAAP", "getPropsForBillingAccountComponent", "cartChangedInfoContent", "cartChangedInfoButtonText", "onClose", "onClickLightLogout", "onClickRemove", "renderModalComponent", "renderMessage", "dismissAuthErrors", "clearCartChangedFlag", "val", "html", "clearMessage", "authorizationFailure", "size", "escapeClose", "showClose", "clickClose", "getModalProps", "getModalContent", "React", "Component", "mapStateToProps", "propositionId", "selectedDeviceId", "clientContext", "billingAccountChangeOn", "showAccountSelection", "errors", "chosenExistingAccount", "isExistingCustomer", "isCustomerDataStep", "selectedOfferType", "showLogoutConfirmationModal", "isCartFix", "isFixLP", "isFixPreLP", "isFix", "marketIncompatibility", "market", "wwwCimIdBasedOfferSelectorProcesses", "isPeselAndAddressVerified", "enablePeselAuth", "name", "description", "mapDispatchToProps", "dispatch", "setMSISDN", "authorizationSuccess", "continueWithODF", "account", "stayLove", "setMsisdn", "useExisting", "checkMarketCompatibility", "setCimByMsisdn", "pushVerifiedMsisdn", "nextSection", "pushAccount", "showMessage", "section", "showError", "safeLogOut", "accountId", "setIsLoading", "channel", "requestLoggedCustomerData", "showMobileAccountSelection", "ommitAccountAuth", "deviceId", "hideLogoutConfirmationModal", "setCimByLogin", "login", "checkOfferSelector", "requestPeselAndAddressAuth", "simpleAddress", "pesel", "timeout", "enabled", "propTypes", "PropTypes", "string", "SmsVerification"],
    "mappings": "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",
    "sourcesContent": ["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {\n    getClientContext,\n    getMarketContext,\n    getSelectedOfferType,\n    getSelectedProcessTypeValue,\n} from \"eshop/modules/configurator/selectors/filters\";\nimport {\n    getNameForSelectedOffer,\n    getSelectedDeviceId,\n    getSelectedOfferId,\n} from \"eshop/modules/configurator/selectors/offers\";\nimport BillingAccountSelectionSectionComponent from \"./BillingAccountSelectionSectionComponent\";\nimport MsisdnSelectionSectionComponent from \"./MsisdnSelectionSectionComponent\";\nimport CaapSectionComponent from \"./CaapSectionComponent\";\nimport OraModal from \"eshop/modules/core/components/ui/Modal\";\nimport {setCartConfigurationFromUrl} from \"eshop/modules/configurator/actions/offers\";\nimport LoggedCustomerBarComponent from \"./LoggedCustomerBarComponent\";\nimport {isLandingPage, isPreLandingPage} from \"eshop/modules/fix/selectors/root\";\nimport {\n    getAccountByMsisdn,\n    getAccountSelectionModalVisibility,\n    getAuthMessage,\n    getAuthorizationForAccountIdentifyModalVisibility,\n    getAuthorizationForProcessModalVisibility,\n    getBillingAccountChangeVisibility,\n    getBillingAccountContractLimitExceeded,\n    getBillingAccountsForSelection,\n    getChosenExistingAccount,\n    getIsLoading,\n    getIsOnlineCookie,\n    getLoggedCustomerData,\n    getMarketIncompatible,\n    getMSISDN,\n    getSelectedBillingAccountId,\n    getShowLogoutConfirmationModal,\n    getShowSection,\n    getWwwCimIdBasedOfferSelectorProcesses,\n    isPeselAndAddressVerificationEnabled,\n    isPeselAndAddressVerified,\n} from \"../selectors/authorization\";\nimport {\n    checkMarketCompatibility,\n    checkOfferSelector,\n    clearCartChangedFlag,\n    getAccount,\n    getAccountByCode,\n    lightLogout,\n    pushAccount,\n    pushVerifiedMsisdn,\n    requestLoggedCustomerData,\n    requestMobileBillingAccounts,\n    requestPeselAndAddressAuth,\n    selectAccount,\n    setCimByLogin,\n    setCimByMsisdn,\n    setMsisdn,\n} from \"../actions/api\";\nimport {\n    authorizationFailure,\n    authorizationSuccess,\n    clearMessage,\n    closeAuthModal,\n    hideLogoutConfirmationModal,\n    logIn,\n    ommitAccountAuth,\n    registerBillingAccountPopupToPubSub,\n    safeLogOut,\n    setIsLoading,\n    setMSISDN,\n    setPeselAndAddressVerificationEnabled,\n    setSalesChannel,\n    setShowSection,\n    showError,\n    showMessage,\n    showMobileAccountSelection,\n    stayLove,\n} from \"../actions/authorization\";\nimport {requestMobileBillingAccountsAndChooseDefault} from \"eshop/modules/auth/actions/api\"\nimport {OraLoader, OraMessage} from \"eshop/components/OraCommonComponents\";\n\nimport {\n    getAuthCheckoutErrors,\n    getCustomerContactMsisdn,\n    getIsCustomerDataStep,\n    isAuthNeeded,\n    isCallbackNeeded,\n    isExistingCustomer,\n} from \"eshop/modules/checkout/selectors\";\nimport {dismissAuthErrors, dismissCallbackErrors} from \"eshop/modules/checkout/actions/app\";\nimport MulticartModificationModalComponent from \"eshop/modules/checkout/components/MulticartModificationModalComponent\";\nimport {isCartFix} from \"eshop/modules/cart/selectors\";\nimport CartChangedInfoModal from \"eshop/modules/checkout/components/modals/CartChangedInfoModal\";\nimport {removeFromCart} from \"../../cart/actions/cart\";\nimport IncompatibleMarketModal from \"../../checkout/components/modals/IncompatibleMarketModal\";\nimport StayLoveSectionComponent from \"eshop/modules/auth/components/StayLoveSectionComponent\";\nimport TransactionProcessType from \"../../core/constants/TransactionProcessTypeEnum\";\nimport ShowSectionName from \"../../core/constants/ShowSectionNameEnum\";\nimport CheckIsExistingLoveCustomerComponent from \"./CheckIsExistingLoveCustomerComponent\";\nimport LeadFormComponent from \"./LeadFormComponent\";\nimport {getSelectedDeviceObject} from \"../../simfree/selectors\";\nimport {getSelectedProcessTypeObject} from \"../../configurator/selectors/filters\";\nimport {getSelectedOffersDeviceName} from \"../../configurator/selectors/offers\";\nimport {isHtml} from \"../../configurator/utils\";\n\nclass MulticartCustomerSmsVerificationComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        console.warn(\"MulticartCustomerSmsVerificationComponent\");\n    }\n\n    componentDidMount() {\n        this.props.setCartConfigurationFromUrl();\n\n        if (this.props.descriptions.isPeselAndAddresVerificationEnabled === \"true\") {\n            this.props.setPeselAndAddressVerificationEnabled(true);\n\n        }\n\n\n        if (this.props.channels && this.props.channels.sales) {\n            this.props.setSalesChannel(this.props.channels.sales)\n        }\n        if (this.props.channels && this.props.channels.sales !== \"WWW\") {\n            this.props.registerBillingAccountPopupToPubSub();\n        }\n        let height = this.getMyHeight();\n        if (height < 100)\n            height = 100;\n        this.setState({minHeight: height});\n        let that = this;\n        $(\"#showAuthModalTrigger\").on(\"click\", function () {\n            that.props.logIn();\n        })\n    }\n\n\n    getMyHeight() {\n        let elem = document.getElementById(\"smsAuthLoader\");\n        if (!elem) {\n            return 0;\n        }\n        let height = $(elem).outerHeight();\n        if (height < 100) {\n            height = 100;\n        }\n        console.log(\"myHeight=\", height);\n        return height;\n\n    }\n\n    componentDidUpdate(prvProps) {\n        if (this.props.isAuthNeeded && !prvProps.isAuthNeeded) {\n            this.props.setShowSection(ShowSectionName.MSISDN);\n        }\n        if (this.props.isCallbackNeeded)\n            this.requestCallbackModal(this.props.customerContactMsisdn);\n\n        if (0 && !this.props.isLoading && this.getMyHeight() != this.state.minHeight) {\n            let height = this.getMyHeight();\n            if (height < 100)\n                height = 100;\n            this.setState({minHeight: height});\n        }\n\n\n    }\n\n    requestCallbackModal(msisdn) {\n        this.props.dismissCallbackErrors();\n        console.warn(\"RZUCAM MODALKA PO CALLBACK\");\n        window._gt = window._gt || [];\n        const data = {\n            \"cmb_profile\": this.props.descriptions.cmbQueueName || \"SALES_C_OMNI_CALLBACK\",\n            \"cmbPhoneNumber\": msisdn,\n        };\n        window._gt.push([\"event\", \"portalCmbStart\", {data: data}]);\n\n    }\n\n\n    renderSeparator() {\n        return (<div className=\"o-separator o-separator--s o-separator--full-width u-spacing-top-xl\"/>);\n    }\n\n    renderMessage(){\n        if (!this.props.msg) {\n            return null;\n        }\n        let separator = \"\";\n        let onlyMessage = !(this.props.showModalForAccountIdentify || this.props.showModalForProcess);\n        let messageType = this.props.msg.type;\n        let text = this.props.msg.text;\n        let descriptionName = this.props.msg.descriptionName;\n        if (!!descriptionName && !!this.props.descriptions && !!this.props.descriptions[descriptionName]) {\n            text = this.props.descriptions[descriptionName];\n        }\n        if (!onlyMessage) {\n            separator = this.renderSeparator();\n            if (messageType === \"progress\") {\n                messageType = \"info\";\n            }\n        }\n        if (this.props.msg != null && !!text && text !== \"\") {\n            if (isHtml(this.props.msg.text)) {\n                return (<div dangerouslySetInnerHTML={{__html: this.props.msg.text}}></div>);\n            }\n            return (\n                <div id=\"smsVerificationMessageSection\" className={\"u-padding-top-m\"}>\n                    {separator}\n                    <OraMessage text={text} type={messageType}/>\n                </div>\n            );\n        }\n    }\n\n    isCaapAuthenticatedAndInProcess(processes) {\n        let isUserCaapAuthenticated = this.props.loggedCustomerData && this.props.loggedCustomerData.isOnlineCookie;\n        return isUserCaapAuthenticated && processes.indexOf(this.props.processType) !== -1\n    }\n\n    msisdnVerificationIsNotRequired() {\n        return this.isCaapAuthenticatedAndInProcess([TransactionProcessType.RETENTION, TransactionProcessType.MIGRATION_PRE_POST, TransactionProcessType.INSTALMENT_SALES_OF_GOODS])\n    }\n\n    accountSelectionInNotRequired() {\n        return this.isCaapAuthenticatedAndInProcess([TransactionProcessType.RETENTION, TransactionProcessType.INSTALMENT_SALES_OF_GOODS]) || this.accountAlreadyChosen()\n    }\n\n    accountAlreadyChosen() {\n        return this.props.loggedCustomerData.accountCode || this.props.loggedCustomerData.isMobileCart\n    }\n\n    title({showSection, descriptions}) {\n        const accountSelectHeader = \"Zdecyduj czy zamówienie ma być rozliczane w ramach faktury dla posiadanego już konta, czy nowego.\";\n        switch (showSection) {\n            case ShowSectionName.MSISDN:\n                if (this.msisdnVerificationIsNotRequired()) {\n                    return \"Numer telefonu\";\n                } else {\n                    return descriptions.title;\n                }\n            case ShowSectionName.ACCOUNT:\n                return accountSelectHeader;\n            case ShowSectionName.FIX_PROCESS_CHANGED:\n            case ShowSectionName.CART_WAS_CHANGED:\n                return \"Uwaga!\";\n            case ShowSectionName.INCOMPATIBLE_MARKET_MODAL:\n                return \"\";\n            case ShowSectionName.STAY_LOVE:\n                return \"Masz ofertę Love dla Firm z rabatami\";\n            case ShowSectionName.CHECK_IS_CUSTOMER:\n                return <div className={\"u-inline u-font-small\"}>Czy masz już abonament komórkowy w Orange?</div>;\n            case ShowSectionName.LEAD_FORM: {\n                return <div className={\"u-inline\"}>Nie masz jeszcze pakietu Love dla Firm -\n                    <br className={\"u-small-hide\"}/> co dalej</div>;\n            }\n            default:\n                return descriptions.title;\n        }\n    }\n    renderModalComponent = ({setShowSection, showSection, closeAuthModal, selectedPropositionName, selectedDeviceName, selectedProcessName}) => {\n        switch (showSection) {\n            case ShowSectionName.CHECK_IS_CUSTOMER: {\n                return (\n                    <CheckIsExistingLoveCustomerComponent\n                        logIn = {() => setShowSection(ShowSectionName.MSISDN)}\n                        hasNoAccount = {() => setShowSection(ShowSectionName.LEAD_FORM)}\n                    />\n                    );\n            }\n            case ShowSectionName.LEAD_FORM: {\n                return (\n                    <LeadFormComponent\n                        closeModal={() => closeAuthModal()}\n                        selectedPropositionName={selectedPropositionName}\n                        selectedDeviceName={selectedDeviceName}\n                        selectedProcessName={selectedProcessName}\n                    />\n                )\n            }\n            default:\n                break;\n        }\n    };\n\n\n    getPropsForBillingAccountComponent(){\n        return {\n            accountByMsisdn:this.props.accountByMsisdn,\n            billingAccounts:this.props.billingAccounts,\n            isBillingAccountContractLimitExceeded:this.props.isBillingAccountContractLimitExceeded,\n            channels:this.props.channels,\n            isB2B:this.props.isB2B,\n            descriptions:this.props.descriptions,\n            getAccount:this.props.getAccount,\n            getAccountByCode:this.props.getAccountByCode,\n            requestMobileBillingAccountsAndChooseDefault:this.props.requestMobileBillingAccountsAndChooseDefault,\n            requestMobileBillingAccounts:this.props.requestMobileBillingAccounts,\n            selectAccount:this.props.selectAccount,\n            selectedBillingAccountId:this.props.selectedBillingAccountId,\n            showModal:this.props.showModal\n        }\n\n    }\n\n    getModalContent() {\n        return (\n            <div >\n                <OraLoader\n                    loading={this.props.isLoading}\n                    id=\"smsAuthLoader\"\n                    parentId=\"verification-loader\"\n                    useHeightFixing={false}>\n                    {\n                        (this.props.showSection.length > 0) &&\n                        <div style={{minHeight: this.props.offersLoading ? this.state.minHeight : 100}}>\n                            {\n                                this.props.channels.sales === \"WWW\" &&\n                                <h3 className={\"u-no-padding-bottom\"}>\n                                    <span id=\"opl-sms-modal-main-label\" aria-atomic=\"true\" className=\"u-spacing-right-s\"\n                                        aria-live=\"assertive\"> {this.title(this.props)}</span>\n                                </h3>\n                            }\n                            {\n                                this.props.showSection === ShowSectionName.MSISDN &&\n                                <MsisdnSelectionSectionComponent\n                                    {...this.props}\n                                    msisdnVerificationIsNotRequired={() => this.msisdnVerificationIsNotRequired()}\n                                    accountSelectionInNotRequired={() => this.accountSelectionInNotRequired()}/>\n                            }\n                            {\n                                this.props.showSection === ShowSectionName.CAAP &&\n                                <CaapSectionComponent {...this.props}/>\n                            }\n                            {\n                                this.props.showSection === ShowSectionName.ACCOUNT &&\n                                <BillingAccountSelectionSectionComponent {...this.getPropsForBillingAccountComponent()}/>\n                            }\n                            {\n                                this.props.showSection === ShowSectionName.FIX_PROCESS_CHANGED &&\n                                <MulticartModificationModalComponent {...this.props}/>\n                            }\n                            {\n                                this.props.showSection === ShowSectionName.CART_WAS_CHANGED &&\n                                <CartChangedInfoModal\n                                    text={this.props.descriptions.cartChangedInfoContent}\n                                    buttonText={this.props.descriptions.cartChangedInfoButtonText}\n                                    buttonClick={() => this.onClose()}/>\n                            }\n                            {\n                                this.props.showSection === ShowSectionName.STAY_LOVE &&\n                                <StayLoveSectionComponent {...this.props}/>\n                            }\n                            {\n                                this.props.showSection === ShowSectionName.INCOMPATIBLE_MARKET_MODAL &&\n                                <IncompatibleMarketModal\n                                    {...this.props}\n                                    id=\"incompatible-market-modal\"\n                                    onClickLightLogout={this.props.onClickLightLogout}\n                                    removeFromCart={this.props.onClickRemove}\n                                />\n                            }\n                            {this.renderModalComponent(this.props)}\n                        </div>\n                    }\n                </OraLoader>\n                {this.renderMessage()}\n            </div>\n        );\n    }\n\n    onClose() {\n        this.props.dismissAuthErrors();\n        if (this.props.showSection === ShowSectionName.CART_WAS_CHANGED) {\n            this.props.clearCartChangedFlag();\n        }\n        this.props.setShowSection(\"\");\n        $(\"#msisdn\").val(\"\");\n        $(\"#smsVerificationCaapSectionBody\").html(\"\");\n        if (this.props.showModal) {\n            this.props.clearMessage();\n            this.props.authorizationFailure();\n        }\n    }\n\n    getModalProps() {\n        return {\n            size: \"narrow\",\n            escapeClose: true,\n            showClose:true,\n            clickClose:true,\n        };\n    }\n\n    render() {\n        return (\n            <div id=\"authModalWrapper\">\n                <LoggedCustomerBarComponent {...this.props}/>\n                <button id={\"showAuthModalTrigger\"} className=\"u-hide\"/>\n                <OraModal\n                    id=\"auth-modal\"\n                    {...this.getModalProps()}\n                    open={this.props.showModal}\n                    onClose={() => this.onClose()}>\n                    {this.getModalContent()}\n                </OraModal>\n                <div id=\"smsVerificationSection\">\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    propositionId: getSelectedOfferId(state),\n    selectedDeviceId: getSelectedDeviceId(state),\n    clientContext: getClientContext(state),\n    isLoading: getIsLoading(state),\n    processType: getSelectedProcessTypeValue(state),\n    msg: getAuthMessage(state),\n    showModal: getAccountSelectionModalVisibility(state) || getAuthorizationForProcessModalVisibility(state) || getAuthorizationForAccountIdentifyModalVisibility(state) || (getAuthMessage(state) != '' && getAuthMessage(state) != null),\n    showModalForProcess: getAuthorizationForProcessModalVisibility(state),\n    showModalForAccountIdentify: getAuthorizationForAccountIdentifyModalVisibility(state),\n    billingAccountChangeOn: getBillingAccountChangeVisibility(state),\n    showSection: getShowSection(state),\n    showAccountSelection: getAccountSelectionModalVisibility(state),\n    isBillingAccountContractLimitExceeded:    getBillingAccountContractLimitExceeded(state),\n    billingAccounts: getBillingAccountsForSelection(state),\n    selectedBillingAccountId: getSelectedBillingAccountId(state),\n    errors: getAuthCheckoutErrors(state),\n    isAuthNeeded: isAuthNeeded(state),\n    isCallbackNeeded: isCallbackNeeded(state),\n    chosenExistingAccount: getChosenExistingAccount(state),\n    msisdn: getMSISDN(state),\n    isExistingCustomer: isExistingCustomer(state),\n    isCustomerDataStep: getIsCustomerDataStep(state),\n    selectedOfferType: getSelectedOfferType(state),\n    loggedCustomerData: getLoggedCustomerData(state),\n    customerContactMsisdn: getCustomerContactMsisdn(state),\n    showLogoutConfirmationModal: getShowLogoutConfirmationModal(state),\n    isCartFix: isCartFix(state),\n    isOnlineCookie: getIsOnlineCookie(state),\n    accountByMsisdn: getAccountByMsisdn(state),\n    isFixLP: isLandingPage(state),\n    isFixPreLP: isPreLandingPage(state),\n    isFix: isLandingPage(state) || isPreLandingPage(state) || isCartFix(state),\n    marketIncompatibility: getMarketIncompatible(state),\n    isB2B: getMarketContext(state) === \"B2B\" || (getLoggedCustomerData(state) && getLoggedCustomerData(state).market === \"B2B\"),\n    wwwCimIdBasedOfferSelectorProcesses: getWwwCimIdBasedOfferSelectorProcesses(),\n    isPeselAndAddressVerified: isPeselAndAddressVerified(state),\n    enablePeselAuth: isPeselAndAddressVerificationEnabled(state),\n    selectedPropositionName: getNameForSelectedOffer(state) || \"\",\n    selectedDeviceName: getSelectedDeviceObject(state) && getSelectedDeviceObject(state).name || getSelectedOffersDeviceName(state) && getSelectedOffersDeviceName(state).name || \"\",\n    selectedProcessName: getSelectedProcessTypeObject(state) && getSelectedProcessTypeObject(state).description || \"\",\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setMSISDN: (msisdn) => dispatch(setMSISDN(msisdn)),\n    authorizationSuccess: (continueWithODF, account) => dispatch(authorizationSuccess(continueWithODF, account)),\n    stayLove: () => dispatch(stayLove()),\n\n    authorizationFailure: () => dispatch(authorizationFailure()),\n    closeAuthModal: () => dispatch(closeAuthModal()),\n    setMsisdn: (msisdn, propositionId) => dispatch(setMsisdn(msisdn, propositionId)),\n\n    getAccount: (msisdn, useExisting) => dispatch(getAccount(msisdn, useExisting)),\n    getAccountByCode: (accountCode) => dispatch(getAccountByCode(accountCode)),\n    checkMarketCompatibility: (msisdn) => dispatch(checkMarketCompatibility(msisdn)),\n    setCimByMsisdn: (msisdn) => dispatch(setCimByMsisdn(msisdn)),\n    requestMobileBillingAccounts: () => dispatch(requestMobileBillingAccounts()),\n    pushVerifiedMsisdn: (msisdn, processType, propositionId, nextSection, selectedDeviceId) => dispatch(pushVerifiedMsisdn(msisdn, processType, propositionId, nextSection, selectedDeviceId)),\n    pushAccount: (msisdn, useExisting) => dispatch(pushAccount(msisdn, useExisting)),\n    showMessage: (msg) => dispatch(showMessage(msg)),\n    setShowSection: (section) => dispatch(setShowSection(section)),\n    showError: (msg) => dispatch(showError(msg)),\n    logIn: () => dispatch(logIn()),\n    safeLogOut: () => dispatch(safeLogOut()),\n    selectAccount: (accountId,accountCode) => dispatch(selectAccount(accountId,accountCode)),\n    clearMessage: () => dispatch(clearMessage()),\n    setIsLoading: (isLoading) => dispatch(setIsLoading(isLoading)),\n    setSalesChannel: (channel) => dispatch(setSalesChannel(channel)),\n    registerBillingAccountPopupToPubSub: () => dispatch(registerBillingAccountPopupToPubSub()),\n\n    requestMobileBillingAccountsAndChooseDefault: () => dispatch(requestMobileBillingAccountsAndChooseDefault()),\n    onClickLightLogout: () => dispatch(lightLogout()),\n    onClickRemove: () => {\n        dispatch(removeFromCart(null));\n        dispatch(requestLoggedCustomerData());\n    },\n\n    requestLoggedCustomerData: () => dispatch(requestLoggedCustomerData()),\n    showMobileAccountSelection: () => dispatch(showMobileAccountSelection()),\n    dismissCallbackErrors: () => dispatch(dismissCallbackErrors()),\n    dismissAuthErrors: () => dispatch(dismissAuthErrors()),\n    ommitAccountAuth: () => dispatch(ommitAccountAuth()),\n    setCartConfigurationFromUrl: (propositionId, deviceId) => dispatch(setCartConfigurationFromUrl(propositionId, deviceId)),\n    hideLogoutConfirmationModal: () => dispatch(hideLogoutConfirmationModal()),\n    setCimByLogin: (login) => dispatch(setCimByLogin(login)),\n    clearCartChangedFlag: () => dispatch(clearCartChangedFlag()),\n    checkOfferSelector: (processType, propositionId, selectedDeviceId) => dispatch(checkOfferSelector(processType, propositionId, selectedDeviceId)),\n    requestPeselAndAddressAuth: (simpleAddress, pesel, timeout) => dispatch(requestPeselAndAddressAuth(simpleAddress, pesel, timeout)),\n    setPeselAndAddressVerificationEnabled: (enabled) => dispatch(setPeselAndAddressVerificationEnabled(enabled)),\n});\n\nMulticartCustomerSmsVerificationComponent.propTypes = {\n    showSection: PropTypes.string,\n};\n\nconst SmsVerification = connect(mapStateToProps, mapDispatchToProps)(MulticartCustomerSmsVerificationComponent);\nexport default SmsVerification;\n\n"],
    "file": "MulticartCustomerSmsVerificationComponent.js"
}