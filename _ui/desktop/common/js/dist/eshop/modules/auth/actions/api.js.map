{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/auth/actions/api.js"],
    "names": ["doLogOut", "dispatch", "getState", "RemoteApi", "logOut", "catch", "data", "console", "error", "code", "then", "log", "OnlineUtils", "removePwaSuflerContextFromSession", "lastOfferPage", "getLastViewedOfferPage", "$", "length", "window", "location", "href", "setPeselAndAddresVerified", "isVerified", "type", "ACTIONS", "IS_PESEL_AND_ADDRESS_VERIFIED", "backToAuthStartWithError", "message", "ShowSectionName", "MSISDN", "focus", "pollIsPeselAndAddressVerified", "timeout", "isPeselAndAddressedVerified", "response", "isErrorResponse", "commonAfterLoginActions", "peselAuthorizationReguestId", "requestPeselAndAddressAuth", "simpleAddresPartial", "pesel", "setAccounts", "payload", "SET_BILLING_ACCOUNTS", "requestMobileBillingAccounts", "SET_MOBILE_BILLING_ACCOUNTS", "meta", "requestMobileBillingAccountsAndChooseDefault", "accountCode", "AUTHORIZATION_CHANGE_ACCOUNT_ON", "selectAccount", "accountId", "optionalRedirectToDifferentLP", "account", "accounts", "filter", "a", "odfPaths", "lovePaths", "path", "pathname", "hasLove", "hasODF", "indexOf", "changeOrAddUrlParameterDisabledOnCheckout", "setLoggedCustomerData", "AUTHORIZATION_SET_LOGGED_CUSTOMER_DATA", "clearCartChangedFlag", "AUTHORIZATION_CLEAR_CART_CHANGED_FLAG", "requestLoggedCustomerDataAndCheckExistence", "getLoggedCustomerData", "getSelectedOfferType", "OfferType", "VOICE_LDF", "lastName", "tradingName", "requestLoggedCustomerData", "isCartChanged", "CART_WAS_CHANGED", "includes", "AUTHORIZATION_MODAL_FOR_ACCOUNT_IDENTIFY_OFF", "accountSelectionErrorHandler", "AUTHORIZATION_CHANGE_ACCOUNT_OFF", "err", "warn", "AUTHORIZATION_MODAL_FOR_PROCESS_OFF", "AUTHORIZATION_IS_LOADING_OFF", "setCimByMsisdn", "msisdn", "setCimByLogin", "login", "loginResponse", "status", "CHECKOUT_ACTIONS", "SET_FIX_CART_REFRESH_RESULT", "pushAccount", "useExisting", "setMsisdn", "processType", "jQuery", "isNumeric", "setMsisdnOrLogin", "PubSub", "publish", "containerId", "pageVariant", "incompatibleMarketActions", "incompatibleMarketCheck", "checkMarketCompatibility", "start", "success", "INCOMPATIBLE_MARKET_MODAL", "lightLogout", "getAccount", "push", "getAccountFromResponse", "manageGetAccountError", "getAccountByCode", "isWwwPrepaidB2b", "handleNewPrepaidAccount", "doChooseAccount", "showResponseError", "pushVerifiedMsisdn", "propositionId", "nextSection", "selectedDeviceId", "availableProductsKey", "checkOfferSelector", "Promise", "reject", "resolve", "JSON", "parse", "responseText", "originalHttpStatus", "salesChannel", "isB2b", "isWww", "isPrepaid", "prepaid"],
    "mappings": "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",
    "sourcesContent": ["import RemoteApi from \"eshop/modules/auth/remoteApi\";\nimport * as ACTIONS from \"eshop/modules/auth/actionTypes\";\nimport * as CHECKOUT_ACTIONS from \"eshop/modules/checkout/actionTypes\";\nimport {\n    accountIdentifySuccess,\n    authorizationSuccess,\n    clearMessage,\n    closeAuthModal,\n    setAccountByMsisdn,\n    setIncompatibleMarket,\n    setIsLoading,\n    setShowSection,\n    showError,\n    showMessage,\n    showMobileAccountSelection,\n} from \"eshop/modules/auth/actions/authorization\";\nimport {fetchContractRole} from \"eshop/modules/configurator/actions/offers\";\nimport {getSelectedProcessTypeValue} from \"eshop/modules/configurator/selectors/filters\";\nimport {\n    getIsCartStep,\n    getIsCustomerDataStep,\n    shouldShowModalAfterProcessChanged,\n} from \"eshop/modules/checkout/selectors\";\nimport {\n    getAccountSelectionModalVisibility,\n    getBillingAccountChangeVisibility,\n    getBillingAccountContractLimitExceeded,\n    getBillingAccountsForSelection,\n    getLoggedCustomerData,\n    getLovePaths,\n    getSalesChannel,\n    getSelectedBillingAccountId,\n    getWwwCimIdBasedOfferSelectorProcesses,\n    isLovePage,\n    isPeselAndAddressVerified\n} from \"eshop/modules/auth/selectors/authorization\";\nimport {isLandingPage, isPreLandingPage} from \"eshop/modules/fix/selectors/root\";\nimport {fetchCart, fetchMiniCart} from \"eshop/modules/cart/actions/cart\";\nimport {getCartIsNet} from \"eshop/modules/cart/selectors\";\n\nimport {\n    gotoCartSummary,\n    requestFBBServiceData,\n    requestFBBServiceDataFilteredByWWT,\n} from \"eshop/modules/checkout/actions/app\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\nimport {\n    getCurrentSelectedAvailableProductsKey,\n    isAccessoryListPage,\n    isProductDetailsPage,\n    isProductListPage,\n} from \"eshop/modules/simfree/selectors\";\nimport {createRequestActions} from \"../../core/utils/request-actions-creator\";\nimport {isMobileBillingAccountsSet} from \"../../configurator/selectors/metaData\";\nimport ShowSectionName from \"../../core/constants/ShowSectionNameEnum\";\nimport {hasLove, isLogged, isOdfPage} from \"../selectors/authorization\";\nimport {setOfferType} from \"../../simfree/actions/app\";\nimport {getDeliveryAndPaymentStep} from \"eshop/modules/checkout/selectors\"\n\nexport const doLogOut = () => (dispatch, getState) => {\n    RemoteApi.logOut()\n        .catch(data => console.error(`Error while log out! Code: ${data.code}`))\n        .then(data => {\n            console.log(data);\n            OnlineUtils.removePwaSuflerContextFromSession();\n\n            const lastOfferPage = OnlineUtils.getLastViewedOfferPage();\n            if (lastOfferPage && $(\"#offerTypeSelectionComponent\").length) {\n                window.location.href = lastOfferPage;\n                return;\n            }\n\n            dispatch(gotoCartSummary());\n        });\n};\n\n\nexport const setPeselAndAddresVerified = isVerified => (dispatch, getState) => {\n    dispatch({type: ACTIONS.IS_PESEL_AND_ADDRESS_VERIFIED, isVerified})\n};\n\nexport const backToAuthStartWithError = message => (dispatch, getState) => {\n    dispatch(setIsLoading(false));\n    dispatch(setShowSection(ShowSectionName.MSISDN));\n\n    dispatch(showError(\"Nie udało się zalogować. Sprawdź dane i spróbuj jeszcze raz.\"));\n    $(\"#msisdn\").focus();\n};\n\nconst pollIsPeselAndAddressVerified = timeout => (dispatch, getState) => {\n    console.log(\"isPeselAndAddressVerifiedRequest  \");\n    RemoteApi.isPeselAndAddressedVerified(timeout).then(\n        response => {\n            console.log(response);\n\n            if (isErrorResponse(response)) {\n                dispatch(setPeselAndAddresVerified(false));\n            } else if (response == \"false\") {\n                dispatch(setPeselAndAddresVerified(false));\n                dispatch(backToAuthStartWithError(\"Nie udało się zalogować. Sprawdź dane i spróbuj jeszcze raz.\"))\n            } else {\n                dispatch(setPeselAndAddresVerified(true));\n                dispatch(commonAfterLoginActions(response));\n            }\n            console.log(\"Pooling :\", response);\n        }\n    ).catch(error => {\n        dispatch(backToAuthStartWithError(\"Nie udało się zalogować. Sprawdź dane i spróbuj jeszcze raz.\"))\n        console.log(error);\n    });\n};\n\nlet peselAuthorizationReguestId = \"\";\nexport const requestPeselAndAddressAuth = (simpleAddresPartial, pesel, timeout) => (dispatch, getState) => {\n    dispatch(setShowSection(ShowSectionName.MSISDN));\n    dispatch(setIsLoading(true));\n    dispatch(showMessage(\"Trwa weryfikacja wprowadzonych danych.\"));\n    RemoteApi.requestPeselAndAddressAuth(simpleAddresPartial, pesel, timeout).then(\n        response => {\n            if (isErrorResponse(response)) {\n                dispatch(backToAuthStartWithError(\"Nie udało się zalogować. Sprawdź dane i spróbuj jeszcze raz.\"))\n                return;\n            }\n\n\n            peselAuthorizationReguestId = response;\n            dispatch(pollIsPeselAndAddressVerified(timeout));\n            console.log(\"peselAuthorizationReguestId\", response);\n        }\n    ).catch(error => {\n        console.log(error);\n        dispatch(backToAuthStartWithError(\"Nie udało się zalogować. Sprawdź dane i spróbuj jeszcze raz.\"))\n    });\n};\n\nexport const setAccounts =\n    payload => ({\n        type: ACTIONS.SET_BILLING_ACCOUNTS,\n        payload: payload,\n    });\nexport const requestMobileBillingAccounts = () => (dispatch, getState) => {\n    dispatch(setIsLoading(true));\n    RemoteApi.requestMobileBillingAccounts()\n        .then(response => {\n                dispatch({\n                    type: ACTIONS.SET_MOBILE_BILLING_ACCOUNTS,\n                    payload: response,\n                    meta: true,\n                });\n                dispatch(clearMessage());\n                dispatch(setIsLoading(false));\n                //TODO jeśli nie znaleziono kont to nowe\n            }\n        ).catch(error => {\n            console.error(\"Accounts NOT Found\", error);\n            dispatch(showError(\"Nie znaleziono kont\"));\n            dispatch(setIsLoading(false));\n        }\n    );\n};\n\nexport const requestMobileBillingAccountsAndChooseDefault = () => (dispatch, getState) => {\n\n    if(getDeliveryAndPaymentStep(getState())){\n        return;\n    }\n    console.log(\"#################### requestMobileBillingAccountsAndChooseDefault\");\n    RemoteApi.requestMobileBillingAccounts()\n        .then(response => {\n                dispatch({\n                    type: ACTIONS.SET_MOBILE_BILLING_ACCOUNTS,\n                    payload: response,\n                    meta: true,\n                });\n                if (getLoggedCustomerData(getState()).accountCode == null) {\n                    if (response.length > 1 || getBillingAccountContractLimitExceeded(getState())) {\n                        dispatch({type: ACTIONS.AUTHORIZATION_CHANGE_ACCOUNT_ON});\n                        dispatch(showMobileAccountSelection());\n                    } else if (response.length === 1) {\n                        dispatch(selectAccount(response[0].accountId,response[0].accountCode));\n\n                    } else {\n                        dispatch(selectAccount(\"\",\"\"));\n                    }\n                }\n                dispatch(setIsLoading(false));\n            }\n        ).catch(error => {\n            console.error(\"Accounts NOT Found\", error);\n            dispatch(showError(\"Nie znaleziono kont\"));\n            dispatch(setIsLoading(false));\n        }\n    );\n};\n\nexport const optionalRedirectToDifferentLP = () => (dispatch, getState) => {\n    const accountId = getSelectedBillingAccountId(getState());\n    if (!accountId) {\n        return;\n    }\n    let account = getLoggedCustomerData(getState());\n    if (isMobileBillingAccountsSet(getState())) {\n        const accounts = getBillingAccountsForSelection(getState());\n        account = (accounts || []).filter(a => a.accountId === accountId)[0];\n\n        if (!account) {\n            console.error(\"accountId unconsistency\");\n            return;\n        }\n    }\n    //temporary disable redirection for WWW\n    // if (getSalesChannel(getState()) === \"WWW\") {\n    //     return;\n    // }\n    // to be configurable\n    const odfPaths = [\n        \"/abonament-komorkowy-dla-firm\",\n        \"/male-firmy/abonament-komorkowy\",\n    ];\n    const lovePaths = getLovePaths();\n\n    const path = window.location.pathname;\n    const hasLove = account.hasLove;\n    const hasODF = account.hasODF;\n\n    if (odfPaths.indexOf(path) > -1 && hasLove) {\n        window.location.pathname = lovePaths[0];\n        return true;\n    } else if (!hasLove && isLovePage() && hasODF) {\n        OnlineUtils.changeOrAddUrlParameterDisabledOnCheckout(\"offerType\", \"VOICE\");\n        window.location.pathname = odfPaths[0];\n        return true;\n    } else {\n        //NOP\n    }\n\n};\n\nexport const setLoggedCustomerData =\n    payload => ({\n        type: ACTIONS.AUTHORIZATION_SET_LOGGED_CUSTOMER_DATA,\n        payload: payload,\n    });\n\nexport const clearCartChangedFlag =\n    () => ({\n        type: ACTIONS.AUTHORIZATION_CLEAR_CART_CHANGED_FLAG,\n    });\n\n\nexport const requestLoggedCustomerDataAndCheckExistence = (timeout = 3000) => (dispatch, getState) => {\n    console.log(\"#################### requestLoggedCustomerDataAndCheckExistence\");\n    RemoteApi.getLoggedCustomerData()\n        .then(response => {\n                dispatch(setLoggedCustomerData(response));\n                if (getSalesChannel(getState())===\"WWW\" && isLogged(getState()) && hasLove(getState())) {\n                    if (isOdfPage()) {\n                        dispatch(optionalRedirectToDifferentLP());\n                    } else if (isProductListPage() && getSelectedOfferType(getState()) !== OfferType.VOICE_LDF) {\n                        dispatch(setOfferType(OfferType.VOICE_LDF));\n                    }\n                }\n                if (!response.accountCode && (response.lastName || response.tradingName)) {\n                    dispatch(requestMobileBillingAccountsAndChooseDefault());\n                } else {\n                    dispatch(fetchContractRole());\n                }\n            },\n            error => console.error(\"requestLoggedCustomerDataAndCheckExistence getLoggedCustomerData\", error));\n\n};\n\n\nexport const requestLoggedCustomerData = () => (dispatch, getState) => {\n    console.log(\"requestLoggedCustomerData *************************************************\");\n    RemoteApi.getLoggedCustomerData()\n        .then(response => {\n            dispatch(setLoggedCustomerData(response));\n            if (response.isCartChanged && (getIsCartStep(getState()) || getIsCustomerDataStep(getState()))) {\n                dispatch(setShowSection(ShowSectionName.CART_WAS_CHANGED));\n            } else if (!shouldShowModalAfterProcessChanged(getState()) && !getWwwCimIdBasedOfferSelectorProcesses().includes(getSelectedProcessTypeValue(getState()))) {\n                dispatch({type: ACTIONS.AUTHORIZATION_MODAL_FOR_ACCOUNT_IDENTIFY_OFF});\n            }\n        });\n};\n\n\nexport const selectAccount = (accountId,accountCode) => (dispatch, getState) => {\n    dispatch(setIsLoading(true));\n    RemoteApi.selectAccount({\n        accountId,accountCode,\n    })\n        .then(response => {\n                console.log(response);\n                console.log(\"Account pre set selectAccount\");\n\n                if (isErrorResponse(response)) {\n                    dispatch(accountSelectionErrorHandler(response));\n                    return;\n                }\n\n                if (dispatch(optionalRedirectToDifferentLP())) {\n                    return;\n                }\n\n                dispatch(fetchContractRole());\n                if (getBillingAccountChangeVisibility(getState())) {\n                    console.log(\"Change account executed\");\n                    dispatch({\n                        type: ACTIONS.AUTHORIZATION_CHANGE_ACCOUNT_OFF,\n                    });\n\n                    dispatch(requestLoggedCustomerData());\n                    if (getIsCartStep(getState())) {\n                        dispatch(fetchMiniCart());\n                        dispatch(fetchCart());\n                    }\n                    dispatch(setIsLoading(false));\n                } else {\n                    dispatch(accountIdentifySuccess());\n                }\n            }\n        ).catch(err => {\n            dispatch(accountSelectionErrorHandler(err));\n        }\n    )\n};\n\nconst accountSelectionErrorHandler = err => (dispatch, getState) => {\n    console.warn(\"accountSelectionErrorHandler\");\n\n    dispatch(setIsLoading(false));\n    //dispatch({type: ACTIONS.AUTHORIZATION_CHOOSE_ACCOUNT_OFF});\n\n    if(!getAccountSelectionModalVisibility(getState())) {\n        dispatch({type: ACTIONS.AUTHORIZATION_MODAL_FOR_ACCOUNT_IDENTIFY_OFF});\n        dispatch({type: ACTIONS.AUTHORIZATION_MODAL_FOR_PROCESS_OFF});\n        dispatch({type: ACTIONS.AUTHORIZATION_IS_LOADING_OFF});\n        dispatch(setShowSection(\"\"));\n    }\n    console.error(\"Account NOT Found\", err);\n    dispatch(showError(\"Nie znaleziono konta\"));\n    dispatch(setIsLoading(false));\n    return true;\n\n};\nexport const setCimByMsisdn = msisdn => (dispatch, getState) => {\n    RemoteApi.setCimByMsisdn({msisdn})\n        .then(response => {\n            if(isErrorResponse(response)){\n                console.error(\"CIM not set\", error);\n                dispatch(setIsLoading(false));\n                dispatch(setShowSection(ShowSectionName.MSISDN));\n            }else\n    {\n        dispatch(commonAfterLoginActions(response))\n    }\n        }).catch(error => {\n            console.error(\"CIM not set\", error);\n            dispatch(setIsLoading(false));\n            dispatch(setShowSection(ShowSectionName.MSISDN));\n\n\n        }\n    )\n};\n\nexport const setCimByLogin = login => (dispatch, getState) => {\n    RemoteApi.setCimByLogin({login})\n        .then(response => {\n            dispatch(commonAfterLoginActions(response))\n        }).catch(error => {\n            console.error(\"CIM not set\", error);\n            dispatch(showError(\"Nie udało się ustawić klienta\"));\n        }\n    )\n};\n\nconst commonAfterLoginActions = loginResponse => (dispatch, getState) => {\n    console.log(\"CIM set login response\", loginResponse);\n    if (loginResponse.status == \"PROPOSITION_NO_LONGER_APPLIES\") {\n        window.location.href = OnlineUtils.getLastViewedOfferPage()\n        return true\n    }\n    if (isLandingPage(getState()) || isPreLandingPage(getState())) {\n        console.log(\"LANDINGPAGE\");\n        dispatch(requestFBBServiceData());\n    } else {\n        console.log(\"NOT_LANDINGPAGE\");\n        dispatch(requestFBBServiceDataFilteredByWWT());\n    }\n\n    dispatch({\n        type: CHECKOUT_ACTIONS.SET_FIX_CART_REFRESH_RESULT,\n        data: loginResponse,\n    });\n    dispatch(accountIdentifySuccess());\n};\n\nexport const pushAccount = (msisdn, useExisting) => (dispatch, getState) => {\n    RemoteApi.pushAccount({msisdn, useExisting})\n        .then(response => {\n                console.log(\"Account pre set\", {response});\n                dispatch(accountIdentifySuccess());\n            }\n        ).catch(error => {\n            console.error(\"Account NOT Found\", error);\n            dispatch(showError(\"Nie znaleziono konta\"));\n        }\n    )\n};\nexport const setMsisdn = (msisdn, processType) => (dispatch, getState) => {\n    console.log(\"Try to set msisdn, login or pesel =\" + msisdn + \" \" + processType);\n    dispatch(clearMessage());\n    if (!!msisdn && msisdn.length === 11 && jQuery.isNumeric(msisdn)) {\n        console.log(\"Pesel set in session\");\n        dispatch(setIsLoading(false));\n        return;\n    }\n    dispatch(setIsLoading(true));\n    RemoteApi.setMsisdnOrLogin({msisdn, processType})\n        .then(response => {\n                console.log(response);\n\n                if (!!msisdn && msisdn.length === 9 && jQuery.isNumeric(msisdn)) {\n                    console.log(\"Msisdn set in session\");\n                    PubSub.publish(\n                        \"UXEvent.CAAP.PhoneVerification.Init\",\n                        {\n                            containerId: \"smsVerificationCaapSectionBody\",\n                            pageVariant: \"VERIFICATION_OTP_VARIANT_7_SMS_CODE\",\n                        }\n                    );\n                    console.log(\"Msisdn set in session DONE\");\n                } else {\n                    console.log(\"Login set in session\");\n                    PubSub.publish(\n                        \"UXEvent.CAAP.PortalLoginVerification.Init\",\n                        {\n                            containerId: \"smsVerificationCaapSectionBody\",\n                            pageVariant: \"VERIFICATION_PORTAL_PASSWORD\",\n                        }\n                    );\n                }\n\n                dispatch(setIsLoading(false));\n\n            }\n        ).catch(error => {\n            console.error(\"Cannot set MSISDN or login \", msisdn, error);\n        }\n    )\n};\n\nconst incompatibleMarketActions = createRequestActions(ACTIONS.incompatibleMarketCheck);\nexport const checkMarketCompatibility = msisdn => (dispatch, getState) => {\n    dispatch(incompatibleMarketActions.start());\n    return RemoteApi.checkMarketCompatibility({msisdn})\n        .then(\n            response => {\n                dispatch(incompatibleMarketActions.success(response));\n                console.warn(\"WARN4\", isErrorResponse(response), response);\n                if (isErrorResponse(response)) {\n                    if (response && response.message === \"B2B\") {\n                        dispatch(setIncompatibleMarket(true, \"B2B\"))\n                    } else if (response && response.message === \"B2C\") {\n                        dispatch(setIncompatibleMarket(true, \"B2C\"))\n                    } else {\n                        dispatch(setIncompatibleMarket(true, null))\n                    }\n                    dispatch(setShowSection(ShowSectionName.INCOMPATIBLE_MARKET_MODAL));\n                    dispatch(setIsLoading(false));\n                    console.log(\"INNY RYNEK\");\n                    return false;\n                } else {\n                    dispatch(setIncompatibleMarket(false, null));\n                    console.log(\"RYNEK OK\");\n                    return true;\n                }\n            },\n            error => {\n                console.error(\"checkMarketCompatibility\", error);\n                dispatch(incompatibleMarketActions.error());\n                dispatch(showError(\"Nie można zweryfikować rynku\"));\n            }\n        )\n};\n\nexport const lightLogout = () => (dispatch, getState) => {\n    RemoteApi.lightLogout()\n        .then(response => {\n            console.log(\"Wylogowano\", response);\n        }).catch(error => {\n        console.error(\"lightLogout\", error);\n        dispatch(showError(\"Nie można zweryfikować rynku\"));\n    })\n};\n\nexport const getAccount = (msisdn, push) => (dispatch, getState) => {\n    console.log(\"$$$$$$$$$$$$$$   getAccount   $$$$$$$$$$$$$$$$$$$$ \");\n    dispatch(showMessage(\"Trwa wyszukiwanie konta.\"));\n\n    dispatch(setIsLoading(true));\n    RemoteApi.getAccount({msisdn, push})\n        .then(response => {\n            dispatch(getAccountFromResponse(response,push));\n            }\n        ).catch(error => {\n        dispatch(manageGetAccountError(error));\n\n    })\n\n};\n\nexport const getAccountByCode = (accountCode) => (dispatch, getState) => {\n    console.log(\"$$$$$$$$$$$$$$   getAccountByCode   $$$$$$$$$$$$$$$$$$$$ \");\n    dispatch(showMessage(\"Trwa wyszukiwanie konta.\"));\n\n    dispatch(setIsLoading(true));\n    RemoteApi.getAccountByCode({accountCode})\n        .then(response => {\n                dispatch(getAccountFromResponse(response,false));\n            }\n        ).catch(error => {\n        dispatch(manageGetAccountError(error));\n\n    })\n\n};\n\nexport const getAccountFromResponse = (response,push) =>(dispatch,getState) =>{\n    console.log(\"Konto zostało znalezione:\", response);\n    if (isErrorResponse(response)) {\n        dispatch(manageGetAccountError(response));\n        return;\n    }\n    dispatch(showMessage(\"\"));\n    if (isWwwPrepaidB2b(response, getSalesChannel(getState()), getCartIsNet(getState()))) {\n        dispatch(handleNewPrepaidAccount());\n        return;\n    }\n\n    let doChooseAccount = !push;\n    if (doChooseAccount) {\n        dispatch(setAccountByMsisdn(response));\n        dispatch(showMobileAccountSelection());\n        dispatch(setIsLoading(false))\n\n    } else {\n\n        dispatch(accountIdentifySuccess());\n    }\n}\n\nconst manageGetAccountError = (response) => (dispatch, getState) => {\n    console.warn(\"Account NOT Found\", response);\n    console.warn(\"getAccountSelectionModalVisibility(getState()):\", getAccountSelectionModalVisibility(getState()));\n\n    dispatch(setIsLoading(false));\n\n    dispatch(showResponseError(response));\n\n\n\n}\nconst handleNewPrepaidAccount = () => (dispatch, getState) => {\n    console.log(\"New WWW B2B prepaid account\");\n    dispatch(setIsLoading(false));\n    dispatch(closeAuthModal());\n    console.log(\"Close modal dispatched\");\n    dispatch(requestLoggedCustomerData());\n    if (getIsCartStep(getState())) {\n        dispatch(fetchMiniCart());\n        dispatch(fetchCart());\n    }\n};\n\nexport const pushVerifiedMsisdn = (msisdn, processType, propositionId, nextSection, selectedDeviceId) => (dispatch, getState) => {\n    dispatch(setIsLoading(true));\n    let availableProductsKey = getCurrentSelectedAvailableProductsKey(getState());\n    RemoteApi.pushVerifiedMsisdn({msisdn, processType, availableProductsKey, propositionId, selectedDeviceId})\n\n        .then(function (response) {\n\n                if (isErrorResponse(response)) {\n                    dispatch(showResponseError(response));\n                    return;\n                }\n\n                if (nextSection) {\n                    dispatch(clearMessage());\n                    dispatch(setIsLoading(false));\n                    dispatch(setShowSection(nextSection));\n                } else {\n                    dispatch(setShowSection(\"\"));\n                    dispatch(authorizationSuccess(false, response));\n                }\n            }\n        ).catch(function (err) {\n\n        dispatch(showResponseError(err));\n    })\n    OnlineUtils.removePwaSuflerContextFromSession();\n};\n\nexport const checkOfferSelector = (processType, propositionId, selectedDeviceId) => dispatch => {\n    dispatch(setIsLoading(true));\n    return RemoteApi.checkOfferSelector({processType, propositionId, selectedDeviceId}).then(response => {\n        if (isErrorResponse(response)) {\n            dispatch(showResponseError(response));\n            return Promise.reject(response.message);\n        }\n        return Promise.resolve(response);\n    }).catch(error => {\n        dispatch(showResponseError(error));\n        return Promise.reject(error);\n    });\n};\n\nexport const showResponseError = response => (dispatch, getState) => {\n    dispatch(setIsLoading(false));\n    if (!getAccountSelectionModalVisibility(getState())) {\n        dispatch(setShowSection(ShowSectionName.MSISDN));\n    };\n    if (response.status == 200) {\n        dispatch(showError(response.message));\n    } else if (response.status >= 500) {\n        dispatch(showError(\"Mamy chwilowe trudności techniczne. Spróbuj za jakiś czas.\"));\n\n    } else if (response.status == 404) {\n        dispatch(showError(JSON.parse(response.responseText).message));\n    } else {\n        console.log(response);\n        if (response.responseText)\n            dispatch(showError(JSON.parse(response.responseText).message));\n    }\n};\n\nfunction isErrorResponse(response) {\n    console.log(response);\n    if (response && (response.message || response.originalHttpStatus>200)) {\n        console.log(response.message);\n        return true;\n    }\n    return false;\n}\n\nfunction isWwwPrepaidB2b(response, salesChannel, isB2b) {\n    let isWww = \"WWW\" === salesChannel;\n    let isPrepaid = !!response.prepaid;\n    console.log(\"Is WWW prepaid B2B: \", isPrepaid && isB2b && isWww);\n    return isPrepaid && isB2b && isWww;\n}"],
    "file": "api.js"
}