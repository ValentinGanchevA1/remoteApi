{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/fix/actions/data.js"],
    "names": ["customerServicesListIsLoading", "bool", "type", "ACTIONS", "CUSTOMER_SERVICES_LIST_IS_LOADING", "isLoading", "customerServicesListIsEmpty", "CUSTOMER_SERVICES_LIST_IS_EMPTY", "isEmpty", "getOnlyNeededAddressData", "addressData", "address", "preZipCode", "postalCode", "zip", "cityName", "town", "cityId", "streetName", "line1", "streetId", "streetNumber", "line2", "apartmentNumber", "appartmentNo", "getMigrationMode", "bundleTypes", "dispatch", "RemoteApi", "then", "response", "MIGRATION_MODE", "payload", "getCustomerServiceList", "howManyAddresses", "howManyServicesForChosenAddress", "GET_CUSTOMER_SERVICES_LIST", "length", "responseAddress", "serviceBundles", "redirectOnCustomerSearch", "getState", "PubSub", "subscribe", "EcareEvent", "SEARCH", "sessionStorage", "removeItem", "SESSION", "FIX_SERVICE_DETAILS_BB_ATTR", "cartSummarySearchCustomerIsDone", "NOT_FOUND", "showCustomerSelectedModal", "setTimeout", "window", "location", "href", "OnlineUtils", "getLastViewedOfferPage", "CUSTOMER_SELECTED", "lpSearchCustomerIsDone", "LP_SEARCH_CUSTOMER_DONE", "subscribeSearchCustomer", "reload", "CUSTOMER_SELECTED_DATA", "event", "customerData", "cimId", "customerType", "MarketSegment", "isB2B", "CustomerType", "ORGANIZATION", "SHOW_CUSTOMER_SELECTED_MODAL_ACTION", "closeCustomerSelectedModal", "CLOSE_CUSTOMER_SELECTED_MODAL_ACTION", "closeForceSearchModal", "CLOSE_FORCE_SEARCH_MODAL_ACTION", "showForceSearchModal", "SHOW_FORCE_SEARCH_MODAL_ACTION", "CART_SUMMARY_SEARCH_CUSTOMER_DONE", "resetDuplicateOrder", "DUPLICATE_ORDER_RESET", "checkDuplicateOrderNoCache", "addressObject", "DUPLICATE_ORDER_FETCHING", "getDuplicateOrdersNoCache", "handleDuplicateOrderResponse", "catch", "error", "console", "DUPLICATE_ORDER_FETCHED", "checkDuplicateOrder", "getDuplicateOrders", "duplicateOrderInfo", "requestOrderProcessGroup", "isMigration", "duplicateOrder", "orderNumber", "serviceName", "orderType", "DUPLICATE_ORDER_IS_MODAL_OPENED", "hasOpenOrder", "IS_DUPLICATE_ORDER", "HAS_ACCESS_ROLE_TO_PROCESS_DUPLICATE_ORDER", "hasAccessRoleToProcessDuplicateOrder", "DUPLICATE_ORDER_DETAILS", "IS_MIGRATION", "duplicateOrderModalState", "isModalOpened", "openWwtValidationModal", "state", "message", "WWT_VALIDATION_MODAL_MESSAGE", "WWT_VALIDATION_MODAL", "setSalesChannel", "salesChannel", "SET_SALES_CHANNEL", "createLead"],
    "mappings": "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",
    "sourcesContent": ["import RemoteApi from \"../remoteApi\";\nimport * as ACTIONS from \"../actionTypes\";\nimport {updateAddress} from \"./wwt\";\nimport {removeFromCart} from \"eshop/modules/cart/actions/cart\";\nimport * as SESSION from \"../sessionAttributes\";\nimport {\n    duplicateOrderCalled,\n    getCartSummarySearchCustomerDone,\n    getLPSearchCustomerDone,\n    marketSegment\n} from \"../selectors/root\";\nimport {whenAvailable} from \"eshop/modules/checkout/utils/utils\";\nimport OnlineUtils from \"../../../utils/OnlineUtils\";\nimport MarketSegment from \"../../core/enum/MarketSegment\";\nimport CustomerType from \"../../core/enum/CustomerType\";\nimport EcareEvent from \"../../core/enum/EcareEvent\";\nimport {openErrorModal} from \"./errors\";\n\nexport const  customerServicesListIsLoading = (bool) => ({\n    type: ACTIONS.CUSTOMER_SERVICES_LIST_IS_LOADING,\n    isLoading: bool\n});\n\nexport const  customerServicesListIsEmpty = (bool) => ({\n    type: ACTIONS.CUSTOMER_SERVICES_LIST_IS_EMPTY,\n    isEmpty: bool\n});\n\nexport const getOnlyNeededAddressData = (addressData) => {\n    const address = {};\n    address.preZipCode = addressData.preZipCode;\n    address.postalCode = addressData.postalCode;\n    address.zip =  addressData.preZipCode + addressData.postalCode;\n    address.cityName = addressData.town;\n    address.cityId = addressData.cityId;\n    address.streetName = addressData.line1;\n    address.streetId = addressData.streetId;\n    address.streetNumber = addressData.line2;\n    address.apartmentNumber = addressData.appartmentNo;\n    return address;\n};\n\nexport const getMigrationMode = (bundleTypes) => (dispatch) => {\n    RemoteApi.getMigrationMode(bundleTypes)\n        .then(response => {\n            dispatch({\n                type: ACTIONS.MIGRATION_MODE,\n                payload: response\n            });\n        });\n};\n\nexport const getCustomerServiceList = () => (dispatch) => {\n    dispatch(customerServicesListIsEmpty(false));\n    dispatch(customerServicesListIsLoading(true));\n    RemoteApi.getCustomerServiceList()\n        .then(response => {\n            if (howManyAddresses(response) === 0) {\n                dispatch(customerServicesListIsEmpty(true));\n            } else if (howManyAddresses(response) === 1\n                && howManyServicesForChosenAddress(response[0]) === 0) {\n                dispatch(customerServicesListIsEmpty(true));\n                dispatch(updateAddress(getOnlyNeededAddressData(response[0].addressData)));\n            }\n            dispatch({\n                type: ACTIONS.GET_CUSTOMER_SERVICES_LIST,\n                payload: response\n            });\n            dispatch(customerServicesListIsLoading(false));\n        });\n};\n\nfunction howManyAddresses(response) {\n    return response.length;\n}\n\nfunction howManyServicesForChosenAddress(responseAddress) {\n    return responseAddress.serviceBundles.length;\n}\n\nexport const redirectOnCustomerSearch = () => (dispatch, getState) => {\n    whenAvailable(\"PubSub\",() => {\n        PubSub.subscribe(EcareEvent.SEARCH, function(){\n            sessionStorage.removeItem(SESSION.FIX_SERVICE_DETAILS_BB_ATTR);\n            dispatch(cartSummarySearchCustomerIsDone());\n        });\n        PubSub.subscribe(EcareEvent.NOT_FOUND, function(){\n            if(getCartSummarySearchCustomerDone(getState())) {\n                sessionStorage.removeItem(SESSION.FIX_SERVICE_DETAILS_BB_ATTR);\n                dispatch(showCustomerSelectedModal());\n                setTimeout(function () {\n                    window.location.href = OnlineUtils.getLastViewedOfferPage();\n                }, 3000);\n            }\n        });\n        PubSub.subscribe(EcareEvent.CUSTOMER_SELECTED, function(){\n            if(getCartSummarySearchCustomerDone(getState())) {\n                dispatch(showCustomerSelectedModal());\n                setTimeout(function () {\n                    window.location.href = OnlineUtils.getLastViewedOfferPage();\n                }, 3000);\n            }\n        });\n    });\n};\n\nexport const lpSearchCustomerIsDone = (payload) => (dispatch) => {\n    dispatch( {\n        type: ACTIONS.LP_SEARCH_CUSTOMER_DONE,\n        payload\n    });\n};\n\nexport const subscribeSearchCustomer = () => (dispatch, getState) => {\n    whenAvailable(\"PubSub\",() => {\n            PubSub.subscribe(EcareEvent.SEARCH, () => {\n                sessionStorage.removeItem(SESSION.FIX_SERVICE_DETAILS_BB_ATTR);\n                dispatch(lpSearchCustomerIsDone(true));\n            });\n            PubSub.subscribe(EcareEvent.NOT_FOUND, () => {\n                if (getLPSearchCustomerDone(getState())) {\n                    dispatch(lpSearchCustomerIsDone(false));\n                    location.reload(true);\n                }\n            });\n            PubSub.subscribe(EcareEvent.CUSTOMER_SELECTED_DATA, (event, customerData) => {\n                const {cimId, customerType} = customerData;\n                if (MarketSegment.isB2B(marketSegment(getState())) ^ customerType === CustomerType.ORGANIZATION) {\n                    dispatch(openErrorModal(\"Error1000\"));\n                    return;\n                }\n                if (getLPSearchCustomerDone(getState())) {\n                    dispatch(lpSearchCustomerIsDone(false));\n                    location.reload(true);\n                }\n            });\n        },\n        dispatch);\n};\n\nexport const showCustomerSelectedModal = () => (dispatch) =>  {\n    dispatch( {\n        type: ACTIONS.SHOW_CUSTOMER_SELECTED_MODAL_ACTION\n    });\n};\n\nexport const closeCustomerSelectedModal = () => (dispatch) =>  {\n    dispatch( {\n        type: ACTIONS.CLOSE_CUSTOMER_SELECTED_MODAL_ACTION\n    });\n};\n\n\nexport const closeForceSearchModal = () => (dispatch) =>  {\n    dispatch( {\n        type: ACTIONS.CLOSE_FORCE_SEARCH_MODAL_ACTION\n    });\n};\n\nexport const showForceSearchModal = () => (dispatch) => {\n    dispatch( {\n        type: ACTIONS.SHOW_FORCE_SEARCH_MODAL_ACTION\n    });\n};\n\nexport const cartSummarySearchCustomerIsDone = () => (dispatch) => {\n    dispatch( {\n        type: ACTIONS.CART_SUMMARY_SEARCH_CUSTOMER_DONE\n    });\n};\n\nexport const resetDuplicateOrder = () => (dispatch) => {\n    dispatch({\n        type: ACTIONS.DUPLICATE_ORDER_RESET\n    });\n};\n\nexport const checkDuplicateOrderNoCache = (addressObject) => (dispatch, getState) => {\n\n    dispatch({\n        type: ACTIONS.DUPLICATE_ORDER_FETCHING\n    });\n\n    RemoteApi.getDuplicateOrdersNoCache(addressObject)\n        .then(response => dispatch(handleDuplicateOrderResponse(response)))\n        .catch(error => {\n            console.error(\"error in duplicate order component\", error);\n            dispatch({\n                type: ACTIONS.DUPLICATE_ORDER_FETCHED\n            });\n        });\n};\n\nexport const checkDuplicateOrder = (addressObject) => (dispatch, getState) => {\n\n    dispatch({\n        type: ACTIONS.DUPLICATE_ORDER_FETCHING\n    });\n\n    RemoteApi.getDuplicateOrders(addressObject)\n        .then(response => dispatch(handleDuplicateOrderResponse(response)))\n        .catch(error => {\n            console.error(\"error in duplicate order component\", error);\n            dispatch({\n                type: ACTIONS.DUPLICATE_ORDER_FETCHED\n            });\n        });\n};\n\nconst handleDuplicateOrderResponse = (response) => (dispatch, getState) => {\n    if (response != null && response.duplicateOrderInfo != null && response.requestOrderProcessGroup) {\n\n        //isMigration\n        let isMigration = (response.requestOrderProcessGroup === \"MIGRATION_GROUP\") || (response.requestOrderProcessGroup === \"ASSIGNMENT_GROUP\");\n\n        //orderDetails\n        let duplicateOrder = {\n            orderNumber: response.duplicateOrderInfo.orderNumber,\n            serviceName: response.duplicateOrderInfo.orderType\n        };\n\n        setTimeout(function () {\n\n            dispatch({\n                type: ACTIONS.DUPLICATE_ORDER_IS_MODAL_OPENED,\n                payload: response.hasOpenOrder\n            });\n\n        }, 500);\n\n        dispatch({\n            type: ACTIONS.IS_DUPLICATE_ORDER,\n            payload: response.hasOpenOrder\n        });\n\n        dispatch({\n            type: ACTIONS.HAS_ACCESS_ROLE_TO_PROCESS_DUPLICATE_ORDER,\n            payload: response.hasAccessRoleToProcessDuplicateOrder\n        });\n\n        dispatch({\n            type: ACTIONS.DUPLICATE_ORDER_DETAILS,\n            payload: duplicateOrder\n        });\n\n        dispatch({\n            type: ACTIONS.IS_MIGRATION,\n            payload: isMigration\n        });\n\n    } else {\n        dispatch({\n            type: ACTIONS.IS_DUPLICATE_ORDER,\n            payload: false\n        });\n    }\n\n    dispatch({\n        type: ACTIONS.DUPLICATE_ORDER_FETCHED\n    });\n};\n\nexport const duplicateOrderModalState = (isModalOpened) => (dispatch) =>{\n\n    dispatch({\n        type: ACTIONS.DUPLICATE_ORDER_IS_MODAL_OPENED,\n        payload: isModalOpened\n    });\n\n}\n\nexport const openWwtValidationModal = (state, message) => (dispatch) =>{\n\n    dispatch({\n        type: ACTIONS.WWT_VALIDATION_MODAL_MESSAGE,\n        payload: message\n    });\n\n    dispatch({\n        type: ACTIONS.WWT_VALIDATION_MODAL,\n        payload: state\n    });\n\n}\n\nexport const setSalesChannel = (salesChannel) => (dispatch) => {\n    dispatch({\n        type: ACTIONS.SET_SALES_CHANNEL,\n        payload: salesChannel\n    })\n}\n\nexport const createLead = () => () => {\n    window.location = '/deklaracja';\n};\n\n"],
    "file": "data.js"
}