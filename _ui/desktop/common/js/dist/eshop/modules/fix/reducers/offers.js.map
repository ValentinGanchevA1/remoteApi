{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/fix/reducers/offers.js"],
    "names": ["emptyOfferData", "offers", "showAlertPopup", "offerNumber", "data", "action", "type", "ACTIONS", "FETCH_OFFERS", "payload", "ftthAvailabilityDate", "errorMessage", "map", "receivedOffer", "tieredPrices", "tieredPriceList", "tieredPrice", "finalPrice", "finalNetPrice", "startCycle", "endCycle", "hasTV", "tvPackages", "length", "offerId", "broadband", "bundleId", "minimumLinkPrice", "minLinkPrice", "availableAsSecondaryChoiceOffer", "modalIsOpen", "totalPrice", "formattedValue", "devices", "activationPrice", "downgradePenalty", "voip", "tvProduct", "feeAddons", "vasPackagesB2BProduct", "loyaltyOptions", "loyalty", "value", "description", "technologies", "pots", "productListDescription", "paragraphs", "SHOW_MODAL_ACTION", "newOffers", "item", "i", "modalId", "modals", "CLOSE_TV_MODAL", "selectedOfferId", "SAVE_SELECTED_OFFER_ID", "showCartNotEmptyModal", "state", "SHOW_CART_NOT_EMPTY_MODAL", "bundleNosOnCart", "SAVE_BUNDLE_NOS", "migrationVariants", "MIGRATION_VARIANTS_FETCHED", "migrationVariantsFetched", "migrationVariantsFetching", "MIGRATION_VARIANTS_FETCHING", "isLP", "IS_LP", "secondaryChoiceOffer", "SHOW_BASE_OFFER", "SELECT_LOYALTY", "MAGNUM_ACTIONS", "SET_LOYALTY_PERIOD", "SET_FIX_BROADBAND_TRANSACTION", "SET_FIX_VOIP_TRANSACTION", "SET_MOBILE_TRANSACTION", "SHOW_SECONDARY_CHOICE_OFFER"],
    "mappings": "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",
    "sourcesContent": ["import * as ACTIONS from '../actionTypes';\n\nimport * as MAGNUM_ACTIONS from '../../magnum2/actionTypes';\nimport TvPackagesChoiceFilter from '../enum/TvPackagesChoiceFilter';\n\nconst emptyOfferData = {offers: [], showAlertPopup: false, offerNumber: 0};\n\nexport const data = (data = emptyOfferData, action) => {\n    switch (action.type) {\n        case ACTIONS.FETCH_OFFERS: {\n            if (!action.payload.offers) {\n                return {\n                    ...emptyOfferData,\n                    ftthAvailabilityDate: action.payload.ftthAvailabilityDate,\n                    errorMessage: action.payload.errorMessage,\n                };\n            }\n            const offers = action.payload.offers.map((receivedOffer) => {\n\n                const tieredPrices = receivedOffer.tieredPriceList.map((tieredPrice) => {\n                    return {\n                        finalPrice: tieredPrice.finalPrice,\n                        finalNetPrice: tieredPrice.finalNetPrice,\n                        startCycle: tieredPrice.startCycle,\n                        endCycle: tieredPrice.endCycle\n                    };\n                });\n\n                const hasTV = receivedOffer.tvPackages && receivedOffer.tvPackages.length > 0;\n\n                const offerId = receivedOffer.broadband.bundleId;\n\n                const minimumLinkPrice = receivedOffer.minLinkPrice;\n\n                return {\n                    offerId,\n                    tieredPrices,\n                    hasTV,\n                    minimumLinkPrice,\n                    availableAsSecondaryChoiceOffer: receivedOffer.availableAsSecondaryChoiceOffer,\n                    modalIsOpen: false,\n                    totalPrice: receivedOffer.totalPrice.formattedValue,\n                    devices: receivedOffer.devices,\n                    activationPrice: receivedOffer.activationPrice,\n                    downgradePenalty: receivedOffer.downgradePenalty,\n                    broadband: receivedOffer.broadband,\n                    voip: receivedOffer.voip,\n                    tvProduct: receivedOffer.tvProduct,\n                    tvPackages: receivedOffer.tvPackages,\n                    feeAddons: receivedOffer.feeAddons,\n                    vasPackagesB2BProduct: receivedOffer.vasPackagesB2BProduct\n                };\n            });\n\n            const loyaltyOptions = action.payload.loyalty && action.payload.loyalty.map((value) => {\n                return {\n                    value: value,\n                    description: \"loyalty\" + value\n                };\n            });\n\n            return {\n                offers,\n                loyaltyOptions,\n                technologies: action.payload.technologies,\n                ftthAvailabilityDate: action.payload.ftthAvailabilityDate,\n                pots: action.payload.pots,\n                productListDescription: action.payload.productListDescription,\n                paragraphs: action.payload.paragraphs\n            };\n        }\n        case ACTIONS.SHOW_MODAL_ACTION: {\n            const newOffers = data.offers.map(function (item, i) {\n                if (i === action.payload.modalId) {\n                    return {...item, modalIsOpen: true};\n                } else {\n                    return {...item};\n                }\n            });\n\n            return {\n                ...data,\n                offers: newOffers,\n                modals: action.payload.modals,\n                offerNumber: action.payload.modalId\n            };\n        }\n        case ACTIONS.CLOSE_TV_MODAL: {\n            const newOffers = data.offers.map(function (item, i) {\n                if (i === action.payload.modalId) {\n                    return {...item, modalIsOpen: false};\n                } else {\n                    return {...item};\n                }\n            });\n\n            return {\n                ...data,\n                offers: newOffers,\n                modals: action.payload.modals,\n                offerNumber: action.payload.modalId,\n                showAlertPopup: false\n            };\n        }\n        default:\n            return data;\n    }\n};\n\nexport const selectedOfferId = (selectedOfferId = null, action) => {\n    switch(action.type) {\n        case ACTIONS.SAVE_SELECTED_OFFER_ID:\n            return action.payload\n\n        default:\n            return selectedOfferId;\n    }\n}\n\nexport const showCartNotEmptyModal = (state = false, action) => {\n    switch (action.type) {\n        case ACTIONS.SHOW_CART_NOT_EMPTY_MODAL:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport const bundleNosOnCart = (state=[], action) => {\n    switch(action.type) {\n        case ACTIONS.SAVE_BUNDLE_NOS:\n            return action.data;\n        default:\n            return state;\n    }\n}\n\nexport const migrationVariants = (migrationVariants = {}, action) => {\n    switch(action.type) {\n        case ACTIONS.MIGRATION_VARIANTS_FETCHED:\n            return action.payload || {};\n        default:\n            return migrationVariants;\n    }\n};\nexport const migrationVariantsFetched = (migrationVariantsFetched = false, action) => {\n    switch(action.type) {\n        case ACTIONS.MIGRATION_VARIANTS_FETCHED:\n            return true;\n        default:\n            return migrationVariantsFetched;\n    }\n};\n\nexport const migrationVariantsFetching = (migrationVariantsFetching = false, action) => {\n    switch(action.type) {\n        case ACTIONS.MIGRATION_VARIANTS_FETCHING:\n            return true;\n        case ACTIONS.MIGRATION_VARIANTS_FETCHED:\n            return false;\n        default:\n            return migrationVariantsFetching;\n    }\n};\n\nexport const isLP = (isLP = false, action) => {\n    switch(action.type) {\n        case ACTIONS.IS_LP:\n            return action.payload;\n        default:\n            return isLP;\n    }\n};\n\nexport const secondaryChoiceOffer = (secondaryChoiceOffer = false, action) => {\n    switch(action.type) {\n        case ACTIONS.SHOW_BASE_OFFER:\n        case ACTIONS.SELECT_LOYALTY:\n        case MAGNUM_ACTIONS.SET_LOYALTY_PERIOD:\n        case MAGNUM_ACTIONS.SET_FIX_BROADBAND_TRANSACTION:\n        case MAGNUM_ACTIONS.SET_FIX_VOIP_TRANSACTION:\n        case MAGNUM_ACTIONS.SET_MOBILE_TRANSACTION:\n            return false;\n        case ACTIONS.SHOW_SECONDARY_CHOICE_OFFER:\n            return true;\n        default:\n            return secondaryChoiceOffer;\n    }\n};\n\n"],
    "file": "offers.js"
}