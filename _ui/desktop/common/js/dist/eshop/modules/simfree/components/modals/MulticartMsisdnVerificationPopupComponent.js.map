{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/simfree/components/modals/MulticartMsisdnVerificationPopupComponent.jsx"],
    "names": ["MulticartMsisdnVerificationPopupComponent", "props", "state", "msisdn", "valid", "handleMsisdnChange", "bind", "validate", "handleKeyPress", "reset", "verificationNeeded", "event", "setState", "target", "value", "changeMsisdnInput", "msisdnInput", "key", "validMsisdnPatternRE", "RegExp", "descriptions", "regexpForNumberValidation", "msisdnWithoutSpace", "replace", "test", "checkMsisdnAndGetOffersAndAddToCart", "clearCheckMsisdn", "console", "log", "closeModal", "isEmpty", "checkMsisdnResult", "inputFieldDesc", "invalidNumberDesc", "isMsisdnChecking", "isCustomerSelected", "isPositive", "description", "openModal", "onCloseModal", "getModalContent", "obj", "length", "hasOwnProperty", "call", "Component", "mapStateToProps", "mapDispatchToProps", "dispatch", "doCloseVerificationModal"],
    "mappings": ";;;;;;;AACA;AACA;AAEA;AACA;;;;;;MASMA,yC;;;;;AAEF,uDAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACf,gCAAMA,KAAN;AACA,YAAKC,KAAL,GAAa;AACVC,QAAAA,MAAM,EAAE,EADE;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAAb;AAIA,YAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,2CAA1B;AACA,YAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,2CAAhB;AACA,YAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,2CAAtB;AACA,YAAKG,KAAL,GAAa,MAAKA,KAAL,CAAWH,IAAX,2CAAb;AATe;AAUlB;;;;2CAEoB;AACjB,aAAKL,KAAL,CAAWS,kBAAX;AACH;;;yCAGkBC,K,EAAO;AACtB,aAAKC,QAAL,CAAc;AAACT,UAAAA,MAAM,EAAEQ,KAAK,CAACE,MAAN,CAAaC;AAAtB,SAAd;AACA,aAAKb,KAAL,CAAWc,iBAAX,CAA6BJ,KAAK,CAACE,MAAN,CAAaC,KAA1C,EAAiD,KAAKb,KAAL,CAAWe,WAAX,CAAuBZ,KAAxE;AACH;;;qCAEcS,M,EAAQ;AACnB,YAAGA,MAAM,CAACI,GAAP,KAAe,OAAlB,EAA0B;AACvB,eAAKV,QAAL;AACF;AACJ;;;iCAEU;AACP,YAAG,KAAKL,KAAL,CAAWC,MAAX,IAAqB,WAArB,IAAoC,CAAC,KAAKD,KAAL,CAAWC,MAAnD,EAA2D;AACxD,eAAKS,QAAL,CAAc;AAACR,YAAAA,KAAK,EAAE;AAAR,WAAd;AACA;AACF;;AACD,YAAIc,oBAAoB,GAAG,IAAIC,MAAJ,CAAW,KAAKlB,KAAL,CAAWmB,YAAX,CAAwBC,yBAAnC,CAA3B;AACA,YAAIC,kBAAkB,GAAG,KAAKpB,KAAL,CAAWC,MAAX,CAAkBoB,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,CAAzB;;AACA,YAAGL,oBAAoB,CAACM,IAArB,CAA0BF,kBAA1B,CAAH,EAAkD;AAC/C,eAAKV,QAAL,CAAc;AAACR,YAAAA,KAAK,EAAE;AAAR,WAAd;AACA,eAAKH,KAAL,CAAWwB,mCAAX,CAA+CH,kBAA/C;AACF,SAHD,MAGO;AACJ,eAAKV,QAAL,CAAc;AAACR,YAAAA,KAAK,EAAE;AAAR,WAAd;AACF;AACJ;;;8BAEO;AACJ,aAAKQ,QAAL,CAAc;AAACR,UAAAA,KAAK,EAAE;AAAR,SAAd;AACA,aAAKH,KAAL,CAAWyB,gBAAX;AACH;;;qCAEc;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,aAAK3B,KAAL,CAAW4B,UAAX;AACA,aAAKpB,KAAL;AACH;;;wCAEiB;AACd,4BACA,0CACS,KAAKqB,OAAL,CAAa,KAAK7B,KAAL,CAAW8B,iBAAxB,iBACM,6BAAC,oCAAD;AACI,UAAA,cAAc,EAAE,KAAK9B,KAAL,CAAWmB,YAAX,CAAwBY,cAD5C;AAEI,UAAA,iBAAiB,EAAE,KAAK/B,KAAL,CAAWmB,YAAX,CAAwBa,iBAF/C;AAGI,UAAA,MAAM,EAAE,KAAKhC,KAAL,CAAWe,WAAX,CAAuBb,MAHnC;AAII,UAAA,kBAAkB,EAAE,KAAKE,kBAJ7B;AAKI,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,KALtB;AAMI,UAAA,cAAc,EAAE,KAAKI,cANzB;AAOI,UAAA,QAAQ,EAAE,KAAKD,QAPnB;AAQI,UAAA,gBAAgB,EAAE,KAAKN,KAAL,CAAWiC,gBARjC;AASI,UAAA,kBAAkB,EAAE,KAAKjC,KAAL,CAAWkC;AATnC,UADN,GAYQ,EAbjB,EAgBa,CAAC,KAAKL,OAAL,CAAa,KAAK7B,KAAL,CAAW8B,iBAAxB,CAAD,IAA+C,KAAK9B,KAAL,CAAW8B,iBAAX,CAA6BK,UAA7B,KAA4C,KAA5F,gBACE,6BAAC,4CAAD;AACI,UAAA,WAAW,EAAE,KAAKnC,KAAL,CAAW8B,iBAAX,CAA6BM,WAD9C;AAEI,UAAA,KAAK,EAAE,KAAK5B;AAFhB,UADF,GAKI,EArBhB,CADA;AA0BH;;;+BAEQ;AACL,4BACI;AAAK,UAAA,EAAE,EAAC;AAAR,wBACI,6BAAC,cAAD;AAAU,UAAA,EAAE,EAAE,oBAAd;AAAoC,UAAA,SAAS,EAAE,IAA/C;AAAqD,UAAA,IAAI,EAAE,KAAKR,KAAL,CAAWqC,SAAtE;AAAiF,UAAA,OAAO,EAAE,KAAKC,YAAL,CAAkBjC,IAAlB,CAAuB,IAAvB,CAA1F;AAAwH,UAAA,IAAI,EAAC,QAA7H;AAAsI,UAAA,UAAU,EAAE,KAAlJ;AAAyJ,UAAA,WAAW,EAAE;AAAtK,WACG,KAAKkC,eAAL,EADH,CADJ,CADJ;AAOH;;;8BAEOC,G,EAAK;AACT,YAAIA,GAAG,IAAI,IAAX,EAAiB,OAAO,IAAP;AACjB,YAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAuB,OAAO,KAAP;AACvB,YAAID,GAAG,CAACC,MAAJ,KAAe,CAAnB,EAAuB,OAAO,IAAP;AACvB,YAAI,oBAAOD,GAAP,MAAe,QAAnB,EAA6B,OAAO,IAAP;;AAC7B,aAAK,IAAIxB,GAAT,IAAgBwB,GAAhB,EAAqB;AACjB,cAAIE,cAAc,CAACC,IAAf,CAAoBH,GAApB,EAAyBxB,GAAzB,CAAJ,EAAmC,OAAO,KAAP;AACtC;;AACD,eAAO,IAAP;AACH;;;IAxGmD4B,gB;;AA2GxD,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAA5C,KAAK;AAAA,WAAK;AAC9B6B,MAAAA,iBAAiB,EAAE,mCAAqB7B,KAArB,CADW;AAE9BoC,MAAAA,SAAS,EAAE,yCAAyBpC,KAAzB,CAFmB;AAG9BgC,MAAAA,gBAAgB,EAAE,kCAAoBhC,KAApB,CAHY;AAI9Bc,MAAAA,WAAW,EAAE,6BAAed,KAAf,CAJiB;AAK9BiC,MAAAA,kBAAkB,EAAC,kCAAmBjC,KAAnB;AALW,KAAL;AAAA,GAA7B;;AAQA,MAAM6C,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,WAAI;AACnCtB,MAAAA,gBAAgB,EAAE;AAAA,eAAMsB,QAAQ,CAAC,iCAAD,CAAd;AAAA,OADiB;AAEnCvB,MAAAA,mCAAmC,EAAE,6CAACtB,MAAD;AAAA,eAAY6C,QAAQ,CAAC,iDAAoC7C,MAApC,CAAD,CAApB;AAAA,OAFF;AAGnCO,MAAAA,kBAAkB,EAAE;AAAA,eAAMsC,QAAQ,CAACtC,0BAAD,CAAd;AAAA,OAHe;AAInCmB,MAAAA,UAAU,EAAE;AAAA,eAAMmB,QAAQ,CAACC,gCAAD,CAAd;AAAA,OAJuB;AAKnClC,MAAAA,iBAAiB,EAAE,2BAACZ,MAAD,EAAQC,KAAR;AAAA,eAAkB4C,QAAQ,CAAC,iCAAkB7C,MAAlB,EAAyBC,KAAzB,CAAD,CAA1B;AAAA;AALgB,KAAJ;AAAA,GAAnC;;iBAQe,yBAAQ0C,eAAR,EAAyBC,kBAAzB,EAA6C/C,yCAA7C,C",
    "sourcesContent": ["import {connect} from \"react-redux\";\nimport React, {Component} from \"react\";\nimport OraModal from \"eshop/modules/core/components/ui/Modal\";\nimport {OraLoader} from \"eshop/components/OraCommonComponents\";\nimport MsisdnVerificationComponent from \"eshop/modules/configurator/components/MsisdnVerificationComponent\";\nimport MsisdnNegativeVerificationComponent from \"eshop/modules/configurator/components/MsisdnNegativeVerificationComponent\";\n\nimport {verificationNeeded, doCloseVerificationModal} from \"eshop/modules/simfree/actions/filter\";\nimport {getCheckMsisdnResult, getIsMsisdnChecking, getMsisdnInput} from \"eshop/modules/configurator/selectors/filters\";\nimport {clearCheckMsisdn, changeMsisdnInput} from \"eshop/modules/configurator/actions/filters\";\nimport {checkMsisdnAndGetOffersAndAddToCart} from \"eshop/modules/simfree/actions/filter\";\nimport {getOpenVerificationModal, getShowVerifiaction} from \"eshop/modules/simfree/selectors\";\nimport {isCustomerSelected} from \"../../../configurator/selectors/metaData\";\n\nclass MulticartMsisdnVerificationPopupComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           msisdn: \"\",\n           valid: true\n        };\n        this.handleMsisdnChange = this.handleMsisdnChange.bind(this);\n        this.validate = this.validate.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.reset = this.reset.bind(this);\n    }\n\n    componentWillMount() {\n        this.props.verificationNeeded();\n    }\n\n\n    handleMsisdnChange(event) {\n        this.setState({msisdn: event.target.value});\n        this.props.changeMsisdnInput(event.target.value, this.props.msisdnInput.valid);\n    }\n\n    handleKeyPress(target) {\n        if(target.key === 'Enter'){\n           this.validate();\n        }\n    }\n\n    validate() {\n        if(this.state.msisdn == \"undefined\" || !this.state.msisdn) {\n           this.setState({valid: false});\n           return;\n        }\n        var validMsisdnPatternRE = new RegExp(this.props.descriptions.regexpForNumberValidation);\n        var msisdnWithoutSpace = this.state.msisdn.replace(/\\s/g, \"\");\n        if(validMsisdnPatternRE.test(msisdnWithoutSpace)) {\n           this.setState({valid: true});\n           this.props.checkMsisdnAndGetOffersAndAddToCart(msisdnWithoutSpace);\n        } else {\n           this.setState({valid: false});\n        }\n    }\n\n    reset() {\n        this.setState({valid: true});\n        this.props.clearCheckMsisdn();\n    }\n\n    onCloseModal() {\n        console.log('Close modal!!!');\n        this.props.closeModal();\n        this.reset();\n    }\n\n    getModalContent() {\n        return (\n        <div>\n                {this.isEmpty(this.props.checkMsisdnResult) ?\n                       <MsisdnVerificationComponent\n                           inputFieldDesc={this.props.descriptions.inputFieldDesc}\n                           invalidNumberDesc={this.props.descriptions.invalidNumberDesc}\n                           msisdn={this.props.msisdnInput.msisdn}\n                           handleMsisdnChange={this.handleMsisdnChange}\n                           valid={this.state.valid}\n                           handleKeyPress={this.handleKeyPress}\n                           validate={this.validate}\n                           isMsisdnChecking={this.props.isMsisdnChecking}\n                           isCustomerSelected={this.props.isCustomerSelected}\n                           />\n                       : \"\"\n                   }\n\n                   {(!this.isEmpty(this.props.checkMsisdnResult) && this.props.checkMsisdnResult.isPositive === false) ?\n                      <MsisdnNegativeVerificationComponent\n                          description={this.props.checkMsisdnResult.description}\n                          reset={this.reset}\n                          />\n                      : \"\"\n                  }\n        </div>\n        );\n    }\n\n    render() {\n        return (\n            <div id=\"verificationModalWrapper\">\n                <OraModal id={\"verification-modal\"} showClose={true} open={this.props.openModal} onClose={this.onCloseModal.bind(this)} size=\"medium\" clickClose={false} escapeClose={false}>\n                  {this.getModalContent()}\n                </OraModal>\n            </div>\n        )\n    }\n\n    isEmpty(obj) {\n        if (obj == null) return true;\n        if (obj.length > 0)    return false;\n        if (obj.length === 0)  return true;\n        if (typeof obj !== \"object\") return true;\n        for (var key in obj) {\n            if (hasOwnProperty.call(obj, key)) return false;\n        }\n        return true;\n    }\n}\n\nconst mapStateToProps = state => ({\n    checkMsisdnResult: getCheckMsisdnResult(state),\n    openModal: getOpenVerificationModal(state),\n    isMsisdnChecking: getIsMsisdnChecking(state),\n    msisdnInput: getMsisdnInput(state),\n    isCustomerSelected:isCustomerSelected(state),\n});\n\nconst mapDispatchToProps = dispatch=> ({\n    clearCheckMsisdn: () => dispatch(clearCheckMsisdn()),\n    checkMsisdnAndGetOffersAndAddToCart: (msisdn) => dispatch(checkMsisdnAndGetOffersAndAddToCart(msisdn)),\n    verificationNeeded: () => dispatch(verificationNeeded),\n    closeModal: () => dispatch(doCloseVerificationModal),\n    changeMsisdnInput: (msisdn,valid) => dispatch(changeMsisdnInput(msisdn,valid))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MulticartMsisdnVerificationPopupComponent)"],
    "file": "MulticartMsisdnVerificationPopupComponent.js"
}