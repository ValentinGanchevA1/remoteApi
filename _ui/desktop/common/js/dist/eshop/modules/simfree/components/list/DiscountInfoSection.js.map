{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/simfree/components/list/DiscountInfoSection.jsx"],
    "names": ["DiscountInfoSection", "props", "isB2B", "description", "getDescription", "content", "offerType", "toHTML", "fieldName", "Object", "keys", "find", "indexOf", "value", "__html", "Component", "propTypes", "PropTypes", "string", "object", "mapStateToProps", "state"],
    "mappings": ";;;;;;;AAAA;AAEA;;;;;;MAIMA,mB;;;;;;;;;;;;+BAEM;AACJ,YAAG,KAAKC,KAAL,CAAWC,KAAd,EACI,OAAQ,IAAR;AACJ,YAAIC,WAAW,GAAG,KAAKC,cAAL,CAAoB,KAAKH,KAAL,CAAWI,OAA/B,EAAuC,KAAKJ,KAAL,CAAWK,SAAlD,CAAlB;;AACA,YAAGH,WAAW,IAAI,CAAC,KAAKF,KAAL,CAAWC,KAA9B,EAAoC;AAChC,8BACK;AAAK,YAAA,SAAS,EAAC;AAAf,0BACG;AAAK,YAAA,SAAS,EAAC;AAAf,0BACI;AAAK,YAAA,uBAAuB,EAAE,KAAKK,MAAL,CAAYJ,WAAZ;AAA9B,YADJ,CADH,CADL;AAOH,SARD,MAQO;AACH,iBAAO,IAAP;AACH;AACJ;;;qCAEcE,O,EAAQC,S,EAAU;AAC7B,YAAIE,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYL,OAAZ,EAAqBM,IAArB,CAA0B,UAACH,SAAD;AAAA,iBAAeA,SAAS,CAACI,OAAV,CAAkBN,SAAlB,MAAiC,CAAC,CAAjD;AAAA,SAA1B,CAAhB;AACA,eAAOD,OAAO,CAACG,SAAD,CAAd;AACH;;;6BAEMK,K,EAAO;AACV,eAAO;AAACC,UAAAA,MAAM,EAAED;AAAT,SAAP;AACH;;;IA1B6BE,gB;;AA6BlCf,EAAAA,mBAAmB,CAACgB,SAApB,GAAgC;AAC5BV,IAAAA,SAAS,EAAEW,mBAAUC,MADO;AAE5Bb,IAAAA,OAAO,EAAEY,mBAAUE;AAFS,GAAhC;;AAKA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC9Bf,MAAAA,SAAS,EAAE,mCAAqBe,KAArB,CADmB;AAE9BnB,MAAAA,KAAK,EAAE,+BAAiBmB,KAAjB,MAA0B,KAA1B,GAAgC,IAAhC,GAAqC;AAFd,KAAL;AAAA,GAA7B;;iBAKerB,mBAAmB,GAAG,yBAAQoB,eAAR,EAAyB,IAAzB,EAA+BpB,mBAA/B,C",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getSelectedOfferType} from \"eshop/modules/configurator/selectors/filters\"\nimport { getMarketContext } from \"eshop/modules/configurator/selectors/filters\"\n\nclass DiscountInfoSection extends Component {\n\n    render(){\n        if(this.props.isB2B)\n            return (null)\n        let description = this.getDescription(this.props.content,this.props.offerType);\n        if(description && !this.props.isB2B){\n            return (\n                 <div className=\"l-row\">\n                    <div className=\"l-col l-col-small-12 u-spacing-top-l u-spacing-l\">\n                        <div dangerouslySetInnerHTML={this.toHTML(description)}/>\n                    </div>\n                 </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    getDescription(content,offerType){\n        let fieldName = Object.keys(content).find((fieldName) => fieldName.indexOf(offerType) !== -1);\n        return content[fieldName];\n    }\n\n    toHTML(value) {\n        return {__html: value};\n    }\n}\n\nDiscountInfoSection.propTypes = {\n    offerType: PropTypes.string,\n    content: PropTypes.object\n}\n\nconst mapStateToProps = state => ({\n    offerType: getSelectedOfferType(state),\n    isB2B: getMarketContext(state)==='B2B'?true:false\n});\n\nexport default DiscountInfoSection = connect(mapStateToProps, null)(DiscountInfoSection);\n\n"],
    "file": "DiscountInfoSection.js"
}