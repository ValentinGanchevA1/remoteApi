{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/simfree/components/OraProductBreadcrumbsComponent.jsx"],
    "names": ["OraProductBreadcrumbsComponent", "props", "clearSelectedFilters", "changeCategory", "code", "name", "changePriceFilter", "clearMonthlyPrices", "clearOneTimePrices", "setSelectedProducer", "clearAttrFilters", "clearMatchToFilters", "number", "breadcrumb", "url", "window", "location", "origin", "list", "buildBreadcrumbJson", "length", "undefined", "map", "elem", "index", "renderElement", "isB2B", "b2bBreadcrumb", "b2cBreadcrumb", "shopElem", "createShopElement", "push", "selectedProductListHeader", "toLowerCase", "Component", "mapStateToProps", "state", "selectedOfferType", "selectedProducer", "selectedCategoryName", "selectedCategory", "mapDispatchToProps", "dispatch", "type", "price", "category"],
    "mappings": ";;;;;;;AAAA;;;;;;MAoBMA,8B;;;;;AAEF,4CAAYC,KAAZ,EAAmB;AAAA;AAAA,+BACTA,KADS;AAElB;;;;wCAEiB;AACd,aAAKC,oBAAL;AACA,aAAKD,KAAL,CAAWE,cAAX,CAA0B;AAACC,UAAAA,IAAI,EAAE,oBAAP;AAA6BC,UAAAA,IAAI,EAAE;AAAnC,SAA1B;AACH;;;6CAEsB;AACnB,aAAKJ,KAAL,CAAWK,iBAAX,CAA6B,MAA7B,EAAqC,EAArC;AACA,aAAKL,KAAL,CAAWK,iBAAX,CAA6B,IAA7B,EAAmC,EAAnC;AACA,aAAKL,KAAL,CAAWM,kBAAX;AACA,aAAKN,KAAL,CAAWO,kBAAX;AACA,aAAKP,KAAL,CAAWQ,mBAAX,CAA+B,EAA/B;AACA,aAAKR,KAAL,CAAWS,gBAAX;AACA,aAAKT,KAAL,CAAWU,mBAAX;AACH;;;oCAEaC,M,EAAQC,U,EAAY;AAC9B,eACKA,UAAU,CAACC,GAAX,IAAkB,IAAnB,gBACI;AAAI,UAAA,QAAQ,EAAC,iBAAb;AAA+B,UAAA,SAAS,MAAxC;AAAyC,UAAA,QAAQ,EAAC;AAAlD,wBACI;AAAG,UAAA,QAAQ,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAED,UAAU,CAACC,GAAX,GAAiBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBJ,UAAU,CAACC,GAArD,GAA2DC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB;AAA7G,wBACI;AAAM,UAAA,QAAQ,EAAC;AAAf,WAAuBJ,UAAU,CAACR,IAAlC,CADJ,CADJ,eAII;AAAM,UAAA,QAAQ,EAAC,UAAf;AAA0B,UAAA,OAAO,EAAEO;AAAnC,UAJJ,CADJ,gBAQI;AAAI,UAAA,QAAQ,EAAC,iBAAb;AAA+B,UAAA,SAAS,MAAxC;AAAyC,UAAA,QAAQ,EAAC;AAAlD,wBACI;AAAM,UAAA,QAAQ,EAAC;AAAf,WAAuBC,UAAU,CAACR,IAAlC,CADJ,eAEI;AAAM,UAAA,QAAQ,EAAC,UAAf;AAA0B,UAAA,OAAO,EAAEO;AAAnC,UAFJ,CATR;AAeH;;;+BAEQ;AAAA;;AACL,YAAIM,IAAI,GAAG,KAAKC,mBAAL,EAAX;AACA,4BAAQ;AAAK,UAAA,SAAS,EAAC;AAAf,wBACA;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI;AAAI,UAAA,SAAS,MAAb;AAAc,UAAA,QAAQ,EAAC;AAAvB,WACKD,IAAI,CAACE,MAAL,KAAgBC,SAAhB,IAA6BH,IAAI,CAACE,MAAL,GAAc,CAA3C,GACIF,IAAI,CAACI,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACvB,iBAAO,KAAI,CAACC,aAAL,CAAmBD,KAAnB,EAA0BD,IAA1B,CAAP;AACH,SAFA,CADJ,GAKG,IANR,CADJ,CADA,CAAR;AAcH;;;4CAEqB;AAClB,YAAIL,IAAI,GAAG,KAAKjB,KAAL,CAAWyB,KAAX,kCAAuB,KAAKzB,KAAL,CAAW0B,aAAlC,mCAAuD,KAAK1B,KAAL,CAAW2B,aAAlE,CAAX;AACA,YAAIC,QAAQ,GAAG,KAAKC,iBAAL,EAAf;;AACA,YAAID,QAAJ,EAAc;AACVX,UAAAA,IAAI,CAACa,IAAL,CAAUF,QAAV;AACH;;AACD,eAAOX,IAAP;AACH;;;0CAEmB;AAChB,YAAI,CAAC,KAAKjB,KAAL,CAAW+B,yBAAhB,EAA2C;AAEvC,iBAAO;AAAC3B,YAAAA,IAAI,EAAE,OAAP;AAAgBS,YAAAA,GAAG,EAAE;AAArB,WAAP;AACH;;AACD,YAAI,KAAKb,KAAL,CAAW+B,yBAAf,EAA0C;AACtC,iBAAO;AACH3B,YAAAA,IAAI,EAAE,WAAW,KAAKJ,KAAL,CAAW+B,yBAAX,CAAqCC,WAArC,EADd;AAEHnB,YAAAA,GAAG,EAAE;AAFF,WAAP;AAIH;AACJ;;;IA7EwCoB,gB;;AAgF7C,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC9BC,MAAAA,iBAAiB,EAAE,mCAAqBD,KAArB,CADW;AAE9BE,MAAAA,gBAAgB,EAAE,oCAAoBF,KAApB,CAFY;AAG9BJ,MAAAA,yBAAyB,EAAE,qCAAqBI,KAArB,CAHG;AAI9BG,MAAAA,oBAAoB,EAAE,wCAAwBH,KAAxB,CAJQ;AAK9BI,MAAAA,gBAAgB,EAAE,oCAAoBJ,KAApB,CALY;AAM9BV,MAAAA,KAAK,EAAE,+BAAiBU,KAAjB,MAA4B;AANL,KAAL;AAAA,GAA7B;;AAWA,MAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,WAAe;AACtC/B,MAAAA,mBAAmB,EAAE;AAAA,eAAM+B,QAAQ,CAAC,kCAAD,CAAd;AAAA,OADiB;AAEtChC,MAAAA,gBAAgB,EAAE;AAAA,eAAMgC,QAAQ,CAAC,gCAAD,CAAd;AAAA,OAFoB;AAGtCpC,MAAAA,iBAAiB,EAAE,2BAACqC,IAAD,EAAOC,KAAP;AAAA,eAAiBF,QAAQ,CAAC,+BAAkBC,IAAlB,EAAwBC,KAAxB,CAAD,CAAzB;AAAA,OAHmB;AAItCrC,MAAAA,kBAAkB,EAAE;AAAA,eAAMmC,QAAQ,CAAC,iCAAD,CAAd;AAAA,OAJkB;AAKtClC,MAAAA,kBAAkB,EAAE;AAAA,eAAMkC,QAAQ,CAAC,iCAAD,CAAd;AAAA,OALkB;AAMtCjC,MAAAA,mBAAmB,EAAE,6BAAC6B,gBAAD;AAAA,eAAsBI,QAAQ,CAAC,iCAAoBJ,gBAApB,CAAD,CAA9B;AAAA,OANiB;AAOtCnC,MAAAA,cAAc,EAAE,wBAAC0C,QAAD;AAAA,eAAcH,QAAQ,CAAC,yBAAeG,QAAf,CAAD,CAAtB;AAAA;AAPsB,KAAf;AAAA,GAA3B;;iBAUe,yBAAQV,eAAR,EAAyBM,kBAAzB,EAA6CzC,8BAA7C,C",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {changeCategory} from \"eshop/modules/simfree/actions/app\";\nimport {\n    getProductListHeader,\n    getSelectedCategory,\n    getSelectedCategoryName,\n    getSelectedProducer\n} from \"eshop/modules/simfree/selectors\";\nimport {\n    changePriceFilter,\n    clearAttrsFilters,\n    clearMatchToFilters,\n    clearMonthlyPrices,\n    clearOneTimePrices,\n    setSelectedProducer\n} from \"eshop/modules/simfree/actions/filter\";\nimport {getMarketContext, getSelectedOfferType} from \"../../configurator/selectors/filters\";\n\n\nclass OraProductBreadcrumbsComponent extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    clearAllFilters() {\n        this.clearSelectedFilters();\n        this.props.changeCategory({code: 'Phones and Devices', name: 'Telefony i UrzÄ…dzenia'});\n    }\n\n    clearSelectedFilters() {\n        this.props.changePriceFilter(\"from\", \"\");\n        this.props.changePriceFilter(\"to\", \"\");\n        this.props.clearMonthlyPrices();\n        this.props.clearOneTimePrices();\n        this.props.setSelectedProducer(\"\");\n        this.props.clearAttrFilters();\n        this.props.clearMatchToFilters();\n    }\n\n    renderElement(number, breadcrumb) {\n        return (\n            (breadcrumb.url != null) ?\n                <li itemProp=\"itemListElement\" itemScope itemType=\"http://schema.org/ListItem\">\n                    <a itemProp=\"item\" href={breadcrumb.url ? window.location.origin + breadcrumb.url : window.location.origin + '/sklep'}>\n                        <span itemProp=\"name\">{breadcrumb.name}</span>\n                    </a>\n                    <meta itemProp=\"position\" content={number}/>\n                </li>\n                :\n                <li itemProp=\"itemListElement\" itemScope itemType=\"http://schema.org/ListItem\">\n                    <span itemProp=\"name\">{breadcrumb.name}</span>\n                    <meta itemProp=\"position\" content={number}/>\n\n                </li>\n        )\n    }\n\n    render() {\n        let list = this.buildBreadcrumbJson();\n        return (<div className=\"l-full-row opl-breadcrumbs u-small-hide u-medium-hide\">\n                <div className=\"l-page-row\">\n                    <ul itemScope itemType=\"http://schema.org/BreadcrumbList\">\n                        {list.length !== undefined || list.length > 0 ?\n                            (list.map((elem, index) => {\n                                return this.renderElement(index, elem)\n                            }))\n                            :\n                            null\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n\n    buildBreadcrumbJson() {\n        let list = this.props.isB2B ? [...this.props.b2bBreadcrumb] : [...this.props.b2cBreadcrumb];\n        let shopElem = this.createShopElement();\n        if (shopElem) {\n            list.push(shopElem);\n        }\n        return list;\n    }\n\n    createShopElement() {\n        if (!this.props.selectedProductListHeader) {\n\n            return {name: \"Sklep\", url: null};\n        }\n        if (this.props.selectedProductListHeader) {\n            return {\n                name: \"Sklep \" + this.props.selectedProductListHeader.toLowerCase(),\n                url: null\n            }\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedOfferType: getSelectedOfferType(state),\n    selectedProducer: getSelectedProducer(state),\n    selectedProductListHeader: getProductListHeader(state),\n    selectedCategoryName: getSelectedCategoryName(state),\n    selectedCategory: getSelectedCategory(state),\n    isB2B: getMarketContext(state) === \"B2B\"\n\n});\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    clearMatchToFilters: () => dispatch(clearMatchToFilters()),\n    clearAttrFilters: () => dispatch(clearAttrsFilters()),\n    changePriceFilter: (type, price) => dispatch(changePriceFilter(type, price)),\n    clearMonthlyPrices: () => dispatch(clearMonthlyPrices()),\n    clearOneTimePrices: () => dispatch(clearOneTimePrices()),\n    setSelectedProducer: (selectedProducer) => dispatch(setSelectedProducer(selectedProducer)),\n    changeCategory: (category) => dispatch(changeCategory(category))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OraProductBreadcrumbsComponent);"],
    "file": "OraProductBreadcrumbsComponent.js"
}