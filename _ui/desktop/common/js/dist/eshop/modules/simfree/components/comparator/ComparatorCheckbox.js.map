{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/simfree/components/comparator/ComparatorCheckbox.jsx"],
    "names": ["ComparatorCheckbox", "props", "event", "updateComparatorDevices", "name", "product", "productId", "imageUrl", "variantList", "productPageUrl", "getProductUrl", "category", "selectedCategory", "productUrl", "window", "location", "pathname", "includes", "comparatorDevices", "filter", "device", "length", "isComparatorCategory", "isProductSet", "deviceAdded", "handleCheckboxChange", "Component", "mapStateToProps", "state", "categories", "mapDispatchToProps", "dispatch"],
    "mappings": "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",
    "sourcesContent": ["import {connect} from \"react-redux\";\nimport React, {Component} from \"react\";\nimport {updateComparatorDevicesList} from \"eshop/modules/simfree/actions/comparator\";\nimport {getComparatorDevices,getProductsTrees, getSelectedCategory, getIsComparatorCategory} from \"eshop/modules/simfree/selectors\";\n\nclass ComparatorCheckbox extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    handleCheckboxChange(event) {\n        this.props.updateComparatorDevices({\n            name: this.props.product.name,\n            productId: this.props.product.productId,\n            imageUrl: this.props.product.variantList[0].imageUrl,\n            productPageUrl: this.getProductUrl(),\n            category: this.props.selectedCategory\n        });\n    }\n    getProductUrl(){\n        if(this.props.product.variantList[0].productUrl != null){\n            return this.props.product.variantList[0].productUrl;\n        } else {\n            return window.location.pathname;\n        }\n    }\n    isProductSet(){\n        return this.props.product.productId && this.props.product.productId.includes(\"PROD_SET\");\n    }\n    deviceAdded(){\n        return this.props.comparatorDevices.filter(device => device.productId === this.props.product.productId).length > 0;\n    }\n\n    render() {\n        if (this.props.isComparatorCategory && !this.isProductSet()) {\n            return (\n                <div>\n                    <label className=\"o-checkbox opl-checkbox u-small-hide\">\n                        <input type=\"checkbox\"\n                               disabled={!this.deviceAdded() && this.props.comparatorDevices.length > 2}\n                               checked={this.deviceAdded()}\n                               onChange={event => {\n                                   this.handleCheckboxChange(event)\n                               }}\n                        />\n                        <span className=\"o-ci\"/>\n                        <span className=\"o-ci-label\">Porównaj</span>\n                    </label>\n                    <label className=\"o-checkbox opl-checkbox u-medium-hide u-large-hide\">\n                        <input type=\"checkbox\"\n                               disabled={!this.deviceAdded() && this.props.comparatorDevices.length > 1}\n                               checked={this.deviceAdded()}\n                               onChange={event => {\n                                   this.handleCheckboxChange(event)\n                               }}\n                        />\n                        <span className=\"o-ci\"/>\n                        <span className=\"o-ci-label\">Porównaj</span>\n                    </label>\n                </div>\n            )\n        } else {\n            return null;\n        }\n\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    comparatorDevices: getComparatorDevices(state),\n    categories: getProductsTrees(state),\n    selectedCategory: getSelectedCategory(state),\n    isComparatorCategory: getIsComparatorCategory(state)\n\n});\nconst mapDispatchToProps = (dispatch, props) => ({\n    updateComparatorDevices: (device) => dispatch(updateComparatorDevicesList(device))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComparatorCheckbox);\n"],
    "file": "ComparatorCheckbox.js"
}