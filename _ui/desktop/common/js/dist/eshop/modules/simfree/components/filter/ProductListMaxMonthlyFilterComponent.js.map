{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/simfree/components/filter/ProductListMaxMonthlyFilterComponent.jsx"],
    "names": ["ProductListMaxMonthlyFilterComponent", "props", "setCmsConf", "tieredPriceConf", "subscribeToClientContextChange", "reloadProductList", "labelProvider", "bind", "row", "to", "filterLabelsHardcodedAsGross", "OnlineUtils", "formatPrice", "toGrossHardcoded", "alias", "tieredPrices", "title", "selectedTieredPrices", "onClick", "tieredPriceNumberExpander", "length", "isSalesOfGoodsPage", "initiallyExpanded", "React", "Component", "mapStateToProps", "state", "mapDispatchToProps", "dispatch", "value", "id", "f"],
    "mappings": ";;;;;;;AAAA;AAMA;AAEA;;;;;;MAEMA,oC;;;;;AAEF,kDAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACf,gCAAMA,KAAN;;AACA,YAAKA,KAAL,CAAWC,UAAX,CAAsB,MAAKD,KAAL,CAAWE,eAAjC;;AACA,YAAKF,KAAL,CAAWG,8BAAX,CAA0CC,yBAA1C;;AACA,YAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,2CAArB;AAJe;AAKlB;;;;oCAEaC,G,EAAI;AACd,YAAIC,EAAE,GAAG,KAAKR,KAAL,CAAWS,4BAAX,GAA0CC,qBAAYC,WAAZ,CAAwBD,qBAAYE,gBAAZ,CAA6BL,GAAG,CAACC,EAAjC,CAAxB,CAA1C,GAA0GD,GAAG,CAACC,EAAvH;AACA,eAAOD,GAAG,CAACM,KAAJ,IAAa,QAAQL,EAAR,GAAa,KAAjC;AACH;;;+BAEQ;AACJ,4BACI,6BAAC,qCAAD;AACI,UAAA,YAAY,EAAE,KAAKR,KAAL,CAAWc,YAD7B;AAEI,UAAA,MAAM,EAAI,KAAKd,KAAL,CAAWe,KAFzB;AAGI,UAAA,IAAI,EAAG,OAHX;AAII,UAAA,EAAE,EAAC,yBAJP;AAKI,UAAA,cAAc,EAAI,KAAKV,aAL3B;AAMI,UAAA,oBAAoB,EAAE,KAAKL,KAAL,CAAWgB,oBANrC;AAOI,UAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWiB,OAPxB;AAQI,UAAA,kBAAkB,EAAE,KAAKjB,KAAL,CAAWkB,yBARnC;AASI,UAAA,aAAa,EAAE,KAAKlB,KAAL,CAAWc,YAAX,IAA2B,KAAKd,KAAL,CAAWc,YAAX,CAAwBK,MAAxB,GAAiC,CAA5D,IAAiE,CAAC,KAAKnB,KAAL,CAAWoB,kBAThG;AAUI,UAAA,iBAAiB,EAAE,KAAKpB,KAAL,CAAWqB;AAVlC,UADJ;AAcH;;;IA7B6CC,eAAMC,S;;AAgCzD,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC9BX,MAAAA,YAAY,EAAG,4DAA4CW,KAA5C,CADe;AAE9BT,MAAAA,oBAAoB,EAAG,2CAA2BS,KAA3B,CAFO;AAG9BhB,MAAAA,4BAA4B,EAAE,6CAA6BgB,KAA7B,CAHA;AAI9BL,MAAAA,kBAAkB,EAAE,sCAAsBK,KAAtB;AAJU,KAAL;AAAA,GAA7B;;AAOA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,WAAe;AACtC1B,MAAAA,UAAU,EAAE,oBAAC2B,KAAD;AAAA,eAAWD,QAAQ,CAAC,8CAA+BC,KAA/B,CAAD,CAAnB;AAAA,OAD0B;AAEtCX,MAAAA,OAAO,EAAE,iBAACY,EAAD;AAAA,eAAQF,QAAQ,CAAC,mCAAsBE,EAAtB,CAAD,CAAhB;AAAA,OAF6B;AAGtC1B,MAAAA,8BAA8B,EAAE,wCAAC2B,CAAD;AAAA,eAAOH,QAAQ,CAAC,6CAA+BG,CAA/B,CAAD,CAAf;AAAA;AAHM,KAAf;AAAA,GAA3B;;iBAMe/B,oCAAoC,GAAG,yBAAQyB,eAAR,EAAyBE,kBAAzB,EAA6C3B,oCAA7C,C",
    "sourcesContent": ["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {registerMaxMonthlyPriceCMSConf} from \"eshop/modules/simfree/actions/metaData\";\nimport {selectMaxMonthlyPrice, reloadProductList} from \"eshop/modules/simfree/actions/filter\";\nimport {subscribeToClientContextChange} from \"eshop/modules/configurator/actions/filters\";\nimport {getTieredMaxMonthlyPriceForCurrentOfferType,getSelectedMaxMonthlyPrice, getIsSalesOfGoodsPage} from \"eshop/modules/simfree/selectors\";\nimport ProductListOneTimeFilterView from \"./view/ProductListOneTimeFilterView\"\nimport {filterLabelsHardcodedAsGross} from \"eshop/modules/simfree/selectors\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\n\nclass ProductListMaxMonthlyFilterComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.props.setCmsConf(this.props.tieredPriceConf);\n        this.props.subscribeToClientContextChange(reloadProductList);\n        this.labelProvider = this.labelProvider.bind(this);\n    }\n\n    labelProvider(row){\n        let to = this.props.filterLabelsHardcodedAsGross ? OnlineUtils.formatPrice(OnlineUtils.toGrossHardcoded(row.to)) : row.to\n        return row.alias || \"Do \" + to + \" z≈Ç\"\n    }\n\n    render() {\n         return (\n             <ProductListOneTimeFilterView\n                 tieredPrices={this.props.tieredPrices}\n                 header = {this.props.title}\n                 type = \"radio\"\n                 id=\"expander-module-monthly\"\n                 labelFormatter = {this.labelProvider}\n                 selectedTieredPrices={this.props.selectedTieredPrices}\n                 onClick={this.props.onClick}\n                 showExpanderNumber={this.props.tieredPriceNumberExpander}\n                 showComponent={this.props.tieredPrices && this.props.tieredPrices.length > 0 && !this.props.isSalesOfGoodsPage}\n                 initiallyExpanded={this.props.initiallyExpanded}\n                 />\n         );\n     }\n}\n\nconst mapStateToProps = state => ({\n    tieredPrices : getTieredMaxMonthlyPriceForCurrentOfferType(state),\n    selectedTieredPrices : getSelectedMaxMonthlyPrice(state),\n    filterLabelsHardcodedAsGross: filterLabelsHardcodedAsGross(state),\n    isSalesOfGoodsPage: getIsSalesOfGoodsPage(state)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    setCmsConf: (value) => dispatch(registerMaxMonthlyPriceCMSConf(value)),\n    onClick: (id) => dispatch(selectMaxMonthlyPrice(id)),\n    subscribeToClientContextChange: (f) => dispatch(subscribeToClientContextChange(f))\n});\n\nexport default ProductListMaxMonthlyFilterComponent = connect(mapStateToProps, mapDispatchToProps)(ProductListMaxMonthlyFilterComponent);\n\n"],
    "file": "ProductListMaxMonthlyFilterComponent.js"
}