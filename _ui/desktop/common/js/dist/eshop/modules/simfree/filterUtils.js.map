{
    "version": 3,
    "sources": ["../../../../../es6/eshop/modules/simfree/filterUtils.js"],
    "names": ["manageMultiValue", "actualFilters", "element", "parent", "mapElement", "indexOf", "replace", "substring", "length", "createMapFromObject", "filter", "filters", "Map", "Object", "keys", "map", "key", "manageFilter", "multiValue", "operation", "categoryFilters", "forEach", "index", "toRemove", "code", "manageNumberFilter", "actualAttrNumberFilters", "type", "value", "manageMatchToData", "selectedModel", "checked", "matchToData", "matchToFilter", "selectedCategory", "allChecked", "category", "children", "model", "id", "$", "prop", "oneIsChecked", "categoryId", "deleteFilterByCode", "deleteNumberFilterByCode", "actualNumberFilters", "deleteMatchToFilterByCode", "getMapFilters", "filterMap", "getFilterNameDescription", "name", "getMatchToDescription", "title", "getNumberFilterNameDescription", "_type", "manageStickerFilter", "actualStickerFilters", "stickerFilters", "stickerCode", "toRemoveSticker", "getStickerFilters", "allFilters", "newValues", "newFilters", "newValuesSplit", "split", "newValue", "clearActualNumberFilterAfterCategoryChange", "categoryFilter", "entry", "filtered", "startsWith", "console", "log", "clearActualFilterAfterCategoryChange"],
    "mappings": "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",
    "sourcesContent": ["export function manageMultiValue(actualFilters, element, parent) {\n    let mapElement=actualFilters[parent];\n    if (!mapElement || mapElement==\"\") {\n        actualFilters[parent]=element;\n    } else {\n        if((\",\"+mapElement+\",\").indexOf(\",\"+element+\",\")!==-1){\n            mapElement=\",\"+mapElement+\",\";\n            mapElement=mapElement.replace((\",\"+element+\",\"),\",\");\n            mapElement=mapElement.substring(1, mapElement.length);\n            mapElement=mapElement.substring(0, mapElement.length-1);\n            actualFilters[parent]=mapElement;\n        }else {\n            actualFilters[parent]=mapElement + \",\" + element;\n        }\n    }\n}\n\nexport function createMapFromObject(filter){\n    var filters = new Map(\n            Object\n                .keys(filter)\n                .map(\n                    key => [key, filter[key]]\n                )\n    )\n    return filters;\n}\n\nexport default {\n    manageFilter: (actualFilters, element, parent, multiValue, operation, categoryFilters) => {\n        if(!multiValue)\n        {\n            actualFilters[parent]=element;\n        }else{\n            manageMultiValue(actualFilters, element, parent);\n            // check empty multi value. Required in case of HTTP 500 error for request with empty values\n            if(actualFilters[parent]===\"\"){\n                delete actualFilters[parent]\n            }\n        }\n        Object.keys(actualFilters).forEach((key,index) => {\n            let toRemove = true;\n            if(categoryFilters) {\n                categoryFilters.forEach((element) => {\n                    if (element.code === key) {\n                        toRemove = false;\n                    }\n                });\n            }\n            if (toRemove === true) {\n                delete actualFilters[key];\n            }\n\n        });\n        return actualFilters;\n    },\n    manageNumberFilter: (actualAttrNumberFilters, type, value, element, categoryFilters) => {\n        actualAttrNumberFilters[element.code+\"_\"+type]=value;\n        return actualAttrNumberFilters;\n\n    },\n    manageMatchToData(selectedModel, checked, matchToData, matchToFilter){\n        if(!matchToFilter) {\n            matchToFilter = new Map();\n        }\n        if(checked){\n            let selectedCategory=\"\";\n            let allChecked=true;\n            /*Zaznaczanie - weryfikacja czy należy usunąć nadkategorię*/\n            if(matchToData && matchToData.category) {\n                matchToData.category.forEach(function (filter) {\n                    filter.children.forEach(function (model) {\n                        if (model.id === selectedModel) {\n                            selectedCategory=filter.id;\n                            delete matchToFilter[filter.id];\n                        }\n                    })\n                });\n                matchToData.category.forEach(function (filter) {\n                    if(selectedCategory === filter.id) {\n                        filter.children.forEach(function (model) {\n                            if (model.id && model.id!='' && !$('[data-id=' + model.id + '] :input').prop('checked') === true) {\n                                allChecked=false;\n                            }\n                        });\n                    }\n                });\n                if(allChecked){\n                    matchToData.category.forEach(function (filter) {\n                        if(selectedCategory === filter.id) {\n                            filter.children.forEach(function (model) {\n                                delete matchToFilter[model.id];\n                            });\n                        }\n                    });\n                }\n            }\n            if(allChecked) {\n                if(selectedCategory!=\"\") {\n                    matchToFilter[selectedCategory] = 1;\n                    $('[data-id=' + selectedCategory + '] :input').prop('checked', true);\n                }else{\n                    matchToFilter[selectedModel] = 1;\n                }\n            }else{\n                matchToFilter[selectedModel] = 1;\n            }\n        }else{\n            let oneIsChecked=false;\n            let categoryId=\"\";\n            /*Odznaczanie jednego checkboxa - usuwanie głównej kategorii i zamiana na podkategorię*/\n            if(matchToData && matchToData.category) {\n                matchToData.category.forEach(function (filter) {\n                    filter.children.forEach(function (model) {\n                        if (model.id === selectedModel) {\n                            categoryId = filter.id;\n                            delete matchToFilter[filter.id];\n                        }\n                        if (model.id && model.id!='' && $('[data-id=' + model.id + '] :input').prop('checked') === true) {\n                            matchToFilter[model.id] = 1;\n                            oneIsChecked = true;\n                        }\n                    })\n                });\n            }\n            if(!oneIsChecked && categoryId!=\"\"){\n                matchToFilter[categoryId]=\"1\";\n            }\n            delete matchToFilter[selectedModel];\n        }\n        return matchToFilter;\n    },\n\n    deleteFilterByCode: (key,actualFilters) => {\n        delete actualFilters[key];\n        return actualFilters;\n    },\n\n    deleteNumberFilterByCode: (key,actualNumberFilters) => {\n        actualNumberFilters[key]=\"\";\n        return actualNumberFilters;\n    },\n\n    deleteMatchToFilterByCode: (key, matchToFilter) => {\n        delete matchToFilter[key];\n        $('[data-id='+key+'] :input').prop(\"checked\", false);\n        return matchToFilter;\n    },\n    getMapFilters: (actualFilters) => {\n        var filterMap;\n        if(actualFilters){\n            filterMap = createMapFromObject(actualFilters);\n        } else {\n            filterMap = new Map();\n        }\n        return filterMap;\n    },\n    getFilterNameDescription: (key,filters) => {\n        var name=\"\"\n        filters.forEach(function(filter){\n            if(filter.code === key){\n                name = filter.name;\n            }\n        })\n        return name;\n    },\n    getMatchToDescription: (key,matchToData) => {\n        var name=\"\"\n        matchToData.category.forEach(function(filter){\n            if(filter.id === key){\n                name = filter.title;\n            }\n            filter.children.forEach(function(model)\n            {\n                if (model.id === key) {\n                    name = model.title;\n                }\n            })\n        })\n        return name;\n\n    },\n    getNumberFilterNameDescription: (key,filters) => {\n        let _type=\"\";\n        if(key.indexOf(\"_to\")>0){\n            _type=\" do\";\n        }else{\n            _type=\" od\";\n        }\n        key=key.replace(\"_to\",\"\");\n        key=key.replace(\"_from\",\"\");\n        var name=\"\"\n        filters.forEach(function(filter){\n            if(filter.code === key){\n                name = filter.name+_type;\n            }\n        })\n    return name;\n    },\n    manageStickerFilter: (actualStickerFilters, element, parent, multiValue, operation, stickerFilters) => {\n        var stickerCode = parent.code;\n        if(!multiValue)\n        {\n            actualStickerFilters[stickerCode]=element;\n        }else{\n            manageMultiValue(actualStickerFilters, element, stickerCode);\n            // check empty multi value. Required in case of HTTP 500 error for request with empty values\n            if(actualStickerFilters[stickerCode]==\"\"){\n                delete actualStickerFilters[stickerCode]\n            }\n        }\n\n        Object.keys(stickerFilters).forEach((key,index) => {\n            let toRemoveSticker = true;\n            stickerFilters.forEach((element) => {\n                if(element.code == key){\n                    toRemoveSticker = false;\n                }\n                });\n                if (actualStickerFilters == true) {\n                    delete actualStickerFilters[key];\n                }\n        });\n        return actualStickerFilters;\n    },\n    getStickerFilters: (allFilters, newValues) => {\n        var newFilters = {};\n        var newValuesSplit = newValues.split(',');\n\n        newValuesSplit.forEach((newValue) => {\n            if (allFilters) {\n                allFilters.forEach((element) => {\n                    if (newValue == element.code) {\n                        newFilters[newValue] = element.name;\n                    }\n                });\n            }\n\n            if (!newFilters[newValue]) {\n                newFilters[newValue] = '';\n            }\n        });\n\n        return newFilters;\n    },\n    clearActualNumberFilterAfterCategoryChange: (categoryFilter,actualNumberFilters) => {\n        if(actualNumberFilters) {\n            Object.keys(actualNumberFilters).forEach(entry => {\n                let filtered = categoryFilter.filter(element => entry.startsWith((element.code)));\n                if(filtered && filtered.length === 0){\n                    delete actualNumberFilters[entry];\n                }\n            });\n        }\n        console.log(actualNumberFilters);\n        return actualNumberFilters;\n    },\n    clearActualFilterAfterCategoryChange: (categoryFilter,actualFilters) => {\n        if(actualFilters){\n            Object.keys(actualFilters).forEach((key,index) => {\n                let filtered = categoryFilter.filter(element => key === element.code);\n                if(filtered && filtered.length === 0){\n                    delete actualFilters[key];\n                }\n            });\n        }\n        return actualFilters;\n    }\n}\n\n"],
    "file": "filterUtils.js"
}