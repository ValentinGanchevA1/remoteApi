{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/simfree/components/details/ProductDetailsProcessFilterComponent.jsx"],
    "names": ["ProductDetailsProcessFilterComponent", "props", "fetchMiniCart", "selectProcessType", "bind", "selectLoyaltyLength", "selectSwitchButton", "getSelectedExtProcessSelectIndexes", "getExtProcessSelectForLevel", "selectProcessForExtProcessSelect", "createInstallmentOptions", "e", "value", "url", "OnlineUtils", "redirectToAnotherPage", "conf", "map", "c", "selected", "active", "selectedOfferType", "OfferType", "DATA", "VOICE", "getSelectedExtProcessSelectIndexesForOption", "extProcessSelectConfig", "selectedProcessValue", "option", "index", "process", "options", "length", "getSelectedExtProcessSelectIndexesForOptions", "found", "find", "result", "getSelectedIndex", "level", "selectedExtProcessSelectIndexes", "extProcessSelect", "i", "getProcessForExtProcessSelect", "description", "installmentCount", "stayLoveRetentionMSISDN", "VOICE_LDF", "console", "log", "processTypeData", "optionsToDisable", "forEach", "TransactionProcessType", "RETENTION", "push", "processTypesToExcludeByStayLove", "disabledProcessesByStayLove", "filter", "processType", "processTypeNotStayLove", "CONVERGENT", "indexOf", "getProcessLabel", "excludeProcessesFromFilter", "getClientContextCheckboxConfig", "filterCmsDescriptions", "loyaltyLengthData", "selectedLoyaltyLengthValue", "channels", "addTerminalToOfferBundleNo", "undefined", "descriptions", "selectedOffer", "isB2B", "createOptionsForExtProcessSelect", "offerFiltersLoading", "marketContext", "contractRole", "isDuet", "Component", "desc", "label", "clientContextLabel", "tooltip", "clientContextTooltip", "mapDispatchToProps", "dispatch", "fetchOfferFilters", "mapStateToProps", "state", "MarketSegment"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    fetchOfferFilters,\n    selectProductDetailsLoyaltyLength,\n    selectProductDetailsProcessType,\n} from \"eshop/modules/configurator/actions/filters\";\nimport ProductDetailsProcessFilterView\n    from \"eshop/modules/simfree/components/details/view/ProductDetailsProcessFilterView\";\nimport {\n    getMarketContext,\n    getProcessTypeFiltersForSelect,\n    getSelectedLoyaltyLengthValue,\n    getSelectedOfferType,\n    getSelectedProcessTypeValue,\n    getSortedLoyaltyLengthFiltersWithIndefinitePeriodForSelect,\n} from \"eshop/modules/configurator/selectors/filters\";\nimport {getSelectedOfferTypeDescriptions} from \"eshop/modules/simfree/selectors\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\nimport {fetchMiniCart} from \"eshop/modules/cart/actions/cart\";\nimport {getAddTerminalToOfferBundleNo} from \"eshop/modules/cart/selectors\";\nimport {getContractRole, getInstallmentCount, getSelectedOffer} from \"eshop/modules/configurator/selectors/offers\";\nimport MarketSegment from \"eshop/modules/core/enum/MarketSegment\";\nimport {getExtProcessSelectConfigFiltered, getOfferFiltersLoading} from \"../../../configurator/selectors/filters\";\nimport {getStayLoveRetentionMSISDN} from \"../../../auth/selectors/authorization\";\nimport {isDuet} from \"../../selectors\";\nimport OfferType from \"../../../core/constants/OfferTypeEnum\";\nimport TransactionProcessType from \"../../../core/constants/TransactionProcessTypeEnum\";\n\nclass ProductDetailsProcessFilterComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.props.fetchMiniCart();\n        this.selectProcessType = this.selectProcessType.bind(this);\n        this.selectLoyaltyLength = this.selectLoyaltyLength.bind(this);\n        this.selectSwitchButton = this.selectSwitchButton.bind(this);\n        this.getSelectedExtProcessSelectIndexes = this.getSelectedExtProcessSelectIndexes.bind(this);\n        this.getExtProcessSelectForLevel = this.getExtProcessSelectForLevel.bind(this);\n        this.selectProcessForExtProcessSelect = this.selectProcessForExtProcessSelect.bind(this);\n        this.createInstallmentOptions = this.createInstallmentOptions.bind(this);\n    }\n\n    selectProcessType(e) {\n        this.props.selectProcessType(e.value)\n    }\n\n    selectLoyaltyLength(e) {\n        this.props.selectLoyaltyLength(e.value)\n    }\n\n    selectSwitchButton(url) {\n        url && OnlineUtils.redirectToAnotherPage(url);\n    }\n\n    convertSwitchConf(conf) {\n        return conf && conf.map(c => {c.selected = c.active;return c})\n    }\n    getProcessLabel(){\n        if(this.props.selectedOfferType===OfferType.DATA)\n            return \"Internet mobilny\";\n        if(this.props.selectedOfferType===OfferType.VOICE)\n            return \"Abonament komórkowy\";\n        return \"Proces\";\n    }\n\n    getSelectedExtProcessSelectIndexes() {\n        return this.getSelectedExtProcessSelectIndexesForOption(this.props.extProcessSelectConfig, -1, this.props.selectedProcessValue);\n    }\n\n    getSelectedExtProcessSelectIndexesForOption(option, index, process) {\n        if (option.options && option.options.length > 0) {\n            return this.getSelectedExtProcessSelectIndexesForOptions(option.options, index, process);\n        }\n        if (option.process === process) {\n            return [index];\n        }\n        return false;\n    }\n\n    getSelectedExtProcessSelectIndexesForOptions(options, index, process) {\n        let found = options\n            .map((options, index) => this.getSelectedExtProcessSelectIndexesForOption(options, index, process))\n            .find(result => result);\n        if (found) {\n            return this.getSelectedIndex(found, index);\n        }\n        return false;\n    }\n\n    getSelectedIndex(found, index) {\n        if(index !== -1) {\n            return [index, ...found];\n        }\n        return found;\n    }\n\n    getExtProcessSelectForLevel(level) {\n        const selectedExtProcessSelectIndexes = this.getSelectedExtProcessSelectIndexes();\n        let extProcessSelect = this.props.extProcessSelectConfig;\n        for (let i = 0; i < level; i++) {\n            extProcessSelect = extProcessSelect.options[selectedExtProcessSelectIndexes[i]];\n        }\n        return extProcessSelect;\n    }\n\n    selectProcessForExtProcessSelect(extProcessSelect) {\n        return e => {\n            const process = this.getProcessForExtProcessSelect(extProcessSelect.options[e.value]);\n            this.props.selectProcessType(process);\n        }\n    }\n\n    createOptionsForExtProcessSelect(extProcessSelect) {\n        return extProcessSelect.options.map((option, index) => ({\n                value: index,\n                description: option.description,\n            }));\n    }\n\n    getProcessForExtProcessSelect(extProcessSelect) {\n        while (!extProcessSelect.process) {\n            extProcessSelect = extProcessSelect.options[0];\n        }\n        return extProcessSelect.process;\n    };\n\n    createInstallmentOptions() {\n        return [{\n            value: this.props.installmentCount,\n            description: this.props.installmentCount ? this.props.installmentCount : \"brak\",\n        }]\n    }\n    disabledProcessesByStayLove(){\n        if(this.props.stayLoveRetentionMSISDN && this.props.selectedOfferType===OfferType.VOICE_LDF){\n            console.log(\"OPTIONS TO DISABLE \",this.props.processTypeData);\n\n            let optionsToDisable=[];\n            this.props.processTypeData.forEach(\n                option => option.value!==TransactionProcessType.RETENTION && optionsToDisable.push(option));\n            console.log(\"OPTIONS TO DISABLE \",optionsToDisable);\n            return optionsToDisable;\n\n        }\n        return [];\n\n    }\n    excludeProcessesFromFilter(){\n        const processTypesToExcludeByStayLove=this.disabledProcessesByStayLove();\n        console.log(\"processTypesToExcludeByStayLove\",processTypesToExcludeByStayLove);\n        return  this.props.processTypeData.filter(\n            processType => processTypesToExcludeByStayLove.filter(\n                processTypeNotStayLove=>processTypeNotStayLove.value===processType.value).length===0);\n    }\n\n    render() {\n        if([OfferType.CONVERGENT].indexOf(this.props.selectedOfferType) > -1)\n            return null;\n\n        return (\n            <div id=\"offer-filters-loader\" data-js-module=\"core/modules/loader\" data-js-options='{\"coverOpacity\": 50,\"fadeDuration\": 40,\"preloaderAdditionalClass\" : \"g-gray1-bg\"}'>\n            <ProductDetailsProcessFilterView\n            processLabel={this.getProcessLabel()}\n            processTypeData={this.excludeProcessesFromFilter()}\n            selectedProcessValue={this.props.selectedProcessValue}\n            selectProcessCallback={this.selectProcessType}\n            clientContextCheckboxConfig = {getClientContextCheckboxConfig(this.props.filterCmsDescriptions)}\n            loyaltyLengthData={this.props.loyaltyLengthData}\n            selectedLoyaltyLengthValue={this.props.selectedLoyaltyLengthValue}\n            selectLoyaltyLengthCallback={this.selectLoyaltyLength}\n            channels={this.props.channels}\n            isAddTerminalToOfferBundleNo={!!this.props.addTerminalToOfferBundleNo ? true : undefined}\n            disabled={!!this.props.addTerminalToOfferBundleNo ? true : undefined}\n            selectedOfferType={this.props.selectedOfferType}\n            descriptions={this.props.descriptions}\n            selectedOffer={this.props.selectedOffer}\n            isB2B={this.props.isB2B}\n            extProcessSelectConfig={this.props.extProcessSelectConfig}\n            getSelectedExtProcessSelectIndexes={this.getSelectedExtProcessSelectIndexes}\n            getExtProcessSelectForLevel={this.getExtProcessSelectForLevel}\n            createOptionsForExtProcessSelect={this.createOptionsForExtProcessSelect}\n            selectProcessForExtProcessSelect={this.selectProcessForExtProcessSelect}\n            installmentOptions={this.createInstallmentOptions()}\n            installmentCount={this.props.installmentCount}\n            offerFiltersLoading={this.props.offerFiltersLoading}\n            marketContext={this.props.marketContext}\n            contractRole={this.props.contractRole}\n            isDuet={this.props.isDuet}\n        />\n            </div>)\n\n    }\n}\n\nconst getClientContextCheckboxConfig = desc => ({\n   label : desc && desc.clientContextLabel || \"Pokaż rabaty dla Klientów Orange\",\n   tooltip : desc && desc.clientContextTooltip || \"Posiadając Orange Love możesz otrzymać rabat -20 zł za łącznie usług w Orange na Plany Komórkowe Standardowy, Optymalny, Wzbogacony. Rabat naliczany będzie co miesiąc (najpóźniej od 2-giej faktury po spełnieniu warunków promocji).\"\n});\n\nconst mapDispatchToProps = dispatch => ({\n    selectProcessType: value => dispatch(selectProductDetailsProcessType(value)),\n    selectLoyaltyLength: value => dispatch(selectProductDetailsLoyaltyLength(value)),\n    fetchOfferFilters: () => dispatch(fetchOfferFilters()),\n    fetchMiniCart: () => dispatch(fetchMiniCart()),\n});\n\nconst mapStateToProps = state => ({\n    selectedOffer: getSelectedOffer(state),\n    selectedOfferType: getSelectedOfferType(state),\n    selectedProcessValue: getSelectedProcessTypeValue(state),\n    processTypeData: getProcessTypeFiltersForSelect(state),\n    selectedLoyaltyLengthValue: getSelectedLoyaltyLengthValue(state),\n    loyaltyLengthData: getSortedLoyaltyLengthFiltersWithIndefinitePeriodForSelect(state),\n    filterCmsDescriptions: getSelectedOfferTypeDescriptions(state),\n    addTerminalToOfferBundleNo: getAddTerminalToOfferBundleNo(state),\n    isB2B: MarketSegment.isB2B(getMarketContext(state)),\n    extProcessSelectConfig: getExtProcessSelectConfigFiltered(state),\n    installmentCount: getInstallmentCount(state),\n    contractRole: getContractRole(state)[0],\n    offerFiltersLoading: getOfferFiltersLoading(state),\n    marketContext: getMarketContext(state),\n    stayLoveRetentionMSISDN: getStayLoveRetentionMSISDN(state),\n    isDuet: isDuet(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetailsProcessFilterComponent);\n"],
    "file": "ProductDetailsProcessFilterComponent.js"
}