{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/simfree/reducers/list.js"],
    "names": ["products", "state", "action", "type", "ACTIONS", "GET_ALL_PRODUCTS", "FILTER_ACTION_IDENTIFIER", "SET_SELECTED_VARIANT_ON_LIST", "categories", "GET_PRODUCTS_TREES", "payload", "filterConfiguration", "FETCH_FILTER_CONFIGURATION", "GET_INIT_FILTERS", "filters", "GET_FILTERS", "SET_STICKER_FILTER", "selectedProducer", "SET_SELECTED_PRODUCER", "checkProducer", "initProducer", "currentPage", "CHANGE_CURRENT_PAGE", "initiallyFiltered", "configuration", "result", "producerFilter", "map", "producer", "name", "checkSort", "initSort", "sortDefinition", "length", "findIndex", "sort", "value", "selectedCategory", "decodeURI", "OnlineUtils", "getParameterValueFromUrl", "SET_SELECTED_CATEGORY", "initCategory", "selectedCategoryName", "selectedColor", "SET_SELECTED_COLOR", "selectedSort", "SET_SELECTED_SORT", "actualAttrFilters", "SET_ATTR_FILTERS", "UPDATE_ATTR_FILTERS", "actualStickerAttrFilters", "SET_STICKER_ATTR_FILTERS", "UPDATE_STICKER_ATTR_FILTERS", "actualAttrNumberFilters", "SET_ATTR_NUMBER_FILTERS", "UPDATE_NUMBER_ATTR_FILTERS", "priceFilter", "SET_PRICE_FILTERS", "priceFilterType", "price", "allVisibility", "SET_SELECTED_ALL_VISIBILITY", "matchToFilterData", "GET_MATCH_TO_DATA", "matchToFilter", "SET_SELECTED_MODEL", "UPDATE_MATCH_TO_FILTERS", "CLEAR_MATCH_TO_FILTERS", "matchToFilterCounters", "UPDATE_MATCH_TO_FILTER_COUNTERS", "OPL", "UI", "fire", "EVENTS", "modules", "categorytree", "updatecounter", "matchToFilterCounterData", "filterModalOpened", "SET_OPENED_FILTER_MODAL", "opened", "selectedOneTimePrices", "SELECT_ONE_TIME_PRICE", "newState", "id", "Object", "assign", "REGISTER_ONE_TIME_PRICE_CMS_CONF", "parsedParameterObjectArray", "parseOneTimeCostPricesUrlParameter", "cmsConfFromUrl", "cmsConf", "filter", "conf", "find", "param", "to", "from", "newState2", "CLEAR_ONE_TIME_PRICES", "changeOrAddUrlParameterDisabledOnCheckout", "selectedMaxMonthlyPrice", "SELECT_MAX_MONTHLY_PRICE", "REGISTER_MAX_MONTHLY_PRICE_CMS_CONF", "urlParameter", "monthlyPriceArray", "c", "selectedPriceByUrl", "closest", "selectedObject", "CLEAR_MONTHLY_PRICES", "searchValue", "SET_SEARCH_DEVICE_VALUE", "productsFilter", "SET_PRODUCTS_FILTER"],
    "mappings": "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",
    "sourcesContent": ["import * as ACTIONS from \"../actionTypes\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\n\nexport const products = (state = [], action) => {\n    switch (action.type) {\n        case ACTIONS.GET_ALL_PRODUCTS:\n            return action.products;\n        case ACTIONS.FILTER_ACTION_IDENTIFIER:\n            return action.products;\n        case ACTIONS.SET_SELECTED_VARIANT_ON_LIST:\n            return {...state, [\"data\"]: action.products};\n        default:\n            return state\n    }\n};\n\nexport const categories = (state = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.GET_PRODUCTS_TREES:\n            return action.payload;\n        default:\n            return state\n    }\n};\n\nexport const filterConfiguration = (state = {}, action) => {\n    switch (action.type) {\n        case ACTIONS.FETCH_FILTER_CONFIGURATION:\n            return action.filterConfiguration;\n        case ACTIONS.GET_INIT_FILTERS:\n            return {...state, [\"categoryFilter\"]: action.filters};\n        case ACTIONS.GET_FILTERS:\n            return {...state, [\"categoryFilter\"]: action.filters};\n        case ACTIONS.SET_STICKER_FILTER:\n            return {...state, [\"stickerFilter\"]: action.filters};\n        default:\n            return state\n    }\n};\n\nexport const selectedProducer = (state = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.SET_SELECTED_PRODUCER:\n            return action.selectedProducer;\n        case ACTIONS.FETCH_FILTER_CONFIGURATION:\n            if(checkProducer(action.filterConfiguration, action.initProducer)){\n                return action.initProducer;\n            } else {\n                return \"\";\n            }\n        default:\n            return state;\n    }\n};\n\nexport const currentPage = (state = 1, action) => {\n    switch (action.type) {\n        case ACTIONS.CHANGE_CURRENT_PAGE:\n            return action.payload;\n        case ACTIONS.GET_ALL_PRODUCTS:\n            return (action.products && action.products.currentPage) ? action.products.currentPage : 1;\n        default:\n            return state\n    }\n};\n\nexport const initiallyFiltered = (state = false, action) => {\n    switch (action.type) {\n        case ACTIONS.GET_ALL_PRODUCTS:\n            return true;\n        default:\n            return state\n    }\n};\n\nfunction checkProducer(configuration, initProducer){\n    let result = false;\n\n    configuration.producerFilter.map(producer => {\n        if(producer.name === initProducer){\n            result = true;\n            return;\n        }\n    });\n\n    return result;\n}\n\nfunction checkSort(configuration, initSort){\n    return configuration && configuration.sortDefinition && configuration.sortDefinition.length &&\n        configuration.sortDefinition.findIndex(sort => sort.value === initSort) !== -1;\n}\n\nexport const selectedCategory = (state = decodeURI(OnlineUtils.getParameterValueFromUrl(\"selectedCategory\")) || \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.SET_SELECTED_CATEGORY:\n            if(action.selectedCategory)\n                return action.selectedCategory;\n            return state;\n        case ACTIONS.GET_PRODUCTS_TREES:\n            return action.initCategory ? action.initCategory : state;\n        default:\n            return state\n    }\n};\n\nexport const selectedCategoryName = (state = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.SET_SELECTED_CATEGORY:\n            if(action.selectedCategoryName)\n                return action.selectedCategoryName;\n            return state;\n        default:\n            return state\n    }\n};\n\nexport const selectedColor = (state = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.SET_SELECTED_COLOR:\n            return action.selectedColor;\n        default:\n            return state\n    }\n};\n\nexport const selectedSort = (state = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.SET_SELECTED_SORT:\n            return action.selectedSort;\n        case ACTIONS.FETCH_FILTER_CONFIGURATION:\n            if(checkSort(action.filterConfiguration, action.initSort)){\n                return action.initSort;\n            } else {\n                return \"\";\n            }\n        default:\n            return state\n    }\n};\n\nexport const actualAttrFilters = (state = {}, action) => {\n    switch (action.type) {\n        case ACTIONS.SET_ATTR_FILTERS:\n            return {...action.actualAttrFilters};\n        case ACTIONS.UPDATE_ATTR_FILTERS:\n            return {...action.actualAttrFilters};\n        case ACTIONS.GET_INIT_FILTERS:\n            return {...action.actualAttrFilters};\n        default:\n            return state\n    }\n};\n\nexport const actualStickerAttrFilters = (state = {}, action) => {\n    switch (action.type) {\n        case ACTIONS.SET_STICKER_ATTR_FILTERS:\n            return {...action.actualStickerAttrFilters};\n        case ACTIONS.UPDATE_STICKER_ATTR_FILTERS:\n            return {...action.actualStickerAttrFilters};\n        case ACTIONS.GET_INIT_FILTERS:\n            return {...action.actualStickerAttrFilters};\n        default:\n            return state\n    }\n};\n\nexport const actualAttrNumberFilters = (state = {}, action) => {\n    switch (action.type) {\n        case ACTIONS.SET_ATTR_NUMBER_FILTERS:\n            return {...action.actualAttrNumberFilters};\n        case ACTIONS.UPDATE_NUMBER_ATTR_FILTERS:\n            return {...action.actualAttrNumberFilters};\n        case ACTIONS.GET_INIT_FILTERS:\n            return {...action.actualAttrNumberFilters};\n        default:\n            return state\n    }\n};\n\nexport const priceFilter = (state ={}, action) => {\n    switch (action.type) {\n        case ACTIONS.SET_PRICE_FILTERS:\n            return  {...state, [action.priceFilterType]: action.price};\n        default:\n            return state\n    }\n};\n\nexport const allVisibility = (state = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.SET_SELECTED_ALL_VISIBILITY:\n            return action.allVisibility;\n        default:\n            return state;\n    }\n};\n\nexport const matchToFilterData = (state = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.GET_MATCH_TO_DATA:\n            return {...action.matchToFilterData};\n        default:\n            return state;\n    }\n};\n\nexport const matchToFilter = (state = {}, action) => {\n    switch (action.type) {\n        case ACTIONS.SET_SELECTED_MODEL:\n            return {...action.matchToFilter};\n        case ACTIONS.UPDATE_MATCH_TO_FILTERS:\n            return {...action.matchToFilter};\n        case ACTIONS.GET_INIT_FILTERS:\n            return {...action.matchToFilter};\n        case ACTIONS.CLEAR_MATCH_TO_FILTERS:\n            return {...action.matchToFilter};\n        default:\n            return state;\n    }\n};\n\nexport const matchToFilterCounters = (state = {}, action) => {\n    switch (action.type) {\n        case ACTIONS.UPDATE_MATCH_TO_FILTER_COUNTERS:\n            OPL.UI.fire(OPL.UI.EVENTS.modules.categorytree.updatecounter, action.matchToFilterCounterData, \"match-to-tree\");\n            return {...action.matchToFilterCounterData};\n        default:\n            return state;\n    }\n};\n\n\nexport const filterModalOpened = (state = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.SET_OPENED_FILTER_MODAL:\n            return action.opened;\n        default:\n            return state;\n    }\n};\n\nexport const selectedOneTimePrices = (state = {}, action) => {\n    switch (action.type) {\n        case ACTIONS.SELECT_ONE_TIME_PRICE:\n            let newState = {};\n            newState[action.id] = !state[action.id];\n            return Object.assign({}, state, newState);\n        case ACTIONS.REGISTER_ONE_TIME_PRICE_CMS_CONF:\n            const parsedParameterObjectArray = OnlineUtils.parseOneTimeCostPricesUrlParameter();\n            if (!parsedParameterObjectArray.length) {\n                return {};\n            }\n            const cmsConfFromUrl = action.cmsConf && action.cmsConf.filter(conf => parsedParameterObjectArray.find(param => param.to == conf.to && param.from == conf.from));\n            const newState2 = {};\n            cmsConfFromUrl.map(value => newState2[value.id] = true);\n            return Object.assign({}, state, newState2);\n        case ACTIONS.CLEAR_ONE_TIME_PRICES:\n            OnlineUtils.changeOrAddUrlParameterDisabledOnCheckout(\"oneTimeCost\", false)\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const selectedMaxMonthlyPrice = (state = {}, action) => {\n    switch (action.type) {\n        case ACTIONS.SELECT_MAX_MONTHLY_PRICE:\n            return {[action.id]: true};\n        case ACTIONS.REGISTER_MAX_MONTHLY_PRICE_CMS_CONF:\n            const urlParameter = OnlineUtils.getParameterValueFromUrl(\"maxMonthlyCost\");\n            const monthlyPriceArray = action.cmsConf.map(c => c.to);\n            const selectedPriceByUrl = OnlineUtils.closest(urlParameter,monthlyPriceArray);\n            const selectedObject = action.cmsConf.filter(conf => conf.to === selectedPriceByUrl);\n            const newState = {};\n\n            selectedObject.map(value => newState[value.id] = true);\n            return Object.assign({},state,newState);\n        case ACTIONS.CLEAR_MONTHLY_PRICES:\n            OnlineUtils.changeOrAddUrlParameterDisabledOnCheckout(\"maxMonthlyCost\",false);\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const searchValue = (state = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.SET_SEARCH_DEVICE_VALUE:\n            return action.searchValue;\n        default:\n            return state\n    }\n};\n\nexport const productsFilter = (state = \"\", action) => {\n    switch (action.type) {\n        case ACTIONS.SET_PRODUCTS_FILTER:\n            if (action.productsFilter) {\n                return action.productsFilter;\n            }\n            return state;\n        default:\n            return state\n    }\n};\n"],
    "file": "list.js"
}