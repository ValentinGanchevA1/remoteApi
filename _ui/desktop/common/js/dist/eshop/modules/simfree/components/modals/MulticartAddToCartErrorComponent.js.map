{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/simfree/components/modals/MulticartAddToCartErrorComponent.jsx"],
    "names": ["MulticartAddToCartErrorComponent", "props", "errors", "length", "errorMsg", "descriptions", "_", "isNil", "errorMessage", "getErrorMessage", "__html", "clearErrors", "bind", "confirmationButton", "checkOpenModal", "renderError", "Component", "mapStateToProps", "state", "mapDispatchToProps", "dispatch"],
    "mappings": ";;;;;;;AACA;AACA;AAEA;;;;;;MAKMA,gC;;;;;AAEF,8CAAYC,KAAZ,EAAmB;AAAA;AAAA,+BACTA,KADS;AAElB;;;;uCAEgB;AACb,eAAO,KAAKA,KAAL,CAAWC,MAAX,IAAqB,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,GAA2B,CAAvD;AACH;;;wCAEiB;AACd,YAAMC,QAAQ,GAAG,KAAKH,KAAL,CAAWI,YAAX,CAAwB,KAAKJ,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAxB,CAAjB;AACA,eAAOI,gBAAEC,KAAF,CAAQH,QAAR,IAAoB,KAAKH,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAApB,GAA2CE,QAAlD;AACH;;;oCAEa;AACV,YAAMI,YAAY,GAAG,KAAKC,eAAL,EAArB;;AACA,YAAI,mBAAOD,YAAP,CAAJ,EAA0B;AACtB,8BAAO;AAAK,YAAA,uBAAuB,EAAE;AAACE,cAAAA,MAAM,EAAEF;AAAT;AAA9B,YAAP;AACH;;AACD,4BACI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI,yCACKA,YADL,CADJ,CADJ,eAMI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI,6BAAC,8BAAD;AAAW,UAAA,OAAO,EAAE,KAAKP,KAAL,CAAWU,WAAX,CAAuBC,IAAvB,CAA4B,IAA5B,CAApB;AAAuD,UAAA,SAAS,EAAC;AAAjE,WACK,KAAKX,KAAL,CAAWI,YAAX,CAAwBQ,kBAD7B,CADJ,CANJ,CADJ,CADJ;AAgBH;;;+BAEQ;AACL,4BACI,6BAAC,cAAD;AAAU,UAAA,EAAE,EAAE,mBAAd;AAAmC,UAAA,SAAS,EAAE,IAA9C;AAAoD,UAAA,IAAI,EAAE,KAAKC,cAAL,EAA1D;AACU,UAAA,OAAO,EAAE,KAAKb,KAAL,CAAWU,WAAX,CAAuBC,IAAvB,CAA4B,IAA5B,CADnB;AACsD,UAAA,IAAI,EAAC,QAD3D;AACoE,UAAA,UAAU,EAAE;AADhF,WAEK,KAAKG,WAAL,EAFL,CADJ;AAMH;;;IA7C0CC,gB;;AAiD/C,MAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC5BhB,MAAAA,MAAM,EAAE,iCAAiBgB,KAAjB;AADoB,KAAL;AAAA,GAA3B;;AAGA,MAAIC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,WAAK;AAClCT,MAAAA,WAAW,EAAE;AAAA,eAAMS,QAAQ,CAAC,uBAAD,CAAd;AAAA;AADqB,KAAL;AAAA,GAAjC;;iBAIe,yBAAQH,eAAR,EAAyBE,kBAAzB,EAA6CnB,gCAA7C,C",
    "sourcesContent": ["import {connect} from \"react-redux\";\nimport _ from \"lodash\";\nimport React, {Component} from \"react\";\nimport {OraButton} from \"eshop/components/OraCommonComponents\";\nimport OraModal from \"eshop/modules/core/components/ui/Modal\";\nimport {getProcessErrors} from \"../../selectors\";\nimport {clearErrors} from \"../../actions/app\";\nimport {isHtml} from \"../../../configurator/utils\";\n\nclass MulticartAddToCartErrorComponent extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    checkOpenModal() {\n        return this.props.errors && this.props.errors.length > 0;\n    }\n\n    getErrorMessage() {\n        const errorMsg = this.props.descriptions[this.props.errors[0]];\n        return _.isNil(errorMsg) ? this.props.errors[0] : errorMsg;\n    }\n\n    renderError() {\n        const errorMessage = this.getErrorMessage();\n        if (isHtml(errorMessage)) {\n            return <div dangerouslySetInnerHTML={{__html: errorMessage}}></div>;\n        }\n        return (\n            <div className=\"u-padding-all-m u-small-padding-s\">\n                <div className=\"l-row u-letter-spacing-xs\">\n                    <div className=\"l-col l-col-12\">\n                        <h4>\n                            {errorMessage}\n                        </h4>\n                    </div>\n                    <div className=\"l-col l-col-small-12 l-col-medium-4 l-col-4 medium-offset-by-8 large-offset-by-8 u-text-right\">\n                        <OraButton onClick={this.props.clearErrors.bind(this)} className=\"u-w-100 \">\n                            {this.props.descriptions.confirmationButton}\n                        </OraButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <OraModal id={\"add-to-cart-error\"} showClose={true} open={this.checkOpenModal()}\n                      onClose={this.props.clearErrors.bind(this)} size=\"narrow\" clickClose={false}>\n                {this.renderError()}\n            </OraModal>\n        )\n    }\n\n}\n\nlet mapStateToProps = state => ({\n    errors: getProcessErrors(state),\n});\nlet mapDispatchToProps = dispatch => ({\n    clearErrors: () => dispatch(clearErrors())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MulticartAddToCartErrorComponent)\n"],
    "file": "MulticartAddToCartErrorComponent.js"
}