{
    "version": 3,
    "sources": ["../../../../../es6/eshop/modules/simfree/selectors.js"],
    "names": ["getSimfreeState", "state", "getProductCart", "simfree", "cart", "getProductList", "list", "getProductDetails", "details", "getComparator", "comparator", "getDeliveryAndPaymentHtml", "deliveryAndPaymentHtml", "getDeliveryAndPaymentComponentUid", "deliveryAndPaymentComponentUid", "getStorageCapacityForProduct", "productStorageCapacity", "getProductOfferFilter", "offerFilter", "getMetaData", "metaData", "getProductName", "product", "name", "getProductImageUrl", "imageUrl", "getSelectedBaseDeviceCode", "selectedBaseDeviceCode", "getSelectedVariant", "selectedVariant", "getSelectedVariantObject", "selectedVariantObject", "getSelectedDeviceTab", "selectedDeviceTab", "isProductDetailsPage", "document", "getElementById", "isProductListPage", "window", "location", "pathname", "indexOf", "isAccessoryListPage", "getSelectedVariantObjectId", "productId", "getChosenImageIndex", "chosenImageIndex", "getRating", "rating", "getMessage", "message", "getLogin", "login", "getReviewSend", "reviewSend", "getProductListWrapper", "products", "getProductListData", "wrapper", "data", "getSelectedSort", "selectedSort", "getAllVisibility", "allVisibility", "getSelectedVariantOnList", "getCurrentPageData", "currentPage", "getInitiallyFiltered", "initiallyFiltered", "getProductDataForVariantId", "id", "find", "device", "variantList", "variant", "getSelectedDeviceObject", "getSelectedDeviceId", "selectedDeviceId", "productListData", "getProductsTrees", "categories", "isProductTreeEmpty", "tree", "subCategories", "length", "getFilterConfiguration", "filterConfiguration", "getSelectedProducer", "selectedProducer", "getSelectedPrice", "priceFilter", "getSelectedColor", "selectedColor", "getSelectedCategory", "selectedCategory", "getSelectedCategoryName", "selectedCategoryName", "getSearchValue", "searchValue", "getComparatorConfig", "comparatorConfig", "getComparatorDevices", "devices", "getModelsForBrand", "modelsForBrand", "getDeviceBrands", "deviceBrands", "getProducers", "producers", "getSelectedComparatorProducer", "getSelectedComparatorModel", "selectedModel", "getIsComparatorCategory", "isComparatorCategory", "getErrorCode", "errorCode", "checkTreeContainsElement", "productsTree", "checkSelectedCategory", "element", "code", "checkSubcategory", "result", "map", "pos", "index", "getIsSalesOfGoodsPage", "getSelectedProcessTypeValue", "process", "getActualFilters", "categoryFilter", "getActualStickerFilters", "stickerFilter", "getSortDefinition", "getSelectedOfferType", "getClientContext", "offerType", "clientContext", "isSalesOfGoodsPage", "sortDefinition", "console", "log", "filter", "filterSortVoiceConvergent", "filterSortVoice", "filterSortNoSimfree", "array", "value", "getSelectedFilter", "actualAttrFilters", "getSelectedStickerFilter", "actualStickerAttrFilters", "getMatchToDataList", "matchToFilterData", "getMatchToFilter", "matchToFilter", "getMainCategory", "mainCategory", "getSelectedNumberFilter", "actualAttrNumberFilters", "getOpenFilterModal", "filterModalOpened", "getMiniCartData", "getVerificationNeeded", "verificationNeeded", "getOpenVerificationModal", "openVerificationModal", "getSelectedOfferTypeCmsConf", "getOfferTypeCmsConf", "cms", "getSelectedOfferTypeDescriptions", "selectedOffer", "cmsDescriptions", "getSelectedOfferTypeCmsConfWithMagnum", "getMagnumType", "magnumType", "getProductListHeader", "productListHeaderText", "getOfferTypesForSelect", "Object", "values", "sort", "offer1", "offer2", "priority", "offer", "description", "productListSelectText", "getCurrentSelectedAvailableProductsKey", "availableProductListPK", "getCurrentSelectedAvailableProductsKeyByUrlParameter", "OnlineUtils", "getParameterValueFromUrl", "getFirstAvailableProductsKey", "cmsConf", "getAvailableProductsKeys", "getSelectedSoftBundleGroup", "softBundleGroup", "getDefaultProcess", "getUseDefaultProcess", "use", "isEmbeddedMode", "getCookie", "defaultProcessForEmbeddedMode", "defaultProcess", "getDefaultProposition", "defaultProposition", "getDefaultServicePlans", "defaultServicePlans", "getDefaultServicePlan", "getOffersForCurrentFilters", "defaultPlans", "currentOffers", "isInCurrentOffers", "sp", "o", "rateplanBaseProductId", "isSimfreeInstOfferType", "getTieredOneTimePriceConf", "oneTimePriceFilterCmsConf", "getTieredMaxMonthlyPriceConf", "maxMonthlyPriceFilterCmsConf", "getTieredOneTimePriceForCurrentOfferType", "conf", "selectedOfferType", "getTieredMaxMonthlyPriceForCurrentOfferType", "getSelectedOneTimePrices", "selectedOneTimePrices", "getSelectedMaxMonthlyPrice", "selectedMaxMonthlyPrice", "getSelectedMaxMonthlyPriceId", "keys", "getSelectedOneTimePricesList", "ranges", "selected", "ret", "forEach", "r", "push", "getSelectedAllMaxMonthlyPricesIds", "getSelectedMaxMonthlyPriceRange", "options", "sel", "getSelectedPositiveTieredOneTimePrice", "a", "getProcessErrors", "errors", "addToCartInProgress", "getStateAddToCartButton", "getLastPos", "lastPos", "isPickupPosEnabled", "pickupPosEnabled", "getCashInvoiceLimit", "cashInvoiceLimit", "getCartInvoiceValue", "cartInvoiceValue", "filterLabelsHardcodedAsGross", "getMarketContext", "getPriceIsNet", "market", "showNet", "getShowRatingErrorModal", "showRatingErrorModal", "getFilterConfigurationFetched", "filterConfigurationFetched", "isDuet", "showCanonicalLink", "getProductsFilter", "productsFilter", "getDeliveryMethods", "deliveryMethods", "getSelectedProductStockLevel", "productVariant", "processType", "stockLevelsPerProcess", "stockLevel", "isSelectedProductInStock"],
    "mappings": "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",
    "sourcesContent": ["import {createSelector} from \"Reselect\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\nimport {getSelectedOfferType,getClientContext, getMarketContext, getOfferTypeCmsConf, getSelectedProcessTypeValue} from \"eshop/modules/configurator/selectors/filters\";\nimport {getMagnumType} from \"eshop/modules/magnum2/selectors\"\n\nimport {\n    getOffersForCurrentFilters,\n    getSelectedDeviceId,\n} from \"eshop/modules/configurator/selectors/offers\";\nimport {getPriceIsNet} from \"eshop/modules/cart/selectors\";\nimport {getUseDefaultProcess} from \"eshop/modules/configurator/selectors/filters\"\nconst getSimfreeState = state => state[\"simfree\"];\n\nexport const getProductCart = createSelector(getSimfreeState, simfree => simfree.cart)\nexport const getProductList = createSelector(getSimfreeState, simfree => simfree.list)\nexport const getProductDetails = createSelector(getSimfreeState, simfree => simfree.details)\nexport const getComparator = createSelector(getSimfreeState, simfree => simfree.comparator)\nexport const getDeliveryAndPaymentHtml = createSelector(getProductDetails, details => details.deliveryAndPaymentHtml)\nexport const getDeliveryAndPaymentComponentUid = createSelector(getProductDetails, details => details.deliveryAndPaymentComponentUid)\nexport const getStorageCapacityForProduct = createSelector(getProductDetails, details => details.productStorageCapacity)\n\nexport const getProductOfferFilter = createSelector(getSimfreeState, simfree => simfree.offerFilter)\nexport const getMetaData = createSelector(getSimfreeState, simfree => simfree && simfree.metaData)\n\n// selectors for product cart\nexport const getProductName = createSelector(getProductCart, product => product.name)\nexport const getProductImageUrl = createSelector(getProductCart, product => product.imageUrl)\nexport const getSelectedBaseDeviceCode = createSelector(getProductCart, product => product.selectedBaseDeviceCode)\nexport const getSelectedVariant = createSelector(getProductCart, product => product.selectedVariant)\nexport const getSelectedVariantObject = createSelector(getProductDetails, product => product.selectedVariantObject)\nexport const getSelectedDeviceTab = createSelector(getProductDetails, product => product.selectedDeviceTab)\nexport const isProductDetailsPage = createSelector( () => !!document.getElementById('ora-product-details-device'));\nexport const isProductListPage = createSelector( () => !!document.getElementById('ora-product-list-header-component') && window.location.pathname.indexOf('sklep')>-1);\nexport const isAccessoryListPage = createSelector( () => !!document.getElementById('ora-product-list-header-component') && window.location.pathname.indexOf('akcesoria')>-1);\nexport const getSelectedVariantObjectId = createSelector(getSelectedVariantObject, selectedVariant => selectedVariant && selectedVariant.productId)\n\nexport const getChosenImageIndex = createSelector(getProductCart, product => product.chosenImageIndex)\nexport const getRating = createSelector(getProductCart, product => product.rating)\nexport const getMessage = createSelector(getProductCart, product => product.message)\nexport const getLogin = createSelector(getProductCart, product => product.login)\nexport const getReviewSend = createSelector(getProductCart, product => product.reviewSend)\n\n// selectors for products list\nexport const getProductListWrapper = createSelector(getProductList, list => list.products)\nexport const getProductListData = createSelector(getProductListWrapper, wrapper => wrapper.data)\nexport const getSelectedSort = createSelector(getProductList, list => list.selectedSort)\nexport const getAllVisibility = createSelector(getProductList, list => list.allVisibility)\nexport const getSelectedVariantOnList = createSelector(getProductList, product => product.selectedVariant)\nexport const getCurrentPageData = createSelector(getProductList, list => list.currentPage);\nexport const getInitiallyFiltered = createSelector(getProductList, list => list.initiallyFiltered);\nexport const getProductDataForVariantId = (id) => createSelector(getProductListData, data => data && data.find(device => device.variantList && device.variantList.find(variant => variant.productId === id)));\n\nexport const getSelectedDeviceObject = createSelector([getSelectedDeviceId, getProductListData], (selectedDeviceId, productListData) =>\n    productListData && productListData.find(device => device.variantList && device.variantList.find(variant => variant.productId === selectedDeviceId)));\n\n// selectors for tree\nexport const getProductsTrees = createSelector(getProductList, list => list.categories)\nexport const isProductTreeEmpty = createSelector(getProductsTrees, tree => !tree.subCategories || tree.subCategories.length === 0);\nexport const getFilterConfiguration = createSelector(getProductList, list => list.filterConfiguration)\nexport const getSelectedProducer = createSelector(getProductList, list => list.selectedProducer)\nexport const getSelectedPrice = createSelector(getProductList, list => list.priceFilter)\nexport const getSelectedColor = createSelector(getProductList, list => list.selectedColor)\nexport const getSelectedCategory = createSelector(getProductList, list => list.selectedCategory)\nexport const getSelectedCategoryName = createSelector(getProductList, list => list.selectedCategoryName)\nexport const getSearchValue = createSelector(getProductList, list => list.searchValue)\n\n//selectors for comparator\nexport const getComparatorConfig = createSelector(getComparator, comparator => comparator.comparatorConfig)\nexport const getComparatorDevices = createSelector(getComparator, comparator => comparator.devices)\nexport const getModelsForBrand = createSelector(getComparator, comparator => comparator.modelsForBrand)\nexport const getDeviceBrands = createSelector(getComparator, comparator => comparator.deviceBrands)\nexport const getProducers = createSelector(getComparator, comparator => comparator.producers)\nexport const getSelectedComparatorProducer = createSelector(getComparator, comparator => comparator.selectedProducer)\nexport const getSelectedComparatorModel = createSelector(getComparator, comparator => comparator.selectedModel)\nexport const getIsComparatorCategory = createSelector(getComparator, comparator => comparator.isComparatorCategory)\nexport const getErrorCode = createSelector(getComparator, comparator => comparator.errorCode)\n\n\n\nexport const checkTreeContainsElement = createSelector([getSelectedCategory, getProductsTrees], (selectedCategory, productsTree) => {\n    return checkSelectedCategory(selectedCategory, productsTree);\n})\nfunction checkSelectedCategory(selectedCategory, element) {\n    if(selectedCategory===element.code){\n        return true;\n    }\n    return checkSubcategory(selectedCategory, element);\n}\n\nfunction checkSubcategory(selectedCategory, element) {\n    if(!element)\n        return false;\n    if(element.subCategories.length==0)\n        return false;\n\n    var result = false;\n\n    element.subCategories.map((pos, index) => {\n        if(pos.code === selectedCategory) {\n            result = true;\n            return true;\n        }\n\n        result = result || checkSubcategory(selectedCategory, pos);\n    });\n\n    return result;\n}\n// selector for banner's\nexport const getIsSalesOfGoodsPage = createSelector(getSelectedProcessTypeValue, process => {\n    return process === 'SALE_OF_GOODS';\n});\n\n// filter section\nexport const getActualFilters = createSelector(getFilterConfiguration, filterConfiguration => filterConfiguration.categoryFilter)\nexport const getActualStickerFilters = createSelector(getFilterConfiguration, filterConfiguration => filterConfiguration.stickerFilter)\nexport const getSortDefinition = createSelector([getFilterConfiguration,getSelectedOfferType,getClientContext, getIsSalesOfGoodsPage], (filterConfiguration,offerType,clientContext, isSalesOfGoodsPage) =>\n{\n    var sortDefinition=filterConfiguration.sortDefinition;\n    console.log(\"sortDefinition log\");\n    console.log(sortDefinition);\n    console.log(clientContext);\n    console.log(offerType);\n    if(sortDefinition) {\n        switch (offerType) {\n            case \"SIMFREE_INST\":\n                if(isSalesOfGoodsPage) {\n                    sortDefinition = sortDefinition.filter(filterSortVoiceConvergent);\n                    sortDefinition = sortDefinition.filter(filterSortVoice);\n                    break;\n                }\n            case 'VOICE':\n            case 'DATA':\n            case 'CONVERGENT':\n\n            default:\n                console.log(\"Entering default sortDefinition for offerType case\");\n                if (clientContext){\n                    sortDefinition=sortDefinition.filter(filterSortVoiceConvergent);\n                } else{\n                    sortDefinition=sortDefinition.filter(filterSortVoice);\n                }\n                sortDefinition=sortDefinition.filter(filterSortNoSimfree);\n                break;\n        }\n    }\n    console.log(sortDefinition);\n    return sortDefinition;\n}\n\n);\n function filterSortVoiceConvergent(element,index,array){\n    if(element.value==\"priceInOfferDesc\" || element.value==\"priceInOfferAsc\")\n        return false;\n    return true;\n }\n  function filterSortVoice(element,index,array){\n     if(element.value==\"convergentPriceInOfferDesc\" || element.value==\"convergentPriceInOfferAsc\")\n         return false;\n     return true;\n\n  }\n    function filterSortNoSimfree(element,index,array){\n       if(element.value==\"priceDesc\" || element.value==\"priceAsc\")\n           return false;\n       return true;\n\n    }\nexport const getSelectedFilter = createSelector(getProductList, list => list.actualAttrFilters)\nexport const getSelectedStickerFilter = createSelector(getProductList, list => list.actualStickerAttrFilters)\nexport const getMatchToDataList = createSelector(getProductList, list => list.matchToFilterData)\nexport const getMatchToFilter = createSelector(getProductList, list => list.matchToFilter)\nexport const getMainCategory =  createSelector(getProductList, list => list.mainCategory)\nexport const getSelectedNumberFilter = createSelector(getProductList, list => list.actualAttrNumberFilters)\nexport const getOpenFilterModal = createSelector(getProductList, list => list.filterModalOpened)\nexport const getMiniCartData = createSelector(getSimfreeState, simfree => simfree.cart)\n\n// offer type filters\nexport const getVerificationNeeded = createSelector(getProductOfferFilter, offerFilter => offerFilter.verificationNeeded);\nexport const getOpenVerificationModal = createSelector(getProductOfferFilter, offerFilter => offerFilter.openVerificationModal);\n\nexport const getSelectedOfferTypeCmsConf = createSelector([getOfferTypeCmsConf,getSelectedOfferType], (cms,offerType) => cms[offerType]);\nexport const getSelectedOfferTypeDescriptions = createSelector(getSelectedOfferTypeCmsConf, selectedOffer => selectedOffer && selectedOffer.cmsDescriptions || \"\" );\nexport const getSelectedOfferTypeCmsConfWithMagnum = createSelector([getOfferTypeCmsConf,getSelectedOfferType,getMagnumType], (cms,offerType, magnumType) => {\n    if (offerType === 'CONVERGENT') {\n        return cms[magnumType];\n    }\n    return cms[offerType];\n});\nexport const getProductListHeader = createSelector(getSelectedOfferTypeCmsConfWithMagnum, selectedOffer =>  selectedOffer && selectedOffer.productListHeaderText);\n\n\nexport const getOfferTypesForSelect = createSelector(getOfferTypeCmsConf, cms => Object.values(cms)\n    .sort((offer1, offer2) => offer2.priority - offer1.priority)\n    .map(offer => ({\n        value: offer.offerType,\n        description: offer.productListSelectText\n    }))\n);\nexport const getCurrentSelectedAvailableProductsKey = createSelector(getSelectedOfferTypeCmsConf, cms => cms && cms.availableProductListPK || \"\");\nexport const getCurrentSelectedAvailableProductsKeyByUrlParameter = createSelector(getOfferTypeCmsConf, (cms) => {\n                let offerType = OnlineUtils.getParameterValueFromUrl(\"offerType\")\n                if (offerType && cms){\n                    return (cms[offerType] && cms[offerType].availableProductListPK) || \"\"\n                }\n});//ask me if you dont agree\n\nexport const getFirstAvailableProductsKey = createSelector(getOfferTypeCmsConf, cmsConf => cmsConf && Object.values(cmsConf)  && Object.values(cmsConf)[0] && Object.values(cmsConf)[0].availableProductListPK || \"\");\nexport const getAvailableProductsKeys = createSelector(getOfferTypeCmsConf, cmsConf => cmsConf && Object.values(cmsConf).map(cmsConf => cmsConf.availableProductListPK));\nexport const getSelectedSoftBundleGroup = createSelector(getSelectedOfferTypeCmsConf, cmsConf => cmsConf && cmsConf.softBundleGroup);\n\nexport const getDefaultProcess = createSelector([getSelectedOfferTypeCmsConf,getUseDefaultProcess], (cms,use) => {\n    let isEmbeddedMode = OnlineUtils.getCookie('OPL_EMBEDDED_MODE');\n    if(isEmbeddedMode && cms && use && cms.defaultProcessForEmbeddedMode){\n        return cms.defaultProcessForEmbeddedMode;\n    }\n    return cms && use && cms.defaultProcess ? cms.defaultProcess:\"\"\n});\nexport const getDefaultProposition = createSelector([getSelectedOfferTypeCmsConf], cms => cms && cms.defaultProposition)\nconst getDefaultServicePlans = createSelector([getSelectedOfferTypeCmsConf], cms => cms && cms.defaultServicePlans || [])\nexport const getDefaultServicePlan = createSelector([getDefaultServicePlans, getOffersForCurrentFilters], (defaultPlans, currentOffers) => {\n\n    if (currentOffers) {\n        let isInCurrentOffers = (sp) => currentOffers.map(o => o.rateplanBaseProductId).indexOf(sp) > -1\n        return defaultPlans.filter(isInCurrentOffers)[0] || defaultPlans[0]\n    } else {\n        return defaultPlans ? defaultPlans[0] : null\n    }\n})\n\n\n\nexport const isSimfreeInstOfferType = createSelector(getSelectedOfferType, offerType => {\n    return offerType === 'SIMFREE_INST';\n});\n\n//Tiered one time price\nexport const getTieredOneTimePriceConf = createSelector(getMetaData, metaData => metaData && metaData.oneTimePriceFilterCmsConf);\nexport const getTieredMaxMonthlyPriceConf = createSelector(getMetaData, metaData => metaData && metaData.maxMonthlyPriceFilterCmsConf);\n\nexport const getTieredOneTimePriceForCurrentOfferType = createSelector([getTieredOneTimePriceConf,getSelectedOfferType], (conf,selectedOfferType) => conf[selectedOfferType]);\nexport const getTieredMaxMonthlyPriceForCurrentOfferType = createSelector([getTieredMaxMonthlyPriceConf, getSelectedOfferType], (conf,selectedOfferType) => conf[selectedOfferType]);\n\nexport const getSelectedOneTimePrices = createSelector(getProductList, list => list.selectedOneTimePrices);\nexport const getSelectedMaxMonthlyPrice = createSelector(getProductList, list => list.selectedMaxMonthlyPrice);\n\n\n//FIXME zwraca pierwszy element a nie dla konkretnie wybranej oferty\nexport const getSelectedMaxMonthlyPriceId = createSelector(getSelectedMaxMonthlyPrice, list => {\nreturn  list && Object.keys(list)[0]\n});\nexport const  getSelectedOneTimePricesList=createSelector([getTieredOneTimePriceForCurrentOfferType,getSelectedOneTimePrices],\n    (ranges,selected)=>{\n        var ret=[];\n        if(ranges)\n            ranges.forEach(r=> {if(selected[r.id])ret.push(r)});\n        return ret;\n    }\n);\n\n\n\nexport const getSelectedAllMaxMonthlyPricesIds = createSelector(getSelectedMaxMonthlyPrice, list => list && Object.keys(list) || []);\n\nexport const getSelectedMaxMonthlyPriceRange = createSelector([getTieredMaxMonthlyPriceForCurrentOfferType, getSelectedAllMaxMonthlyPricesIds],\n    (options, selected) => {\n    return options && options.find(o=> selected.find(sel => sel === o.id))\n    }\n);\n\n\nexport const getSelectedPositiveTieredOneTimePrice = createSelector(getSelectedOneTimePrices, selected => selected && selected.filter(a => a));\n\nexport const getProcessErrors = createSelector(getProductCart, cart => cart.errors);\n\nexport const addToCartInProgress = createSelector(getProductCart, cart => cart.addToCartInProgress);\nexport const getStateAddToCartButton = createSelector(getSimfreeState, simfree => simfree.cart.addToCartInProgress);\nexport const getLastPos = createSelector(getSimfreeState, simfree => simfree.cart.lastPos);\nexport const isPickupPosEnabled = createSelector(getSimfreeState, simfree => simfree.cart.pickupPosEnabled);\nexport const getCashInvoiceLimit = createSelector(getSimfreeState, simfree => simfree.cart.cashInvoiceLimit);\nexport const getCartInvoiceValue = createSelector(getSimfreeState, simfree => simfree.cart.cartInvoiceValue);\n\nexport const filterLabelsHardcodedAsGross = createSelector([getMarketContext, getPriceIsNet], (market, showNet) => market==\"B2B\" && showNet == false);\n\nexport const getShowRatingErrorModal = createSelector(getProductDetails, details => details.showRatingErrorModal);\n\nexport const getFilterConfigurationFetched = createSelector(getMetaData, metaData => metaData.filterConfigurationFetched);\n\nexport const isDuet = createSelector(getProductDetails, details => details.isDuet);\nexport const showCanonicalLink = createSelector(getProductDetails, details => details.showCanonicalLink);\n\nexport const getProductsFilter = createSelector(getProductList, list => list.productsFilter);\n\nexport const getDeliveryMethods = createSelector(getProductDetails, details => details.deliveryMethods);\nexport const getSelectedProductStockLevel = createSelector([getSelectedVariantObject, getSelectedProcessTypeValue], (productVariant, processType) => {\n    if (productVariant && processType) {\n        if (productVariant.stockLevelsPerProcess && productVariant.stockLevelsPerProcess[processType]) {\n            return productVariant.stockLevelsPerProcess[processType].stockLevel;\n        }\n        return productVariant.stockLevel;\n    }\n    return null;\n});\nexport const isSelectedProductInStock = createSelector(getSelectedProductStockLevel, stockLevel => !!stockLevel && stockLevel > 0);"],
    "file": "selectors.js"
}