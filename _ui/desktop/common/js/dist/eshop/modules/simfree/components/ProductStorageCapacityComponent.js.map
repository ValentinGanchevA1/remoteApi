{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/simfree/components/ProductStorageCapacityComponent.jsx"],
    "names": ["ProductStorageCapacityComponent", "props", "fetchStorageCapacityForProduct", "url", "window", "location", "id", "selectedBaseDeviceCode", "productStorageCapacity", "length", "map", "item", "storageCapacity", "setUrlOnClickAction", "isProductChosen", "React", "Component", "mapDispatchToProps", "dispatch", "mapStateToProps", "state"],
    "mappings": ";;;;;;;AAAA;;;;;;MAMMA,+B;;;;;AACF,6CAAYC,KAAZ,EAAmB;AAAA;AAAA,+BACTA,KADS;AAElB;;;;0CAEmB;AAChB,aAAKA,KAAL,CAAWC,8BAAX;AACH;;;0CAEmBC,G,EAAK;AACrB,YAAGA,GAAH,EAAQ;AACJC,UAAAA,MAAM,CAACC,QAAP,GAAkBF,GAAlB;AACH;AAEJ;;;sCAEeG,E,EAAI;AACjB,eAAOA,EAAE,KAAK,KAAKL,KAAL,CAAWM,sBAAzB;AACF;;;+BAEQ;AAAA;;AACL,eAAQ,KAAKN,KAAL,CAAWO,sBAAX,IAAqC,KAAKP,KAAL,CAAWO,sBAAX,CAAkCC,MAAlC,GAA2C,CAAjF,gBACH;AACI,UAAA,SAAS,EAAC;AADd,wBAEI,+DAFJ,eAII,4DACI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI;AAAQ,UAAA,SAAS,EAAC;AAAlB,0CADJ,EAEC,KAAKR,KAAL,CAAWO,sBAAX,CAAkCE,GAAlC,CAAsC,UAAAC,IAAI,EAAI;AAC3C,8BACQ;AAAO,YAAA,SAAS,EAAC;AAAjB,0BACI;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAC,UAAzB;AAAoC,YAAA,KAAK,EAAEA,IAAI,CAACC,eAAhD;AAAiE,YAAA,GAAG,EAAED,IAAI,CAACL,EAA3E;AAA+E,YAAA,OAAO,EAAE;AAAA,qBAAM,KAAI,CAACO,mBAAL,CAAyBF,IAAI,CAACR,GAA9B,CAAN;AAAA,aAAxF;AACO,YAAA,cAAc,EAAE,KAAI,CAACW,eAAL,CAAqBH,IAAI,CAACL,EAA1B;AADvB,YADJ,eAGQ;AAAK,YAAA,SAAS,EAAC;AAAf,0BAAmC,2CAAOK,IAAI,CAACC,eAAZ,CAAnC,CAHR,CADR;AAOH,SARA,CAFD,CADJ,CAJJ,eAkBI,uCAlBJ,CADG,GAuBH,IAvBJ;AAwBH;;;IA7CyCG,eAAMC,S;;AAsDpD,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,WAAK;AACpChB,MAAAA,8BAA8B,EAAE;AAAA,eAAMgB,QAAQ,CAAC,0CAAD,CAAd;AAAA;AADI,KAAL;AAAA,GAAnC;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC9BZ,MAAAA,sBAAsB,EAAG,6CAA6BY,KAA7B,CADK;AAE9Bb,MAAAA,sBAAsB,EAAE,0CAA0Ba,KAA1B;AAFM,KAAL;AAAA,GAA7B;;iBAKe,yBAAQD,eAAR,EAAyBF,kBAAzB,EAA6CjB,+BAA7C,C",
    "sourcesContent": ["import React from \"react\";\nimport {fetchStorageCapacityForProduct} from \"eshop/modules/simfree/actions/app\";\nimport {getStorageCapacityForProduct} from \"eshop/modules/simfree/selectors\";\nimport {getSelectedBaseDeviceCode} from \"eshop/modules/simfree/selectors\";\nimport {connect} from \"react-redux\";\n\nclass ProductStorageCapacityComponent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.fetchStorageCapacityForProduct();\n    }\n\n    setUrlOnClickAction(url) {\n        if(url) {\n            window.location = url;\n        }\n\n    }\n\n    isProductChosen(id) {\n       return id === this.props.selectedBaseDeviceCode\n    }\n\n    render() {\n        return (this.props.productStorageCapacity && this.props.productStorageCapacity.length > 0 ) ? (\n            <div\n                className=\"l-col l-col-small-12 l-col-medium-8 l-col-6  u-small-padding-l u-medium-padding-left-l u-small-padding-left-l u-medium-padding-right-l u-small-padding-right-l\">\n                <p>Pojemność:\n                </p>\n                <fieldset>\n                    <div className=\"opl-chooser\">\n                        <legend className=\"u-acc-hide\">Pojemność telefonu</legend>\n                    {this.props.productStorageCapacity.map(item => {\n                        return (\n                                <label className=\"opl-chooser__item\" >\n                                    <input type=\"radio\" name=\"capacity\" value={item.storageCapacity} key={item.id} onClick={() => this.setUrlOnClickAction(item.url)}\n                                           defaultChecked={this.isProductChosen(item.id)}/>\n                                        <div className=\"o-ci u-box-shadow\"><span>{item.storageCapacity}</span></div>\n                                </label>\n                        )\n                    })}\n                    </div>\n                </fieldset>\n                <p/>\n            </div>\n        )\n            :\n            null\n    }\n\n\n}\n\n\n\n\n\nconst mapDispatchToProps = dispatch => ({\n    fetchStorageCapacityForProduct: () => dispatch(fetchStorageCapacityForProduct())\n});\n\nconst mapStateToProps = state => ({\n    productStorageCapacity : getStorageCapacityForProduct(state),\n    selectedBaseDeviceCode: getSelectedBaseDeviceCode(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductStorageCapacityComponent);"],
    "file": "ProductStorageCapacityComponent.js"
}