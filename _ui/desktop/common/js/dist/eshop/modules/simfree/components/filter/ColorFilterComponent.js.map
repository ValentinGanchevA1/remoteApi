{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/simfree/components/filter/ColorFilterComponent.jsx"],
    "names": ["ColorFilterComponent", "props", "_renderColors", "filterConfiguration", "colorFilter", "map", "color", "setSelectedColor", "bind", "code", "selectedColor", "background", "cssCode", "name", "React", "Component", "mapStateToProps", "state", "mapDispatchToProps", "dispatch"],
    "mappings": ";;;;;;;AAAA;;;;;;MAKMA,oB;;;;;AAEF,kCAAYC,KAAZ,EAAmB;AAAA;AAAA,+BACTA,KADS;AAElB;;;;+BAEQ;AACL,4BACI,uDACI;AAAK,UAAA,SAAS,EAAC;AAAf,UADJ,eAEI;AAAG,UAAA,SAAS,EAAC;AAAb,oBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI,4DACI;AAAQ,UAAA,SAAS,EAAC;AAAlB,4BADJ,EAEK,KAAKC,aAAL,EAFL,CADJ,CADJ,CAHJ,eAWI;AAAK,UAAA,SAAS,EAAC;AAAf,UAXJ,CADJ;AAeH;;;sCAEc;AAAA;;AACX,eAAO,KAAKD,KAAL,CAAWE,mBAAX,CAA+BC,WAA/B,GAA8C,KAAKH,KAAL,CAAWE,mBAAX,CAA+BC,WAA/B,CAA2CC,GAA3C,CAA+C,UAACC,KAAD,EAAW;AAC3G,8BACI;AAAO,YAAA,SAAS,EAAC,yBAAjB;AAA2C,YAAA,OAAO,EAAE,KAAI,CAACL,KAAL,CAAWM,gBAAX,CAA4BC,IAA5B,CAAiC,KAAjC,EAAuCF,KAAK,CAACG,IAA7C;AAApD,0BACI;AAAO,YAAA,IAAI,EAAEH,KAAK,CAACG,IAAnB;AAAyB,YAAA,IAAI,EAAC,OAA9B;AAAsC,YAAA,OAAO,EAAEH,KAAK,CAACG,IAAN,IAAc,KAAI,CAACR,KAAL,CAAWS;AAAxE,YADJ,eAEI;AAAM,YAAA,KAAK,EAAE;AAACC,cAAAA,UAAU,EAAEL,KAAK,CAACM;AAAnB,aAAb;AAA0C,YAAA,SAAS,EAAC;AAApD,YAFJ,eAGI;AAAM,YAAA,SAAS,EAAC;AAAhB,aAA4CN,KAAK,CAACO,IAAlD,CAHJ,CADJ;AAOH,SARoD,CAA9C,GAQD,IARN;AASH;;;IAlC8BC,eAAMC,S;;AAqCzC,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC9Bd,MAAAA,mBAAmB,EAAE,uCAAuBc,KAAvB,CADS;AAE9BP,MAAAA,aAAa,EAAE,iCAAiBO,KAAjB;AAFe,KAAL;AAAA,GAA7B;;AAKA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,WAAe;AACtCZ,MAAAA,gBAAgB,EAAE,0BAACE,IAAD;AAAA,eAAUU,QAAQ,CAAC,8BAAiBV,IAAjB,CAAD,CAAlB;AAAA;AADoB,KAAf;AAAA,GAA3B;;iBAIe,yBAAQO,eAAR,EAAyBE,kBAAzB,EAA6ClB,oBAA7C,C",
    "sourcesContent": ["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {getFilterConfiguration, getSelectedColor} from \"../../selectors\";\nimport {setSelectedColor} from \"eshop/modules/simfree/actions/filter\";\n\nclass ColorFilterComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"o-separator u-spacing-l u-spacing-top\"></div>\n                <p className=\"h4 u-spacing-l\">Kolory</p>\n                <div className=\"u-spacing-l\">\n                    <div className=\"opl-color-chooser\">\n                        <fieldset>\n                            <legend className=\"u-acc-hide\">Kolor telefonu</legend>\n                            {this._renderColors()}\n                        </fieldset>\n                    </div>\n                </div>\n                <div className=\"u-clear-both\"></div>\n            </div>\n        )\n    }\n\n    _renderColors(){\n        return this.props.filterConfiguration.colorFilter ? (this.props.filterConfiguration.colorFilter.map((color) => {\n            return (\n                <label className=\"opl-color-chooser__item\" onClick={this.props.setSelectedColor.bind(this, color.code)}>\n                    <input name={color.code} type=\"radio\" checked={color.code == this.props.selectedColor}/>\n                    <span style={{background: color.cssCode}} className=\"opl-color-chooser__color opl-color-chooser__color--magnum\"></span>\n                    <span className=\"opl-color-chooser__label\">{color.name}</span>\n                </label>\n            )\n        })) : null\n    }\n}\n\nconst mapStateToProps = state => ({\n    filterConfiguration: getFilterConfiguration(state),\n    selectedColor: getSelectedColor(state)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    setSelectedColor: (code) => dispatch(setSelectedColor(code))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorFilterComponent);"],
    "file": "ColorFilterComponent.js"
}