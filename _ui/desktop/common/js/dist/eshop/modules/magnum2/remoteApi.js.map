{
    "version": 3,
    "sources": ["../../../../../es6/eshop/modules/magnum2/remoteApi.js"],
    "names": ["MAGNUM_PATH", "documentsComponent", "val", "convergentMigrationVariantsComponent", "getOrangeLoveDevices", "deviceListComponentPk", "propositionCode", "installmentsOption", "data", "getOrangeLovePropositions", "propositionComponentPk", "preZipCode", "postalCode", "cityId", "cityName", "streetId", "streetName", "estateNumber", "apartmentNumber", "selectedFixTransaction", "selectedMobileTransaction", "selectedLoyaltyPeriod", "url", "offerSelectionData", "loyaltyDuration", "transactions", "addressData", "town", "line1", "line2", "appartmentNo", "getPossibleTransactions", "availableBundleTypes", "transactionComponentPk", "transactionData", "bundleTypes", "fetchDocuments", "templatesIds", "componentId", "templates", "getMigrationOffers", "componentPk", "getNextMigrationOffer", "selectMigrationOffer", "offerType"],
    "mappings": "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",
    "sourcesContent": ["import {get, getPdf, post, postJsonObject, postJsonObjectNoResult, put} from \"eshop/flux/utils/OraApiUtils\";\nimport $ from \"jquery\";\nimport {prepareUrl} from \"../checkout/remoteApi\";\n\nconst MAGNUM_PATH = \"/magnum2\";\n\nconst documentsComponent = $('#documentsComponentId').val();\nconst convergentMigrationVariantsComponent = $('#convergentMigrationVariantsId').val();\n\nexport default {\n    getOrangeLoveDevices: (deviceListComponentPk, propositionCode, installmentsOption) => {\n        const data = {\n            deviceListComponentPk: deviceListComponentPk,\n            propositionCode: propositionCode,\n            installmentsOption: installmentsOption\n        };\n        return get(MAGNUM_PATH + \"/getRecommendedDevices\", data);\n    },\n\n    getOrangeLovePropositions: (propositionComponentPk, preZipCode, postalCode, cityId, cityName, streetId, streetName, estateNumber, apartmentNumber, selectedFixTransaction, selectedMobileTransaction, selectedLoyaltyPeriod) => {\n        const url = MAGNUM_PATH + \"/getPropositions?propositionComponentPk=\" + propositionComponentPk;\n        const offerSelectionData = {\n            loyaltyDuration: selectedLoyaltyPeriod,\n            transactions: [\n                selectedFixTransaction, selectedMobileTransaction\n            ]\n        };\n\n        if (cityId) {\n            offerSelectionData.addressData = {\n                preZipCode: preZipCode,\n                postalCode: postalCode,\n                cityId: cityId,\n                town: cityName,\n                streetId: streetId,\n                line1: streetName,\n                line2: estateNumber,\n                appartmentNo: apartmentNumber\n            };\n        }\n\n        return postJsonObject(url, offerSelectionData);\n    },\n\n\n    getPossibleTransactions: (addressData, availableBundleTypes, transactionComponentPk) => {\n        const transactionData = {\n            addressData: {\n                preZipCode: addressData.preZipCode,\n                postalCode: addressData.postalCode,\n                cityId: addressData.cityId,\n                town: addressData.cityName,\n                streetId: addressData.streetId,\n                line1: addressData.streetName,\n                line2: addressData.estateNumber,\n                appartmentNo: addressData.apartmentNumber\n            },\n            bundleTypes: availableBundleTypes\n        };\n        return postJsonObject(MAGNUM_PATH + \"/getPossibleTransactions?transactionComponentPk=\" + transactionComponentPk, transactionData);\n    },\n\n\n    fetchDocuments: (templatesIds = []) => {\n        return post(prepareUrl(MAGNUM_PATH + \"/getLandingPageDocuments\"),\n            {\n                componentId: documentsComponent,\n                templates: templatesIds\n            }\n        );\n    },\n\n    getMigrationOffers: () => {\n        return get(prepareUrl(\"/magnum/migration/offers\"),\n            {\n                componentPk: convergentMigrationVariantsComponent\n            }\n        );\n    },\n\n    getNextMigrationOffer: () => {\n        return get(prepareUrl(\"/magnum/migration/nextOffer\"),\n            {\n                componentPk: convergentMigrationVariantsComponent\n            }\n        );\n    },\n\n    selectMigrationOffer: (offerType) => {\n        return postJsonObject(prepareUrl(\"/magnum/migration/select\"), offerType);\n    }\n};"],
    "file": "remoteApi.js"
}