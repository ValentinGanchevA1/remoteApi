{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/magnum2/actions/data.js"],
    "names": ["getPossibleTransactions", "address", "availableBundleTypes", "transactionComponentPk", "dispatch", "splitZipCode", "zip", "preZipCode", "postalCode", "remote", "fetchPossibleTransactions", "start", "addressData", "cityId", "cityName", "streetId", "streetName", "estateNumber", "streetNumber", "apartmentNumber", "RemoteApi", "then", "data", "success", "error", "fetchOrangeLovePropositionList", "getState", "magnum", "wwt", "prevRequestId", "durationList", "requestId", "fetchDeviceListActions", "reset", "Date", "getTime", "fetchPropositionListActions", "fixTransaction", "selectedFixVoipTransaction", "process", "selectedFixBroadbandTransaction", "mobileTransaction", "selectedMobileTransaction", "selectedLoyaltyPeriod", "promise", "getOrangeLovePropositions", "propositionComponentPk", "fetchDocuments", "propositionCodes", "propositions", "map", "proposition", "code", "fetchDocumentsListActions", "_", "isEmpty", "documents", "fetchOrangeLoveDeviceList", "deviceListComponentPk", "propositionCode", "installmentsOption", "getOrangeLoveDevices", "indexOf", "zipSplit", "split", "length", "slice"],
    "mappings": ";;;;;;;AACA;AACA;AACA;;AAHA;AAKO,MAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,OAAD,EAAUC,oBAAV,EAAgCC,sBAAhC;AAAA,WAA2D,UAACC,QAAD,EAAc;AAAA,0BAC3EC,YAAY,CAACJ,OAAO,CAACK,GAAT,CAD+D;AAAA,UACrGC,UADqG,iBACrGA,UADqG;AAAA,UACzFC,UADyF,iBACzFA,UADyF;;AAE5GJ,MAAAA,QAAQ,CAACK,MAAM,CAACC,yBAAP,CAAiCC,KAAjC,EAAD,CAAR;AACA,UAAIC,WAAW,GAAG;AACdL,QAAAA,UAAU,EAAEA,UADE;AAEdC,QAAAA,UAAU,EAAEA,UAFE;AAGdK,QAAAA,MAAM,EAAEZ,OAAO,CAACY,MAHF;AAIdC,QAAAA,QAAQ,EAAEb,OAAO,CAACa,QAJJ;AAKdC,QAAAA,QAAQ,EAAEd,OAAO,CAACc,QALJ;AAMdC,QAAAA,UAAU,EAAEf,OAAO,CAACe,UANN;AAOdC,QAAAA,YAAY,EAAEhB,OAAO,CAACiB,YAPR;AAQdC,QAAAA,eAAe,EAAElB,OAAO,CAACkB;AARX,OAAlB;AAUA,aAAOC,mBAAUpB,uBAAV,CACHY,WADG,EAEHV,oBAFG,EAGHC,sBAHG,EAILkB,IAJK,CAKH,UAACC,IAAD;AAAA,eAAUlB,QAAQ,CAACK,MAAM,CAACC,yBAAP,CAAiCa,OAAjC,CAAyCD,IAAzC,CAAD,CAAlB;AAAA,OALG,EAMH,UAACE,KAAD;AAAA,eAAWpB,QAAQ,CAACK,MAAM,CAACC,yBAAP,CAAiCc,KAAjC,CAAuCA,KAAvC,CAAD,CAAnB;AAAA,OANG,CAAP;AAQH,KArBsC;AAAA,GAAhC;;;;AAuBA,MAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC;AAAA,WAAM,UAACrB,QAAD,EAAWsB,QAAX,EAAwB;AAAA,sBACvDA,QAAQ,EAD+C;AAAA,UACjEC,MADiE,aACjEA,MADiE;;AAAA,wBAE2BA,MAAM,CAACC,GAFlC;AAAA,UAEjEtB,GAFiE,eAEjEA,GAFiE;AAAA,UAE5DO,MAF4D,eAE5DA,MAF4D;AAAA,UAEpDC,QAFoD,eAEpDA,QAFoD;AAAA,UAE1CC,QAF0C,eAE1CA,QAF0C;AAAA,UAEhCC,UAFgC,eAEhCA,UAFgC;AAAA,UAENC,YAFM,eAEpBC,YAFoB;AAAA,UAEQC,eAFR,eAEQA,eAFR;AAIxE,UAAIU,aAAa,GAAGF,MAAM,CAACG,YAAP,CAAoBC,SAAxC;;AACA,UAAIF,aAAa,KAAK,IAAtB,EAA4B;AACxBzB,QAAAA,QAAQ,CAACK,MAAM,CAACuB,sBAAP,CAA8BC,KAA9B,EAAD,CAAR;AACH;;AACD,UAAMF,SAAS,GAAG,IAAIG,IAAJ,GAAWC,OAAX,EAAlB;AAEA/B,MAAAA,QAAQ,CAACK,MAAM,CAAC2B,2BAAP,CAAmCzB,KAAnC,CAAyC;AAACoB,QAAAA,SAAS,EAATA;AAAD,OAAzC,CAAD,CAAR;;AAVwE,2BAYvC1B,YAAY,CAACC,GAAD,CAZ2B;AAAA,UAYjEC,UAZiE,kBAYjEA,UAZiE;AAAA,UAYrDC,UAZqD,kBAYrDA,UAZqD;;AAcxE,UAAM6B,cAAc,GAAGV,MAAM,CAACW,0BAAP,CAAkCC,OAAlC,GAA4CZ,MAAM,CAACW,0BAAnD,GAAgFX,MAAM,CAACa,+BAA9G;AACA,UAAMC,iBAAiB,GAAGd,MAAM,CAACe,yBAAjC;AACA,UAAMC,qBAAqB,GAAGhB,MAAM,CAACgB,qBAArC;;AAEA,UAAMC,OAAO,GAAGxB,mBAAUyB,yBAAV,CACZlB,MAAM,CAACmB,sBADK,EAEZvC,UAFY,EAGZC,UAHY,EAIZK,MAJY,EAKZC,QALY,EAMZC,QANY,EAOZC,UAPY,EAQZC,YARY,EASZE,eATY,EAUZkB,cAVY,EAWZI,iBAXY,EAYZE,qBAZY,CAAhB;;AAeAC,MAAAA,OAAO,CAACvB,IAAR,CACI,UAACC,IAAD,EAAU;AACNO,QAAAA,aAAa,GAAGH,QAAQ,GAAGC,MAAX,CAAkBG,YAAlB,CAA+BC,SAA/C;;AACA,YAAIF,aAAa,KAAKE,SAAtB,EAAiC;AAC7B;AACH;;AACD3B,QAAAA,QAAQ,CAACK,MAAM,CAAC2B,2BAAP,CAAmCb,OAAnC,CAA2CD,IAA3C,CAAD,CAAR;AACH,OAPL,EAQI,UAACE,KAAD,EAAW;AACPpB,QAAAA,QAAQ,CAACK,MAAM,CAAC2B,2BAAP,CAAmCZ,KAAnC,CAAyCA,KAAzC,CAAD,CAAR;AACH,OAVL;AAYA,aAAOoB,OAAP;AACH,KA9C6C;AAAA,GAAvC;;;;AAgDA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAM,UAAC3C,QAAD,EAAWsB,QAAX,EAAwB;AACxD,UAAMsB,gBAAgB,GAAGtB,QAAQ,GAAGC,MAAX,CAAkBG,YAAlB,CAA+BmB,YAA/B,CAA4CC,GAA5C,CAAgD,UAAAC,WAAW;AAAA,eAAIA,WAAW,CAACC,IAAhB;AAAA,OAA3D,CAAzB;AAEAhD,MAAAA,QAAQ,CAACK,MAAM,CAAC4C,yBAAP,CAAiC1C,KAAjC,EAAD,CAAR;;AACA,UAAI2C,gBAAEC,OAAF,CAAUP,gBAAV,CAAJ,EAAiC;AAC7B5C,QAAAA,QAAQ,CAACK,MAAM,CAAC4C,yBAAP,CAAiC9B,OAAjC,CAAyC,EAAzC,CAAD,CAAR;AACH,OAFD,MAEO;AACH,eAAOH,mBAAU2B,cAAV,CAAyBC,gBAAzB,EAA2C3B,IAA3C,CACH,UAACmC,SAAD;AAAA,iBAAepD,QAAQ,CAACK,MAAM,CAAC4C,yBAAP,CAAiC9B,OAAjC,CAAyCiC,SAAzC,CAAD,CAAvB;AAAA,SADG,EAEH,UAAChC,KAAD;AAAA,iBAAWpB,QAAQ,CAACK,MAAM,CAAC4C,yBAAP,CAAiC7B,KAAjC,CAAuCA,KAAvC,CAAD,CAAnB;AAAA,SAFG,CAAP;AAIH;AACJ,KAZ6B;AAAA,GAAvB;;;;AAcA,MAAMiC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,qBAAD,EAAwBC,eAAxB,EAAyCC,kBAAzC;AAAA,WAAgE,UAACxD,QAAD,EAAc;AACnHA,MAAAA,QAAQ,CAACK,MAAM,CAACuB,sBAAP,CAA8BrB,KAA9B,EAAD,CAAR;;AACAS,yBAAUyC,oBAAV,CAA+BH,qBAA/B,EAAsDC,eAAtD,EAAuEC,kBAAvE,EAA2FvC,IAA3F,CACI,UAAAC,IAAI;AAAA,eAAIlB,QAAQ,CAACK,MAAM,CAACuB,sBAAP,CAA8BT,OAA9B,CAAsCD,IAAtC,CAAD,CAAZ;AAAA,OADR,EAEI,UAAAE,KAAK;AAAA,eAAIpB,QAAQ,CAACK,MAAM,CAACuB,sBAAP,CAA8BR,KAA9B,CAAoCA,KAApC,CAAD,CAAZ;AAAA,OAFT;AAIH,KANwC;AAAA,GAAlC;;;;AAQP,MAAMnB,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAS;AAC1B,QAAIC,UAAJ,EAAgBC,UAAhB;;AACA,QAAIF,GAAG,IAAIA,GAAG,CAACwD,OAAJ,CAAY,GAAZ,IAAmB,CAAC,CAA/B,EAAkC;AAC9B,UAAMC,QAAQ,GAAGzD,GAAG,CAAC0D,KAAJ,CAAU,GAAV,CAAjB;AACAzD,MAAAA,UAAU,GAAGwD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GAAsBF,QAAQ,CAAC,CAAD,CAA9B,GAAoC,EAAjD;AACAvD,MAAAA,UAAU,GAAGuD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GAAsBF,QAAQ,CAAC,CAAD,CAA9B,GAAoC,EAAjD;AACH,KAJD,MAIO;AACHxD,MAAAA,UAAU,GAAGD,GAAG,GAAGA,GAAG,CAAC4D,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAH,GAAqB,IAArC;AACA1D,MAAAA,UAAU,GAAGF,GAAG,GAAGA,GAAG,CAAC4D,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAH,GAAqB,IAArC;AACH;;AACD,WAAO;AAAC3D,MAAAA,UAAU,EAAVA,UAAD;AAAaC,MAAAA,UAAU,EAAVA;AAAb,KAAP;AACH,GAXD",
    "sourcesContent": ["// Fetch proposition list\nimport RemoteApi from \"../remoteApi\";\nimport * as remote from \"./magnum\";\nimport _ from \"lodash\";\n\nexport const getPossibleTransactions = (address, availableBundleTypes, transactionComponentPk) => (dispatch) => {\n    const {preZipCode, postalCode} = splitZipCode(address.zip);\n    dispatch(remote.fetchPossibleTransactions.start());\n    let addressData = {\n        preZipCode: preZipCode,\n        postalCode: postalCode,\n        cityId: address.cityId,\n        cityName: address.cityName,\n        streetId: address.streetId,\n        streetName: address.streetName,\n        estateNumber: address.streetNumber,\n        apartmentNumber: address.apartmentNumber,\n    };\n    return RemoteApi.getPossibleTransactions(\n        addressData,\n        availableBundleTypes,\n        transactionComponentPk\n    ).then(\n        (data) => dispatch(remote.fetchPossibleTransactions.success(data)),\n        (error) => dispatch(remote.fetchPossibleTransactions.error(error))\n    );\n};\n\nexport const fetchOrangeLovePropositionList = () => (dispatch, getState) => {\n    const {magnum} = getState();\n    const {zip, cityId, cityName, streetId, streetName, streetNumber: estateNumber, apartmentNumber} = magnum.wwt;\n\n    let prevRequestId = magnum.durationList.requestId;\n    if (prevRequestId !== null) {\n        dispatch(remote.fetchDeviceListActions.reset());\n    }\n    const requestId = new Date().getTime();\n\n    dispatch(remote.fetchPropositionListActions.start({requestId}));\n\n    const {preZipCode, postalCode} = splitZipCode(zip);\n\n    const fixTransaction = magnum.selectedFixVoipTransaction.process ? magnum.selectedFixVoipTransaction : magnum.selectedFixBroadbandTransaction;\n    const mobileTransaction = magnum.selectedMobileTransaction;\n    const selectedLoyaltyPeriod = magnum.selectedLoyaltyPeriod;\n\n    const promise = RemoteApi.getOrangeLovePropositions(\n        magnum.propositionComponentPk,\n        preZipCode,\n        postalCode,\n        cityId,\n        cityName,\n        streetId,\n        streetName,\n        estateNumber,\n        apartmentNumber,\n        fixTransaction,\n        mobileTransaction,\n        selectedLoyaltyPeriod\n    );\n\n    promise.then(\n        (data) => {\n            prevRequestId = getState().magnum.durationList.requestId;\n            if (prevRequestId !== requestId) {\n                return;\n            }\n            dispatch(remote.fetchPropositionListActions.success(data));\n        },\n        (error) => {\n            dispatch(remote.fetchPropositionListActions.error(error));\n        }\n    );\n    return promise;\n};\n\nexport const fetchDocuments = () => (dispatch, getState) => {\n    const propositionCodes = getState().magnum.durationList.propositions.map(proposition => proposition.code);\n\n    dispatch(remote.fetchDocumentsListActions.start());\n    if (_.isEmpty(propositionCodes)) {\n        dispatch(remote.fetchDocumentsListActions.success({}))\n    } else {\n        return RemoteApi.fetchDocuments(propositionCodes).then(\n            (documents) => dispatch(remote.fetchDocumentsListActions.success(documents)),\n            (error) => dispatch(remote.fetchDocumentsListActions.error(error))\n        );\n    }\n};\n\nexport const fetchOrangeLoveDeviceList = (deviceListComponentPk, propositionCode, installmentsOption) => (dispatch) => {\n    dispatch(remote.fetchDeviceListActions.start());\n    RemoteApi.getOrangeLoveDevices(deviceListComponentPk, propositionCode, installmentsOption).then(\n        data => dispatch(remote.fetchDeviceListActions.success(data)),\n        error => dispatch(remote.fetchDeviceListActions.error(error))\n    );\n};\n\nconst splitZipCode = (zip) => {\n    let preZipCode, postalCode;\n    if (zip && zip.indexOf('-') > -1) {\n        const zipSplit = zip.split(\"-\");\n        preZipCode = zipSplit.length > 0 ? zipSplit[0] : '';\n        postalCode = zipSplit.length > 1 ? zipSplit[1] : '';\n    } else {\n        preZipCode = zip ? zip.slice(0, 2) : null;\n        postalCode = zip ? zip.slice(2, 5) : null;\n    }\n    return {preZipCode, postalCode};\n};\n"],
    "file": "data.js"
}