{
    "version": 3,
    "sources": ["../../../../../es6/eshop/modules/magnum2/selectors.js"],
    "names": ["getMagnumState", "state", "getPossibleFixBroadbandTransactions", "magnum", "possibleTransactions", "transactions", "filter", "transaction", "subType", "TransactionSubType", "DATA", "factory", "FactoryType", "FIX", "pots", "getPossibleFixVoipTransactions", "isVoipTransaction", "selectedFixBroadbandTransaction", "process", "ProcessTypeEnum", "ACTIVATION", "_", "includes", "ACTIVATION_WITH_NP_INT", "ACTIVATION_NNAKED", "number", "requestState", "RequestState", "Success", "getAllFixVoipTransactions", "getPossibleMobileTransactions", "VOICE", "getSelectedFixBroadbandTransactionOption", "getSelectedFixVoipTransactionOption", "selectedFixVoipTransaction", "getSelectedMobileTransaction", "selectedMobileTransaction", "getSelectedFixTransaction", "getSelectedFixBBTransactionRaw", "getSelectedFixVoipTransactionRaw", "getSelectedMobileTransactionOption", "possibleTransaction", "selectedTransaction", "find", "t", "validateDidSearchClientient", "searchCustomer", "performed", "cimId", "getAllAvailableTechnologies", "durationList", "propositions", "flatMap", "p", "fixTechnologyList", "isTechnologyAvailableSelector", "technology", "availableTechnologies", "isADSLAvailable", "Technology", "ADSL", "isDTHAvailable", "VIDSAT", "isFTTHAvailable", "FTTH", "isXDSLAvailable", "some", "isXDSL", "showTechnologySwitch", "fTTHAvailable", "xDSLAvailable", "isShowOnlyFTTH", "showOnlyFTTH", "wwt", "wasSearchCustomerPerformed", "isCustomerSelectedMagnumLP", "searchCustomerPerformed", "undefined", "getMagnumType", "getPossibleTransactions", "getTransactions", "getMagnumTerminalProcess", "selectedProposition", "terminalProposition", "mobileVoiceBundleTemplateCode", "voice", "code", "salesChannel", "getMigrationFtthAvailabilityDateFromMagnum", "ftthAvailabilityDate"],
    "mappings": "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",
    "sourcesContent": ["import _ from \"lodash\";\nimport {createSelector} from \"Reselect\";\n\nimport FactoryType from \"../core/constants/FactoryTypeEnum\";\nimport {findTransaction, transactionKey} from \"./helpers/TransactionHelper\";\nimport {RequestState} from \"../core/constants/RequestState\";\nimport TransactionSubType from \"../cart/components/entriesList/TransactionSubType\";\nimport ProcessTypeEnum from \"./constants/ProcessTypeEnum\";\nimport Technology from \"../core/enum/Technology\";\n\nexport const getMagnumState = state => state['magnum'];\n\nexport const getPossibleFixBroadbandTransactions = createSelector(\n    getMagnumState,\n    magnum => magnum.possibleTransactions.transactions\n        .filter(transaction => transaction.subType === TransactionSubType.DATA || (transaction.factory === FactoryType.FIX && !transaction.pots))\n);\nexport const getPossibleFixVoipTransactions = createSelector(\n    getMagnumState,\n    magnum => {\n        function isVoipTransaction(transaction) {\n            if (magnum.selectedFixBroadbandTransaction.process === ProcessTypeEnum.ACTIVATION) {\n                return transaction.factory === FactoryType.FIX && transaction.pots && _.includes([ProcessTypeEnum.ACTIVATION_WITH_NP_INT, ProcessTypeEnum.ACTIVATION_NNAKED], transaction.process);\n            } else {\n                return transaction.factory === FactoryType.FIX && transaction.pots && (!transaction.number || transaction.number === magnum.selectedFixBroadbandTransaction.number);\n            }\n        }\n        if (magnum.possibleTransactions.requestState !== RequestState.Success) {\n            return [];\n        }\n        return magnum.possibleTransactions.transactions.filter(transaction => isVoipTransaction(transaction));\n    }\n);\nexport const getAllFixVoipTransactions = createSelector(\n    getMagnumState, magnum => magnum.possibleTransactions.transactions.filter(transaction => transaction.factory === FactoryType.FIX && transaction.pots)\n);\nexport const getPossibleMobileTransactions = createSelector(\n    getMagnumState,\n    magnum => magnum.possibleTransactions.transactions.filter(transaction => transaction.subType === TransactionSubType.VOICE)\n);\n\nexport const getSelectedFixBroadbandTransactionOption = createSelector(\n    getMagnumState, magnum => transactionKey(magnum.selectedFixBroadbandTransaction)\n);\nexport const getSelectedFixVoipTransactionOption = createSelector(\n    getMagnumState, magnum => transactionKey(magnum.selectedFixVoipTransaction)\n);\nexport const getSelectedMobileTransaction = createSelector(\n    getMagnumState, magnum => magnum.selectedMobileTransaction\n);\n\nexport const getSelectedFixTransaction = createSelector(\n    getMagnumState, magnum => magnum.selectedFixVoipTransaction.process ? magnum.selectedFixVoipTransaction : magnum.selectedFixBroadbandTransaction\n);\n\nexport const getSelectedFixBBTransactionRaw = createSelector(\n    getMagnumState, magnum => magnum.selectedFixBroadbandTransaction\n);\n\nexport const getSelectedFixVoipTransactionRaw = createSelector(\n    getMagnumState, magnum => magnum.selectedFixVoipTransaction\n);\n\nexport const getSelectedMobileTransactionOption = createSelector([getPossibleMobileTransactions, getSelectedMobileTransaction], (possibleTransaction, selectedTransaction) => {\n        const transaction = possibleTransaction.find(t => findTransaction(t, selectedTransaction));\n        return transaction ? transactionKey(transaction) : transactionKey(selectedTransaction);\n    }\n);\n\nexport const validateDidSearchClientient = createSelector(\n    getMagnumState, magnum => {\n        if( !!magnum.searchCustomer.performed || !!magnum.possibleTransactions.cimId) {\n            return true;\n        }\n        return false;\n    }\n);\n\nexport const getAllAvailableTechnologies = createSelector(\n    getMagnumState,\n    magnum => !!magnum.durationList && !!magnum.durationList.propositions && _.flatMap(magnum.durationList.propositions, p => p.fixTechnologyList) || []\n);\n\nconst isTechnologyAvailableSelector = technology => createSelector(\n    getAllAvailableTechnologies,\n    availableTechnologies => _.includes(availableTechnologies, technology)\n);\n\nexport const isADSLAvailable = isTechnologyAvailableSelector(Technology.ADSL);\nexport const isDTHAvailable = isTechnologyAvailableSelector(Technology.VIDSAT);\nexport const isFTTHAvailable = isTechnologyAvailableSelector(Technology.FTTH);\n\nexport const isXDSLAvailable = createSelector(\n    getAllAvailableTechnologies,\n    availableTechnologies => availableTechnologies.some(Technology.isXDSL)\n);\n\nexport const showTechnologySwitch = createSelector(\n    [isFTTHAvailable, isXDSLAvailable],\n    (fTTHAvailable, xDSLAvailable) => fTTHAvailable && xDSLAvailable\n);\n\nexport const isShowOnlyFTTH = createSelector(\n    getMagnumState,\n    magnum => !!magnum.durationList && magnum.durationList.showOnlyFTTH\n);\n\nexport const wwt = createSelector(\n    getMagnumState, magnum => magnum.wwt\n);\n\nexport const wasSearchCustomerPerformed = createSelector(getMagnumState, magnum => !!magnum && !!magnum.searchCustomer && magnum.searchCustomer.performed)\nexport const isCustomerSelectedMagnumLP = createSelector(\n    getMagnumState, magnum => {\n        const cimId = !!magnum && !!magnum.possibleTransactions && magnum.possibleTransactions.cimId;\n        const searchCustomerPerformed = !!magnum && !!magnum.searchCustomer && magnum.searchCustomer.performed;\n        return searchCustomerPerformed || (cimId !== null && cimId !== undefined);\n    }\n);\n\nexport const getMagnumType = createSelector(\n    getMagnumState, magnum => {\n        if (magnum.selectedMobileTransaction && magnum.selectedFixBroadbandTransaction && magnum.selectedMobileTransaction.process === 'RETENTION'\n                && (magnum.selectedFixBroadbandTransaction.process === 'TERMINATION' ||\n                magnum.selectedFixBroadbandTransaction.process === 'TERMINATION_DATA')) {\n            return magnum.selectedMobileTransaction.subType;\n        }\n        return 'CONVERGENT';\n    }\n);\n\nexport const getPossibleTransactions = createSelector(getMagnumState, magnum => magnum.possibleTransactions);\nexport const getTransactions = createSelector(getPossibleTransactions, possibleTransactions => possibleTransactions.transactions);\n\nexport const getMagnumTerminalProcess = createSelector(getMagnumState, magnum => {\n    if (magnum.selectedProposition) {\n        const terminalProposition = magnum.selectedProposition.mobileVoiceBundleTemplateCode;\n        if (terminalProposition.includes(magnum.selectedProposition.voice.code)) {\n            if (\"POS\" === magnum.possibleTransactions.salesChannel && \"MNP\" === magnum.selectedMobileTransaction.process) {\n                return \"MNP_TWOSTEP\";\n            } else {\n                return magnum.selectedMobileTransaction.process;\n            }\n        } else {\n            return magnum.selectedFixBroadbandTransaction.process;\n        }\n    }\n    return '';\n});\n\nexport const getMigrationFtthAvailabilityDateFromMagnum = createSelector(\n    getMagnumState,\n        magnum => !!magnum.durationList && magnum.durationList.ftthAvailabilityDate\n);"],
    "file": "selectors.js"
}