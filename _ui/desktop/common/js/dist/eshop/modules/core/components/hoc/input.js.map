{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/core/components/hoc/input.jsx"],
    "names": ["appendErrors", "ErrorComponent", "ErrorWrapperComponent", "FieldComponent", "FieldWithErrors", "state", "waiting", "timeout", "setTimeout", "setState", "event", "props", "onChange", "clearTimeout", "delay", "handleChange", "bind", "errors", "slice", "map", "Component", "displayName", "name", "propTypes", "PropTypes", "array", "defaultProps", "appendErrorsNotTimeouted", "OWN_PROPS", "enhanceInput", "labelType", "validationMark", "mask", "placeholder", "InputComponent", "concat", "EnhancedInputComponent", "initUiLabel", "prevProps", "value", "OPL", "UI", "stopModules", "refs", "wrapper", "initModules", "fire", "EVENTS", "modules", "floatinglabels", "checkvalue", "input", "type", "path", "wrapperClassName", "labelClassName", "markClassName", "inputClassName", "className", "validateEmpty", "valid", "id", "label", "string", "bool", "addLabelToInput", "addLabelToInputPhone", "addLabelToInputNip", "addLabelToInputPesel", "addLabelToInputCensoredIdNumber", "addLabelToInputIdNumber", "addLabelToInputKna", "maskField", "MaskedDisplay", "mapDisplayValue", "mapToDisplay", "mapToValue", "MappedDisplay", "displayValue"],
    "mappings": ";;;;;;;AAAA;AACA;;;;;;;;;;AAGA;;AAEA;;;;;;;;;AASO,MAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,cAAD,EAAiBC,qBAAjB;AAAA,WAA2C,UAAAC,cAAc,EAAI;AAAA,UAE/EC,eAF+E;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+CAI5D;AACjB,iBAAKC,KAAL,GAAa;AACTC,cAAAA,OAAO,EAAE;AADA,aAAb;AAGH;AARgF;AAAA;AAAA,kCAUzE;AAAA;;AACJ,iBAAKC,OAAL,GAAeC,UAAU,CAAC,YAAM;AAC5B,cAAA,KAAI,CAACC,QAAL,CAAc;AAACH,gBAAAA,OAAO,EAAE;AAAV,eAAd;AACH,aAFwB,EAEtB,IAFsB,CAAzB;AAGA;AACH;AAfgF;AAAA;AAAA,uCAiBpEI,KAjBoE,EAiB7D;AAChB,iBAAKD,QAAL,CAAc;AAACH,cAAAA,OAAO,EAAE;AAAV,aAAd;AACA,iBAAKK,KAAL,CAAWC,QAAX,CAAoBF,KAApB;AACAG,YAAAA,YAAY,CAAC,KAAKN,OAAN,CAAZ;AACA,iBAAKO,KAAL;AACH;AAtBgF;AAAA;AAAA,mCAwBxE;AACL,gCACI,uDACI,6BAAC,cAAD,2BAAoB,sBAAa,KAAKH,KAAlB,EAAyB,CAAC,QAAD,CAAzB,CAApB;AAA0D,cAAA,QAAQ,EAAE,KAAKI,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB;AAApE,eADJ,EAGI,CAAC,KAAKX,KAAL,CAAWC,OAAZ,IAAuB,KAAKK,KAAL,CAAWM,MAAlC,IAA4C,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAlB,CAAwB,CAAxB,EAA0B,CAA1B,EAA6BC,GAA7B,CAAiClB,cAAjC,CAHhD,CADJ;AAQH;AAjCgF;AAAA;AAAA,QAEvDmB,gBAFuD;;AAmCrFhB,MAAAA,eAAe,CAACiB,WAAhB,wBAA4ClB,cAAc,CAACkB,WAAf,IAA8BlB,cAAc,CAACmB,IAAzF;AACAlB,MAAAA,eAAe,CAACmB,SAAhB,qBAAgCpB,cAAc,CAACoB,SAA/C;AAA0DN,QAAAA,MAAM,EAAEO,mBAAUC;AAA5E;AACArB,MAAAA,eAAe,CAACsB,YAAhB,qBAAmCvB,cAAc,CAACuB,YAAlD;AACA,aAAOtB,eAAP;AACH,KAvC2B;AAAA,GAArB;;;;AAyCA,MAAMuB,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC1B,cAAD,EAAiBC,qBAAjB;AAAA,WAA2C,UAAAC,cAAc,EAAI;AAC7F,UAAMyB,SAAS,GAAG,CAAC,QAAD,CAAlB;;AACA,UAAMxB,eAAe,GAAG,SAAlBA,eAAkB,CAAAO,KAAK;AAAA,4BACzB,uDACI,6BAAC,cAAD,EAAoB,sBAAaA,KAAb,EAAoBiB,SAApB,CAApB,CADJ,EAEK,CAACjB,KAAK,CAACM,MAAP,GAAgB,IAAhB,GAAuBN,KAAK,CAACM,MAAN,CAAaE,GAAb,CAAiBlB,cAAjB,CAF5B,CADyB;AAAA,OAA7B;;AAMAG,MAAAA,eAAe,CAACiB,WAAhB,wBAA4ClB,cAAc,CAACkB,WAAf,IAA8BlB,cAAc,CAACmB,IAAzF;AACAlB,MAAAA,eAAe,CAACmB,SAAhB,qBAAgCpB,cAAc,CAACoB,SAA/C;AAA0DN,QAAAA,MAAM,EAAEO,mBAAUC;AAA5E;AACArB,MAAAA,eAAe,CAACsB,YAAhB,qBAAmCvB,cAAc,CAACuB,YAAlD;AACA,aAAOtB,eAAP;AACH,KAZmC;AAAA,GAAjC;AAeP;;;;;;;;;;AAMO,MAAMyB,YAAY,GAAG,SAAfA,YAAe;AAAA,QAAEC,SAAF,QAAEA,SAAF;AAAA,QAAaC,cAAb,QAAaA,cAAb;AAAA,QAA6BC,IAA7B,QAA6BA,IAA7B;AAAA,QAAmCC,WAAnC,QAAmCA,WAAnC;AAAA,WAAoD,UAACC,cAAD,EAAoB;AAChG,UAAIN,SAAS,GAAG,CAAC,kBAAD,CAAhB;AACA,UAAIE,SAAJ,EAAeF,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiB,CAAC,gBAAD,EAAmB,OAAnB,CAAjB,CAAZ;AACf,UAAIJ,cAAJ,EAAoBH,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiB,CAAC,eAAD,EAAkB,OAAlB,CAAjB,CAAZ;;AAH4E,UAK1FC,sBAL0F;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,8CAMxE;AAChB,gBAAIN,SAAJ,EAAe,KAAKO,WAAL,CAAiBP,SAAjB;AAClB;AAR2F;AAAA;AAAA,6CAUzEQ,SAVyE,EAU9D;AAC1B,gBAAIR,SAAS,IAAI,CAACQ,SAAS,CAACC,KAAxB,IAAiC,KAAK5B,KAAL,CAAW4B,KAAhD,EAAuD;AACnD,kBAAIT,SAAS,KAAK,UAAlB,EAA8B;AAC1B;AACAU,gBAAAA,GAAG,CAACC,EAAJ,CAAOC,WAAP,CAAmB,KAAKC,IAAL,CAAUC,OAA7B;AACAJ,gBAAAA,GAAG,CAACC,EAAJ,CAAOI,WAAP,CAAmB,KAAKF,IAAL,CAAUC,OAA7B;AACH,eAJD,MAIO;AACH;AACAJ,gBAAAA,GAAG,CAACC,EAAJ,CAAOK,IAAP,CAAYN,GAAG,CAACC,EAAJ,CAAOM,MAAP,CAAcC,OAAd,CAAsBC,cAAtB,CAAqCC,UAAjD,EAA6D,KAAKP,IAAL,CAAUQ,KAAvE,EAA8E,KAAKR,IAAL,CAAUC,OAAxF;AACH;AACJ;AACJ;AArB2F;AAAA;AAAA,sCAuBhFQ,IAvBgF,EAuB1E;AACd,gCAAW,KAAKT,IAAL,CAAUC,OAArB,EAA8B;AAACS,cAAAA,IAAI,EAAE,kBAAkBD,IAAlB,GAAyB;AAAhC,aAA9B;AACH;AAzB2F;AAAA;AAAA,mCA2BnF;AACL,gBAAIE,gBAAgB,GAAG,CAAC,KAAK3C,KAAL,CAAW2C,gBAAX,IAA+B,EAAhC,IAAsC,sBAAa,KAAb,EAAoBxB,SAApB,EAA+B,QAA/B,CAA7D;AACA,gBAAIyB,cAAc,GAAG,CAAC,KAAK5C,KAAL,CAAW4C,cAAX,IAA6B,EAA9B,IAAoC,sBAAa,KAAb,EAAoBzB,SAApB,EAA+B,qBAA/B,CAAzD;AACA,gBAAI0B,aAAa,GAAG,CAAC,KAAK7C,KAAL,CAAW6C,aAAX,IAA4B,EAA7B,IAAmC,oBAAvD;AACA,gBAAIC,cAAc,GAAI,KAAK9C,KAAL,CAAW+C,SAAX,IAAwB,EAA9C;AACA,gBAAI5B,SAAS,IAAI,KAAKnB,KAAL,CAAW4B,KAA5B,EACIkB,cAAc,IAAI,eAAlB;;AACJ,gBAAI1B,cAAc,KAAK,KAAKpB,KAAL,CAAW4B,KAAX,IAAoB,KAAK5B,KAAL,CAAWgD,aAApC,CAAlB,EAAsE;AAClE,kBAAI,KAAKhD,KAAL,CAAWiD,KAAX,KAAqB,IAAzB,EAA+B;AAC3BH,gBAAAA,cAAc,IAAI,UAAlB;AACAD,gBAAAA,aAAa,IAAI,6BAAjB;AACH,eAHD,MAGO,IAAI,KAAK7C,KAAL,CAAWiD,KAAX,KAAqB,KAAzB,EAAgC;AACnCH,gBAAAA,cAAc,IAAI,QAAlB;AACAD,gBAAAA,aAAa,IAAI,2BAAjB;AACH,eAHM,MAGA,IAAI,KAAK7C,KAAL,CAAWgD,aAAX,IAA4B,CAAC,KAAKhD,KAAL,CAAW4B,KAA5C,EAAmD;AACtDkB,gBAAAA,cAAc,IAAI,QAAlB;AACAD,gBAAAA,aAAa,IAAI,2BAAjB;AACH;AACJ;;AACD,gCACI;AAAK,cAAA,SAAS,EAAEF,gBAAhB;AAAkC,cAAA,GAAG,EAAC;AAAtC,4BACI,6BAAC,cAAD,2BAAoB,sBAAa,KAAK3C,KAAlB,EAAyBiB,SAAzB,CAApB;AAAyD,cAAA,SAAS,EAAE6B,cAApE;AAAoF,cAAA,GAAG,EAAC,OAAxF;AACO,cAAA,YAAY,EAAC,KADpB;AAC0B,kCAAkB,KAAK9C,KAAL,CAAWkD,EAAX,GAAgB,eAD5D;AAEO,gCAAgB7B,IAAI,IAAIC,WAAR,GAAsB,+BAAtB,GAAwD,EAF/E;AAGO,iCAAiBD,IAAI,IAAIC,WAAR,GAAsB,cAAcD,IAAd,GAAqB,oBAArB,GAA4CC,WAA5C,GAA0D,IAAhF,GAAuF;AAH/G,eADJ,EAKKF,cAAc,iBAAI;AAAM,cAAA,SAAS,EAAEyB;AAAjB,cALvB,EAMK1B,SAAS,iBAAI;AAAG,cAAA,EAAE,EAAE,KAAKnB,KAAL,CAAWkD,EAAX,GAAgB,eAAvB;AAAwC,cAAA,SAAS,EAAEN;AAAnD,eACT,KAAK5C,KAAL,CAAWmD,KADF,CANlB,CADJ;AAYH;AA1D2F;AAAA;AAAA,QAK3D1C,gBAL2D;;AA6DhGgB,MAAAA,sBAAsB,CAACf,WAAvB,sBAAiDa,cAAc,CAACb,WAAf,IAA8Ba,cAAc,CAACZ,IAA9F;AACAc,MAAAA,sBAAsB,CAACb,SAAvB,qBACWW,cAAc,CAACX,SAD1B;AAEQ+B,QAAAA,gBAAgB,EAAE9B,mBAAUuC;AAFpC,SAGYjC,SAAS,IAAI;AACbyB,QAAAA,cAAc,EAAE/B,mBAAUuC,MADb;AAEbD,QAAAA,KAAK,EAAEtC,mBAAUuC;AAFJ,OAHzB,MAOYhC,cAAc,IAAI;AAClByB,QAAAA,aAAa,EAAEhC,mBAAUuC,MADP;AAElBH,QAAAA,KAAK,EAAEpC,mBAAUwC;AAFC,OAP9B;AAYA5B,MAAAA,sBAAsB,CAACV,YAAvB,qBACWQ,cAAc,CAACR,YAD1B;AAEQ4B,QAAAA,gBAAgB,EAAE;AAF1B,SAGYxB,SAAS,IAAI;AACbyB,QAAAA,cAAc,EAAE;AADH,OAHzB;AAOA,aAAOnB,sBAAP;AACH,KAlF2B;AAAA,GAArB;;;AAoFA,MAAM6B,eAAe,GAAGpC,YAAY,CAAC;AAACC,IAAAA,SAAS,EAAE,UAAZ;AAAwBC,IAAAA,cAAc,EAAE;AAAxC,GAAD,CAApC;;AACA,MAAMmC,oBAAoB,GAAGrC,YAAY,CAAC;AAACC,IAAAA,SAAS,EAAE,UAAZ;AAAwBC,IAAAA,cAAc,EAAE,IAAxC;AAA8CC,IAAAA,IAAI,EAAE,mBAApD;AAAyEC,IAAAA,WAAW,EAAE;AAAtF,GAAD,CAAzC;;AACA,MAAMkC,kBAAkB,GAAGtC,YAAY,CAAC;AAACC,IAAAA,SAAS,EAAE,UAAZ;AAAwBC,IAAAA,cAAc,EAAE,IAAxC;AAA8CC,IAAAA,IAAI,EAAE,gBAApD;AAAsEC,IAAAA,WAAW,EAAE;AAAnF,GAAD,CAAvC;;AACA,MAAMmC,oBAAoB,GAAGvC,YAAY,CAAC;AAACC,IAAAA,SAAS,EAAE,UAAZ;AAAwBC,IAAAA,cAAc,EAAE,IAAxC;AAA8CC,IAAAA,IAAI,EAAE,aAApD;AAAmEC,IAAAA,WAAW,EAAE;AAAhF,GAAD,CAAzC;;AACA,MAAMoC,+BAA+B,GAAGxC,YAAY,CAAC;AAACC,IAAAA,SAAS,EAAE,UAAZ;AAAwBC,IAAAA,cAAc,EAAE,IAAxC;AAA8CC,IAAAA,IAAI,EAAE,WAApD;AAAiEC,IAAAA,WAAW,EAAE;AAA9E,GAAD,CAApD;;AACA,MAAMqC,uBAAuB,GAAGzC,YAAY,CAAC;AAACC,IAAAA,SAAS,EAAE,UAAZ;AAAwBC,IAAAA,cAAc,EAAE,IAAxC;AAA8CC,IAAAA,IAAI,EAAE,WAApD;AAAiEC,IAAAA,WAAW,EAAE;AAA9E,GAAD,CAA5C;;AACA,MAAMsC,kBAAkB,GAAG1C,YAAY,CAAC;AAACC,IAAAA,SAAS,EAAE,UAAZ;AAAwBC,IAAAA,cAAc,EAAE,IAAxC;AAA8CC,IAAAA,IAAI,EAAE,cAApD;AAAoEC,IAAAA,WAAW,EAAE;AAAjF,GAAD,CAAvC;AAEP;;;;;;;;;AAMO,MAAIuC,SAAS,GAAG,SAAZA,SAAY,CAACxC,IAAD;AAAA,WAAU,UAAAE,cAAc,EAAI;AAAA,UACzCuC,aADyC;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uCAE9B/D,KAF8B,EAEvB;AAChB,gBAAIsB,IAAI,CAACtB,KAAK,CAAC6B,KAAP,CAAR,EACI,KAAK5B,KAAL,CAAWC,QAAX,CAAoBF,KAApB;AACP;AAL0C;AAAA;AAAA,mCAMlC;AACL,gCAAO,6BAAC,cAAD,2BAAoB,KAAKC,KAAzB;AAAgC,cAAA,QAAQ,EAAE,KAAKI,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB;AAA1C,eAAP;AACH;AAR0C;AAAA;AAAA,QACnBI,gBADmB;;AAU/CqD,MAAAA,aAAa,CAACpD,WAAd,2BAA6Ca,cAAc,CAACb,WAAf,IAA8Ba,cAAc,CAACZ,IAA1F;AACAmD,MAAAA,aAAa,CAAClD,SAAd,GAA0BW,cAAc,CAACX,SAAzC;AACA,aAAOkD,aAAP;AACH,KAbsB;AAAA,GAAhB;AAeP;;;;;;;;;;;;AAQO,MAAIC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,QAAEC,YAAF,SAAEA,YAAF;AAAA,QAAgBC,UAAhB,SAAgBA,UAAhB;AAAA,WAAgC,UAAA1C,cAAc,EAAI;AAAA,UACrE2C,aADqE;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+CAElD;AACjB,iBAAKpE,QAAL,CAAc;AAACqE,cAAAA,YAAY,EAAEH,YAAY,CAAC,KAAKhE,KAAL,CAAW4B,KAAZ;AAA3B,aAAd;AACH;AAJsE;AAAA;AAAA,2DAKpC;AAAA,gBAARA,KAAQ,SAARA,KAAQ;AAC/B,gBAAIqC,UAAU,CAAC,KAAKvE,KAAL,CAAWyE,YAAZ,CAAV,KAAwCvC,KAA5C,EACI,KAAK9B,QAAL,CAAc;AAACqE,cAAAA,YAAY,EAAEH,YAAY,CAACpC,KAAD;AAA3B,aAAd;AACP;AARsE;AAAA;AAAA,uCAS1D7B,KAT0D,EASnD;AAChB,iBAAKD,QAAL,CAAc;AAACqE,cAAAA,YAAY,EAAEpE,KAAK,CAAC6B;AAArB,aAAd;AACA,iBAAK5B,KAAL,CAAWC,QAAX,mBAAwBF,KAAxB;AAA+B6B,cAAAA,KAAK,EAAEqC,UAAU,CAAClE,KAAK,CAAC6B,KAAP;AAAhD;AACH;AAZsE;AAAA;AAAA,mCAa9D;AACL,gCAAO,6BAAC,cAAD,2BAAoB,KAAK5B,KAAzB;AAAgC,cAAA,KAAK,EAAE,KAAKN,KAAL,CAAWyE,YAAlD;AAAgE,cAAA,QAAQ,EAAE,KAAK/D,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB;AAA1E,eAAP;AACH;AAfsE;AAAA;AAAA,QAC/CI,gBAD+C;;AAiB3EyD,MAAAA,aAAa,CAACxD,WAAd,2BAA6Ca,cAAc,CAACb,WAAf,IAA8Ba,cAAc,CAACZ,IAA1F;AACAuD,MAAAA,aAAa,CAACtD,SAAd,GAA0BW,cAAc,CAACX,SAAzC;AACA,aAAOsD,aAAP;AACH,KApB4B;AAAA,GAAtB",
    "sourcesContent": ["import React, {Component} from \"react\"\nimport PropTypes from \"prop-types\";\nimport {loadModule, styleVariant, excludeProps} from \"eshop/modules/core/utils/ui\";\n\n// Higher order components for inputs\n\n/*\n * Higher order component for appending error messages to a field\n * Usage:\n *   ComponentWithErrors = appendErrors(ErrorComponent)(FieldComponent);\n *   <ComponentWithErrors {...propsForFieldComponent} errors={[propsForErrorComponents]}/>\n *\n *   FieldComponent will be rendered with and given all props\n *   an ErrorComponent will be rendered for every object in 'errors' prop\n */\nexport const appendErrors = (ErrorComponent, ErrorWrapperComponent) => FieldComponent => {\n\n    class FieldWithErrors extends Component {\n\n        componentWillMount() {\n            this.state = {\n                waiting: false,\n            };\n        }\n\n        delay() {\n            this.timeout = setTimeout(() => {\n                this.setState({waiting: false});\n            }, 2000);\n            return;\n        }\n\n        handleChange(event) {\n            this.setState({waiting: true});\n            this.props.onChange(event);\n            clearTimeout(this.timeout);\n            this.delay();\n        }\n\n        render() {\n            return(\n                <div>\n                    <FieldComponent {...excludeProps(this.props, [\"errors\"])} onChange={this.handleChange.bind(this)}/>\n                    {\n                    !this.state.waiting && this.props.errors && this.props.errors.slice(0,1).map(ErrorComponent)\n                    }\n                </div>\n            )\n        }\n    }\n    FieldWithErrors.displayName = `WithErrors(${FieldComponent.displayName || FieldComponent.name})`;\n    FieldWithErrors.propTypes = {...FieldComponent.propTypes, errors: PropTypes.array};\n    FieldWithErrors.defaultProps = {...FieldComponent.defaultProps}\n    return FieldWithErrors;\n}\n\nexport const appendErrorsNotTimeouted = (ErrorComponent, ErrorWrapperComponent) => FieldComponent => {\n        const OWN_PROPS = [\"errors\"];\n        const FieldWithErrors = props =>\n            <div>\n                <FieldComponent {...excludeProps(props, OWN_PROPS)}/>\n                {!props.errors ? null : props.errors.map(ErrorComponent)}\n            </div>;\n\n        FieldWithErrors.displayName = `WithErrors(${FieldComponent.displayName || FieldComponent.name})`;\n        FieldWithErrors.propTypes = {...FieldComponent.propTypes, errors: PropTypes.array};\n        FieldWithErrors.defaultProps = {...FieldComponent.defaultProps}\n        return FieldWithErrors;\n    };\n\n\n/*\n * Higher order component for enhancing inputs with UX labels and validation marks\n * Usage:\n *   EnhancedInput = enhanceInput({labelType: \"floating|sliding\", validationMark: true|false})(Input);\n *   <EnhancedInput label=\"Label...\" valid={false} ...inputProps/>\n */\nexport const enhanceInput = ({labelType, validationMark, mask, placeholder}) => (InputComponent) => {\n    var OWN_PROPS = [\"wrapperClassName\"]\n    if (labelType) OWN_PROPS = OWN_PROPS.concat([\"labelClassName\", \"label\"]);\n    if (validationMark) OWN_PROPS = OWN_PROPS.concat([\"markClassName\", \"valid\"]);\n\n    class EnhancedInputComponent extends Component {\n        componentDidMount() {\n            if (labelType) this.initUiLabel(labelType);\n        }\n\n        componentDidUpdate(prevProps) {\n            if (labelType && !prevProps.value && this.props.value) {\n                if (labelType !== \"floating\") {\n                    // TODO Stopping all modules is inefficient, but we can't stop a specific module now - see issue NOR-56126\n                    OPL.UI.stopModules(this.refs.wrapper);\n                    OPL.UI.initModules(this.refs.wrapper);\n                } else {\n                    // TODO checkvalue event for sliding label is not available\n                    OPL.UI.fire(OPL.UI.EVENTS.modules.floatinglabels.checkvalue, this.refs.input, this.refs.wrapper);\n                }\n            }\n        }\n\n        initUiLabel(type) {\n            loadModule(this.refs.wrapper, {path: \"core/modules/\" + type + \"-label\"});\n        }\n\n        render() {\n            let wrapperClassName = (this.props.wrapperClassName || \"\") + styleVariant(\" o-\", labelType, \"-label\");\n            let labelClassName = (this.props.labelClassName || \"\") + styleVariant(\" o-\", labelType, \"-label__placeholder\");\n            let markClassName = (this.props.markClassName || \"\") + \" o-validation-mark\";\n            let inputClassName = (this.props.className || \"\");\n            if (labelType && this.props.value)\n                inputClassName += \" is-not-empty\";\n            if (validationMark && (this.props.value || this.props.validateEmpty)) {\n                if (this.props.valid === true) {\n                    inputClassName += \" success\";\n                    markClassName += \" o-validation-mark--success\"\n                } else if (this.props.valid === false) {\n                    inputClassName += \" error\";\n                    markClassName += \" o-validation-mark--error\"\n                } else if (this.props.validateEmpty && !this.props.value) {\n                    inputClassName += \" error\";\n                    markClassName += \" o-validation-mark--error\"\n                }\n            }\n            return (\n                <div className={wrapperClassName} ref=\"wrapper\">\n                    <InputComponent {...excludeProps(this.props, OWN_PROPS)} className={inputClassName} ref=\"input\"\n                           autoComplete=\"off\" aria-describedby={this.props.id + \"__placeholder\"}\n                           data-js-module={mask && placeholder ? \"common/modules/opl-input-mask\" : \"\"}\n                           data-js-options={mask && placeholder ? '{\"mask\":\"' + mask + '\", \"placeholder\":\"' + placeholder + '\"}' : ''}/>\n                    {validationMark && <span className={markClassName} />}\n                    {labelType && <p id={this.props.id + \"__placeholder\"} className={labelClassName}>\n                        {this.props.label}\n                    </p>}\n                </div>\n            );\n        }\n    }\n\n    EnhancedInputComponent.displayName = `Enhanced(${InputComponent.displayName || InputComponent.name})`;\n    EnhancedInputComponent.propTypes = {\n            ...InputComponent.propTypes,\n            wrapperClassName: PropTypes.string,\n            ...(labelType && {\n                labelClassName: PropTypes.string,\n                label: PropTypes.string\n            }),\n            ...(validationMark && {\n                markClassName: PropTypes.string,\n                valid: PropTypes.bool\n            })\n        };\n    EnhancedInputComponent.defaultProps = {\n            ...InputComponent.defaultProps,\n            wrapperClassName: \"\",\n            ...(labelType && {\n                labelClassName: \"label\"\n            })\n        };\n    return EnhancedInputComponent;\n}\n\nexport const addLabelToInput = enhanceInput({labelType: \"floating\", validationMark: true});\nexport const addLabelToInputPhone = enhanceInput({labelType: \"floating\", validationMark: true, mask: \"(+48) 999-999-999\", placeholder: \"(+48) ___-___-___\"});\nexport const addLabelToInputNip = enhanceInput({labelType: \"floating\", validationMark: true, mask: \"(999-999-99-99\", placeholder: \"___-___-__-__\"});\nexport const addLabelToInputPesel = enhanceInput({labelType: \"floating\", validationMark: true, mask: \"99999999999\", placeholder: \"___________\"});\nexport const addLabelToInputCensoredIdNumber = enhanceInput({labelType: \"floating\", validationMark: true, mask: \"*********\", placeholder: \"______\"});\nexport const addLabelToInputIdNumber = enhanceInput({labelType: \"floating\", validationMark: true, mask: \"aaa999999\", placeholder: \"______\"});\nexport const addLabelToInputKna = enhanceInput({labelType: \"floating\", validationMark: true, mask: \"99-999-99-99\", placeholder: \"__-___-__-__\"});\n\n/*\n * Higher order component that enables masking component's value (doesn't update if the new value doesn't fit the mask function\n * Usage:\n *   MaskedInput = maskField(value => condition(value) || regex.test(value))(Input)\n *   <MaskedInput ...inputProps/>\n */\nexport var maskField = (mask) => InputComponent => {\n    class MaskedDisplay extends Component {\n        handleChange(event) {\n            if (mask(event.value))\n                this.props.onChange(event);\n        }\n        render() {\n            return <InputComponent {...this.props} onChange={this.handleChange.bind(this)}/>\n        }\n    }\n    MaskedDisplay.displayName = `MaskedDisplay(${InputComponent.displayName || InputComponent.name})`;\n    MaskedDisplay.propTypes = InputComponent.propTypes;\n    return MaskedDisplay\n}\n\n/*\n * Higher order component that enables disconnecting displayed and real value\n * Usage:\n *   MappedInput = mapDisplayValue({mapToDisplay: (value) => displayValue, mapToValue: (display) => realValue})(Input)\n *   <MappedInput name={...} value={...} onChange={...}/>\n * mapToDisplay and mapToValue should be inverses of each other, that is:\n *   mapToDisplay(mapToValue(x)) === x && mapToValue(mapToDisplay(x)) === x\n */\nexport var mapDisplayValue = ({mapToDisplay, mapToValue}) => InputComponent => {\n    class MappedDisplay extends Component {\n        componentWillMount() {\n            this.setState({displayValue: mapToDisplay(this.props.value)})\n        }\n        componentWillReceiveProps({value}) {\n            if (mapToValue(this.state.displayValue) !== value)\n                this.setState({displayValue: mapToDisplay(value)});\n        }\n        handleChange(event) {\n            this.setState({displayValue: event.value});\n            this.props.onChange({...event, value: mapToValue(event.value)});\n        }\n        render() {\n            return <InputComponent {...this.props} value={this.state.displayValue} onChange={this.handleChange.bind(this)}/>\n        }\n    }\n    MappedDisplay.displayName = `MappedDisplay(${InputComponent.displayName || InputComponent.name})`;\n    MappedDisplay.propTypes = InputComponent.propTypes;\n    return MappedDisplay;\n}\n"],
    "file": "input.js"
}