{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/core/components/ui/TooltipInitializer.jsx"],
    "names": ["tooltipPlaceholder", "TooltipInitializer", "html", "hasTooltip", "OPL", "UI", "loadModules", "document", "getElementById", "tooltipId", "path", "options", "tContainer", "tooltipContainerId", "stopModules", "tooltipIdValue", "undefined", "OnlineUtils", "generateUniqeHtmlId", "indexOf", "value", "replace", "innerHtmlForValue", "__html", "htmlWithTooltipId"],
    "mappings": ";;;;;;;AAAA;AACA;AACA;AAGA,MAAIA,kBAAkB,GAAG,wBAAzB;;MAEqBC,kB;AAElB,gCAAYC,IAAZ,EAAkB;AAAA;AACb,WAAKA,IAAL,GAAYA,IAAZ;AACJ;;;;iDAE0B;AACtB,YAAI,KAAKC,UAAL,EAAJ,EAAuB;AACnBC,UAAAA,GAAG,CAACC,EAAJ,CAAOC,WAAP,CAAmBC,QAAQ,CAACC,cAAT,CAAwB,KAAKC,SAAL,EAAxB,CAAnB,EAA8D,CAAC;AAC3DC,YAAAA,IAAI,EAAE,uBADqD;AAE3DC,YAAAA,OAAO,EAAE;AAAE,mCAAqB,CAAvB;AAA0B,8BAAgB;AAA1C;AAFkD,WAAD,CAA9D;AAIH;AACL;;;oDAE8B;AAC1B,YAAI,KAAKR,UAAL,EAAJ,EAAuB;AACnB,cAAIS,UAAU,GAAGL,QAAQ,CAACC,cAAT,CAAwB,KAAKK,kBAAL,EAAxB,CAAjB;AACAT,UAAAA,GAAG,CAACC,EAAJ,CAAOS,WAAP,CAAmBF,UAAnB;AACF;AACL;;;kCAEU;AACP,YAAG,KAAKG,cAAL,KAAwBC,SAA3B,EACI,KAAKD,cAAL,GAAsBE,qBAAYC,mBAAZ,CAAgC,qBAAhC,CAAtB;AACJ,eAAO,KAAKH,cAAZ;AACH;;;2CAEmB;AACjB,eAAO,KAAKN,SAAL,KAAiB,YAAxB;AACF;;;mCAEY;AACT,eAAO,KAAKP,IAAL,IAAa,KAAKA,IAAL,CAAUiB,OAAV,CAAkBnB,kBAAlB,KAAyC,CAA7D;AACH;;;0CAEmB;AAEhB,YAAIoB,KAAK,GAAG,KAAKlB,IAAjB;;AACA,YAAI,KAAKC,UAAL,EAAJ,EAAuB;AACnBiB,UAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAcrB,kBAAd,EAAkC,KAAKS,SAAL,EAAlC,CAAR;AACH;;AAED,eAAOW,KAAP;AACH;;;+BAEQ;AACL,YAAIE,iBAAiB,GAAG;AAACC,UAAAA,MAAM,EAAE,KAAKC,iBAAL;AAAT,SAAxB;AAEA,4BACI;AAAK,UAAA,EAAE,EAAE,KAAKX,kBAAL,EAAT;AAAoC,UAAA,uBAAuB,EAAES;AAA7D,UADJ;AAGH",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\n\n\nvar tooltipPlaceholder = \"TOOLTIP-ID-PLACEHOLDER\"\n\nexport default class TooltipInitializer {\n\n   constructor(html) {\n        this.html = html\n   }\n\n   componentDidMountHandler() {\n        if (this.hasTooltip()) {\n            OPL.UI.loadModules(document.getElementById(this.tooltipId()), [{\n                path: 'core/modules/tooltips',\n                options: { \"mouseoverMinWidth\": 0, \"triggerEvent\": \"mouseover\" }\n            }]);\n        }\n   }\n\n    componentWillUnmountHandler() {\n        if (this.hasTooltip()) {\n            let tContainer = document.getElementById(this.tooltipContainerId())\n            OPL.UI.stopModules(tContainer);\n         }\n    }\n\n    tooltipId(){\n        if(this.tooltipIdValue === undefined)\n            this.tooltipIdValue = OnlineUtils.generateUniqeHtmlId(\"tooltipInitializer_\")\n        return this.tooltipIdValue\n    }\n\n    tooltipContainerId(){\n       return this.tooltipId()+'-container'\n    }\n\n    hasTooltip() {\n        return this.html && this.html.indexOf(tooltipPlaceholder) >= 0\n    }\n\n    htmlWithTooltipId() {\n\n        let value = this.html\n        if (this.hasTooltip()) {\n            value = value.replace(tooltipPlaceholder, this.tooltipId())\n        }\n\n        return value\n    }\n\n    render() {\n        let innerHtmlForValue = {__html: this.htmlWithTooltipId()}\n\n        return (\n            <div id={this.tooltipContainerId()} dangerouslySetInnerHTML={innerHtmlForValue} />\n        )\n    }\n\n}\n\n"],
    "file": "TooltipInitializer.js"
}