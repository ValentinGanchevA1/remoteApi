{
    "version": 3,
    "sources": ["../../../../../../../es6/eshop/modules/core/components/ui/Portal.jsx"],
    "names": ["Portal", "renderPortal", "props", "portalId", "portalClassName", "id", "className", "getDestinationNode", "otherProps", "getPortalProps", "node", "ReactDOM", "unmountComponentAtNode", "render", "getDestinationProps", "children", "refs", "portal", "Component", "propTypes", "PropTypes", "string", "func", "defaultProps"],
    "mappings": ";;;;;;;AAAA;AACA;AACA;;;;;;MAEMA,M;;;;;;;;;;;;0CACkB;AAChB,aAAKC,YAAL,CAAkB,KAAKC,KAAvB;AACH;;;gDAEyBA,K,EAAO;AAC7B,aAAKD,YAAL,CAAkBC,KAAlB;AACH;;;qCAEcA,K,EAAO;AAAA,YACbC,QADa,GACgBD,KADhB,CACbC,QADa;AAAA,YACHC,eADG,GACgBF,KADhB,CACHE,eADG;AAElB,eAAO;AAACC,UAAAA,EAAE,EAAEF,QAAL;AAAeG,UAAAA,SAAS,EAAEF;AAA1B,SAAP;AACH;;;0CAEmBF,K,EAAO;AAAA,YAClBC,QADkB,GAC8CD,KAD9C,CAClBC,QADkB;AAAA,YACRC,eADQ,GAC8CF,KAD9C,CACRE,eADQ;AAAA,YACSG,kBADT,GAC8CL,KAD9C,CACSK,kBADT;AAAA,YACgCC,UADhC,wCAC8CN,KAD9C;AAEvB,eAAOM,UAAP;AACH;;;+BAEQ;AACL,4BAAO;AAAK,UAAA,GAAG,EAAC;AAAT,WAAsB,KAAKC,cAAL,CAAoB,KAAKP,KAAzB,CAAtB,EAAP;AACH;;;mCAEYA,K,EAAO;AAChB,YAAIQ,IAAI,GAAG,KAAKR,KAAL,CAAWK,kBAAX,MAAmC,KAAKA,kBAAL,EAA9C;;AACA,YAAI,KAAKG,IAAL,IAAaA,IAAI,KAAK,KAAKA,IAA/B,EAAqC;AACjCC,4BAASC,sBAAT,CAAgC,KAAKF,IAArC;AACH;;AACD,aAAKA,IAAL,GAAYA,IAAZ;;AACAC,0BAASE,MAAT,eAAgB;AAAK,UAAA,GAAG,EAAEX,KAAK,CAACC;AAAhB,WAA8B,KAAKW,mBAAL,CAAyBZ,KAAzB,CAA9B,GAAgEA,KAAK,CAACa,QAAtE,CAAhB,EAAuG,KAAKL,IAA5G;AACH;;;2CAEoB;AACjB,eAAO,KAAKM,IAAL,CAAUC,MAAjB;AACH;;;6CAEsB;AACnBN,0BAASC,sBAAT,CAAgC,KAAKF,IAArC;AACH;;;IAtCgBQ,gB;;AAyCrBlB,EAAAA,MAAM,CAACmB,SAAP,GAAmB;AACfhB,IAAAA,QAAQ,EAAEiB,mBAAUC,MADL;AAEfjB,IAAAA,eAAe,EAAEgB,mBAAUC,MAFZ;AAGfd,IAAAA,kBAAkB,EAAEa,mBAAUE;AAHf,GAAnB;AAMAtB,EAAAA,MAAM,CAACuB,YAAP,GAAsB;AAClBhB,IAAAA,kBAAkB,EAAE;AAAA,aAAM,IAAN;AAAA;AADF,GAAtB;iBAIeP,M",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\n\nclass Portal extends Component {\n    componentDidMount() {\n        this.renderPortal(this.props);\n    }\n\n    componentWillReceiveProps(props) {\n        this.renderPortal(props);\n    }\n\n    getPortalProps(props) {\n        let {portalId, portalClassName} = props;\n        return {id: portalId, className: portalClassName};\n    }\n\n    getDestinationProps(props) {\n        let {portalId, portalClassName, getDestinationNode, ...otherProps} = props;\n        return otherProps;\n    }\n\n    render() {\n        return <div ref='portal' {...this.getPortalProps(this.props)}/>;\n    }\n\n    renderPortal(props) {\n        var node = this.props.getDestinationNode() || this.getDestinationNode();\n        if (this.node && node !== this.node) {\n            ReactDOM.unmountComponentAtNode(this.node);\n        }\n        this.node = node;\n        ReactDOM.render(<div key={props.portalId} {...this.getDestinationProps(props)}>{props.children}</div>, this.node);\n    }\n\n    getDestinationNode() {\n        return this.refs.portal;\n    }\n\n    componentWillUnmount() {\n        ReactDOM.unmountComponentAtNode(this.node);\n    }\n}\n\nPortal.propTypes = {\n    portalId: PropTypes.string,\n    portalClassName: PropTypes.string,\n    getDestinationNode: PropTypes.func\n};\n\nPortal.defaultProps = {\n    getDestinationNode: () => null\n};\n\nexport default Portal;\n"],
    "file": "Portal.js"
}