{
    "version": 3,
    "sources": ["../../../../../es6/eshop/modules/core/validation.js"],
    "names": ["validator", "checks", "value", "reduce", "errors", "check", "error", "push", "condition", "message", "notEmpty", "appartment", "length", "test", "spaceInText", "phoneNumberRegexp", "regex", "expression", "minLength", "maxLength", "pesel", "peselAdult", "nip", "regon", "idNumber", "residenceCardNumber", "checkNotEmpty", "checkOnlyLetters", "checkAtLeastTwo", "checkIdNumber", "checkIdentificationNumber", "checkPostCode", "checkEmail", "checkNonEmptyEmail", "checkPhoneNumber", "checkPesel", "checkNIP", "checkREGON", "checkPeselAdult", "checkAppartment", "checkSpaceInText", "limitTo8Characters", "noPolishCharacters", "checkNotEmptyStandardMessage", "level", "checkRequiredFieldMessage"],
    "mappings": "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",
    "sourcesContent": ["import {validateIdNumber, validateResidenceCardNumber, validatePesel, validateIfAdult, validateNIP, validateREGON} from './validationHelper';\n/*\n * Combines validation checks to create a validator.\n */\nexport function validator(...checks) {\n    return value => checks.reduce((errors, check) => {\n        const error = check(value);\n        if (error !== null)\n            errors.push(error);\n        return errors;\n    }, []);\n};\n\n/*\n * Create a validation check\n * Usage:\n *   baseCheck = check(condition);\n *   checkWithMessage = baseCheck({level: \"warn\", message: \"Message\"});\n */\nexport const check = condition => message => value => condition(value) ? null : message;\n\n/*\n * Simple conditions\n * Condition should be a function that takes a value and returns a boolean\n */\nexport const notEmpty = value => value !== \"\";\nexport const appartment = value => value && value.length>0 ? /^[a-zżźćńółęąśA-ZŻŹĆĄŚĘŁÓŃ\\d]+(((\\/)|(\\-))?[a-zżźćńółęąśA-ZŻŹĆĄŚĘŁÓŃ\\d]+)*$/.test(value) : true;\nexport const spaceInText = value => value && value.length>0 ? !/^(.*\\s+.*)+$/.test(value) : true;\nexport const phoneNumberRegexp= value => value ? !/^000000000$/.test(value) && /^[1-9]\\d{8}$/.test(value) : false;\n\n/*\n * Condition generators\n * Functions that create conditions given some parameters\n */\nexport const regex = expression => value => expression.test(value);\nexport const minLength = length => value => !!value && value.length >= length;\nexport const maxLength = length => value => !!value && value.length <= length;\n\nexport const pesel = value => validatePesel(value);\nexport const peselAdult = value => validateIfAdult(value);\nexport const nip = value => validateNIP(value);\nexport const regon = value => validateREGON(value);\n\nexport const idNumber = value => validateIdNumber(value);\nexport const residenceCardNumber = value => validateResidenceCardNumber(value);\n\n/*\n * Generic checks without messages.\n * A message can be added to those to create a validation check that can be used in a validator.\n */\nexport const checkNotEmpty = check(notEmpty);\nexport const checkOnlyLetters = check(regex(/^([a-zA-Z\\u00A1-\\uFFFF])+([a-zA-Z\\s\\-\\u00A1-\\uFFFF])*$/));\nexport const checkAtLeastTwo = check(regex(/^.{2,}$/));\nexport const checkIdNumber = check(idNumber);\nexport const checkIdentificationNumber = check(residenceCardNumber);\nexport const checkPostCode = check(regex(/^\\d{5}$/));\n//RFC 5322 compliant regex\nexport const checkEmail = check(regex(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/));\nexport const checkNonEmptyEmail = check(regex(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$|^$/));\nexport const checkPhoneNumber= check(phoneNumberRegexp);\nexport const checkPesel = check(pesel);\nexport const checkNIP = check(nip);\nexport const checkREGON = check(regon);\nexport const checkPeselAdult = check(peselAdult);\nexport const checkAppartment = check(appartment);\nexport const checkSpaceInText = check(spaceInText);\nexport const limitTo8Characters=check(regex(/^.{0,8}$/));\nexport const noPolishCharacters=check(regex(/^((?![żźćńółęąśŻŹĆĄŚĘŁÓŃ]+).)*$/));\n\n/*\n * Checks with predefined messages\n * Can be used directly in validators.\n */\nexport const checkNotEmptyStandardMessage = check(notEmpty)({level: \"error\", message: \"Pole nie może być puste.\"});\nexport const checkRequiredFieldMessage = check(notEmpty)({level: \"error\", message: \"Pole wymagane do złożenia\" +\n    \" zamówienia.\"});\n"],
    "file": "validation.js"
}