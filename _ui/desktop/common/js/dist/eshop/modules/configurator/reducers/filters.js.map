{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/configurator/reducers/filters.js"],
    "names": ["getInitialClientContextState", "OnlineUtils", "loadFromSessionStorage", "getSelectedOfferType", "cmsConf", "state", "action", "type", "REGISTER_OFFER_TYPES_CMS_CONF", "parseUseDefaults", "undefined", "useDefaultOfferType", "USE_DEFAULT_OFFER_TYPE", "use", "maxSimCount", "SET_MAX_SIM_COUNT", "saveInSessionStorage", "useDefaultProcess", "USE_DEFAULT_PROCESS", "useDefaultLoyalty", "USE_DEFAULT_LOYALTY", "useDefaultOffer", "USE_DEFAULT_OFFER", "clientContext", "CLIENT_CONTEXT_ENABLED", "saveInStorageOnCanonicalLinks", "CLIENT_CONTEXT_DISABLED", "getParameterValueFromUrl", "JSON", "parse", "changeOrAddUrlParameterDisabledOnCheckoutParameterLinks", "clientContextChangeHandlers", "CLIENT_CONTEXT_CHANGE_SUBSCRIPTION", "newState", "slice", "push", "handler", "propositionListOfferType", "PROPOSITION_LIST_OFFER_TYPE", "offerType", "removeFromSessionStorage", "propositionListSoftBundleGroup", "PROPOSITION_LIST_SOFT_BUNDLE_GROUP", "softBundleGroup", "propositionListCountValue", "parseInt", "simCountSelectedValue", "retValue", "changeOrAddUrlParameterDisabledOnCheckout", "simCountSelected", "PROPOSITION_LIST_COUNT_SET", "count", "propositionListCount", "PROPOSITION_LIST_COUNT_INCREMENT", "PROPOSITION_LIST_COUNT_DECREMENT", "propositionListCountSetMode", "PROPOSITION_LIST_COUNT_SET_MODE", "on", "marketContext", "SET_MARKET_CONTEXT", "market", "indexOf", "replace", "console", "error", "FETCH_OFFERS", "newContext", "payload", "filterMarketSegment", "loadObjectFromSessionStorage", "key", "value", "checkMsisdnResult", "CHECK_MSISDN_RESULT", "stringify", "response", "CHECK_MSISDN_ERROR", "isPositive", "description", "message", "CLEAR_CHECK_MSISDN", "SELECT_PROCESS_TYPE", "warn", "processType", "CUSTOMER_SELECTED", "isMsisdnChecking", "CHECK_MSISDN", "msisdnInput", "msisdn", "valid", "MSISDN_INPUT_CHANGED", "verifiedMsisdnB2B", "CHECK_MSISDN_RESULT_B2B", "index", "status", "CLEAR_CHECK_MSISDN_B2B", "newState2", "verifiedMsisdn", "retVal", "context", "offer", "process", "log", "msisdnVerificationNeeded", "MSISDN_VERIFICATION_NEEDED", "data", "FETCH_OFFER_FILTERS", "valueFromParameter", "isParameterExistsInPayload", "find", "r", "canonicalConfiguration", "isCanonicalConfiguration", "isCanonicalLink", "saveCanonicalValueInSessionStorage", "urlParametersUsed", "processTypeTmp", "loyaltyLength", "Object", "assign", "loyaltyUrl", "loyaltyFromUrlOrStorage", "findGivenLoyaltyFormUrlInArray", "map", "loyalties", "defaultProcessFromPayload", "defaultProcess", "SELECT_LOYALTY_LENGTH", "newValue", "CLEAR_LOYALTY_LENGTH", "availableLoyalties", "proc", "length", "loy", "initOfferTypeState", "originalState", "getFromSessionStorageAndSetUrlParameter", "SELECT_OFFER_TYPE", "saveInSessionStorageAndUrlParameterDisabledOnCheckout", "validOfferTypes", "getOwnPropertyNames", "defaultFilters", "newFilters", "offerFiltersLoading", "FETCH_OFFER_FILTERS_START", "offerTypeFiltersCached", "selectedOfferType", "newOfferFiltersData", "findIndex", "offerFiltersElement", "splice", "offerFilters", "processForMsisdn", "PROCESS_FOR_MSISDN", "genericProcess", "concreteProcess", "existValue", "sessionJson", "sessionState", "selected", "urlProcess", "urlLoyalty", "array", "selectedProcess", "p", "l"],
    "mappings": "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",
    "sourcesContent": ["import {combineReducers} from \"redux\";\nimport {\n    findDefaultOptionInArrayOrPickFirst,\n    findDefaultOptionInArrayOrSmallestValue\n} from \"eshop/modules/configurator/utils\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\nimport {\n    CHECK_MSISDN,\n    CHECK_MSISDN_ERROR,\n    CHECK_MSISDN_RESULT,\n    CHECK_MSISDN_RESULT_B2B,\n    CLEAR_CHECK_MSISDN,\n    CLEAR_CHECK_MSISDN_B2B,\n    CLEAR_LOYALTY_LENGTH,\n    CLIENT_CONTEXT_CHANGE_SUBSCRIPTION,\n    CLIENT_CONTEXT_DISABLED,\n    CLIENT_CONTEXT_ENABLED,\n    CUSTOMER_SELECTED,\n    FETCH_OFFER_FILTERS,\n    FETCH_OFFER_FILTERS_START,\n    FETCH_OFFERS,\n    MSISDN_INPUT_CHANGED,\n    MSISDN_VERIFICATION_NEEDED,\n    PROCESS_FOR_MSISDN,\n    PROPOSITION_LIST_COUNT_DECREMENT,\n    PROPOSITION_LIST_COUNT_INCREMENT,\n    PROPOSITION_LIST_COUNT_SET,\n    PROPOSITION_LIST_COUNT_SET_MODE,\n    PROPOSITION_LIST_OFFER_TYPE,\n    PROPOSITION_LIST_SOFT_BUNDLE_GROUP,\n    SELECT_LOYALTY_LENGTH,\n    SELECT_PROCESS_TYPE,\n    SET_MARKET_CONTEXT,\n    SET_MAX_SIM_COUNT,\n    USE_DEFAULT_LOYALTY,\n    USE_DEFAULT_OFFER,\n    USE_DEFAULT_OFFER_TYPE,\n    USE_DEFAULT_PROCESS,\n} from \"../actionTypes\";\nimport {REGISTER_OFFER_TYPES_CMS_CONF, SELECT_OFFER_TYPE} from \"eshop/modules/simfree/actionTypes\";\n\nconst getInitialClientContextState = () => OnlineUtils.loadFromSessionStorage(\"convergence\")===\"true\";\nconst getSelectedOfferType = () => OnlineUtils.loadFromSessionStorage(\"offerType\");\n\nexport const cmsConf = (state = {}, action) => {\n    switch (action.type) {\n        case REGISTER_OFFER_TYPES_CMS_CONF:\n            return action.cmsConf || state;\n        default:\n            return state\n    }\n};\n\n\nconst parseUseDefaults = () => {\n    if(OnlineUtils.loadFromSessionStorage(\"dontUseDefaults\")!=undefined){\n        return !OnlineUtils.loadFromSessionStorage(\"dontUseDefaults\");\n\n    }\n    return true;\n\n};\nexport var useDefaultOfferType = (state=parseUseDefaults(),action) => {\n    switch (action.type){\n        case USE_DEFAULT_OFFER_TYPE:\n            return action.use;\n        default:\n            return state;\n    }\n};\nexport var maxSimCount = (state=5,action) => {\n    switch (action.type){\n        case SET_MAX_SIM_COUNT:\n            OnlineUtils.saveInSessionStorage(\"maxSimCount\",action.maxSimCount);\n            return action.maxSimCount;\n        default:\n            OnlineUtils.saveInSessionStorage(\"maxSimCount\",state);\n            return state;\n    }\n};\n\nexport var useDefaultProcess = (state=parseUseDefaults(),action) => {\n    switch (action.type){\n        case USE_DEFAULT_PROCESS:\n            return action.use;\n        default:\n            return state;\n    }\n};\nexport var useDefaultLoyalty = (state=parseUseDefaults(),action) => {\n    switch (action.type){\n        case USE_DEFAULT_LOYALTY:\n            return action.use;\n        default:\n            return state;\n    }\n};\nexport var useDefaultOffer = (state=true,action) => {\n    switch (action.type){\n        case USE_DEFAULT_OFFER:\n            return action.use;\n        default:\n            return state;\n    }\n};\nexport var clientContext = (state = getInitialClientContextState(), action) => {\n    switch (action.type) {\n        case CLIENT_CONTEXT_ENABLED:\n            OnlineUtils.saveInStorageOnCanonicalLinks(\"convergence\",true);\n            return true\n        case CLIENT_CONTEXT_DISABLED:\n            OnlineUtils.saveInStorageOnCanonicalLinks(\"convergence\",false);\n            return false\n        default:\n            if(OnlineUtils.getParameterValueFromUrl(\"convergence\")){\n                return JSON.parse(OnlineUtils.getParameterValueFromUrl(\"convergence\"));\n            }\n            OnlineUtils.changeOrAddUrlParameterDisabledOnCheckoutParameterLinks(\"convergence\",state);\n            return state;\n    }\n};\n\nexport var clientContextChangeHandlers = (state = [], action) => {\n    switch (action.type) {\n        case CLIENT_CONTEXT_CHANGE_SUBSCRIPTION:\n            let newState = state.slice();\n            newState.push(action.handler);\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport var propositionListOfferType = (state = OnlineUtils.loadFromSessionStorage(\"propositionListOfferType\"),action)=>{\n    switch (action.type) {\n        case PROPOSITION_LIST_OFFER_TYPE:\n            OnlineUtils.saveInSessionStorage(\"propositionListOfferType\",action.offerType);\n            if(!action.offerType || action.offerType==\"null\"){\n                OnlineUtils.removeFromSessionStorage(\"propositionListOfferType\");\n                return null;\n            }\n            return action.offerType;\n        default:\n            return state;\n    }\n\n};\nexport var propositionListSoftBundleGroup = (state = OnlineUtils.loadFromSessionStorage(\"propositionListSoftBundleGroup\"),action)=>{\n\n    switch (action.type) {\n\n        case PROPOSITION_LIST_SOFT_BUNDLE_GROUP:\n            OnlineUtils.saveInSessionStorage(\"propositionListSoftBundleGroup\",action.softBundleGroup);\n            if(!action.softBundleGroup || action.softBundleGroup==\"null\"){\n                OnlineUtils.removeFromSessionStorage(\"propositionListSoftBundleGroup\");\n                return null;\n            }\n            return action.softBundleGroup;\n        default:\n            return state;\n    }\n\n};\nconst propositionListCountValue = () => {\n    if(OnlineUtils.loadFromSessionStorage(\"propositionListCount\")!=undefined || !!OnlineUtils.getParameterValueFromUrl(\"count\")){\n        return parseInt(OnlineUtils.getParameterValueFromUrl(\"count\") || OnlineUtils.loadFromSessionStorage(\"propositionListCount\"));\n    }\n    return simCountSelectedValue();\n};\nconst simCountSelectedValue = () => {\n    if(!!OnlineUtils.getParameterValueFromUrl(\"count\")){\n        let retValue = parseInt(OnlineUtils.getParameterValueFromUrl(\"count\") <= OnlineUtils.loadFromSessionStorage(\"maxSimCount\") ? OnlineUtils.getParameterValueFromUrl(\"count\") : OnlineUtils.loadFromSessionStorage(\"maxSimCount\"))\n        OnlineUtils.changeOrAddUrlParameterDisabledOnCheckout(\"count\",retValue);\n        return retValue;\n    }\n    if(OnlineUtils.loadFromSessionStorage(\"simCountSelected\")!=undefined){\n        return parseInt(OnlineUtils.loadFromSessionStorage(\"simCountSelected\"));\n    }\n\n    return 1;\n};\nexport var simCountSelected = (state = simCountSelectedValue(), action={}) => {\n    switch (action.type) {\n        case PROPOSITION_LIST_COUNT_SET:\n            OnlineUtils.saveInSessionStorage(\"simCountSelected\", action.count);\n            OnlineUtils.changeOrAddUrlParameterDisabledOnCheckout(\"count\",action.count);\n            return action.count;\n        default:\n            return state;\n    }\n};\nexport var propositionListCount = (state = propositionListCountValue(), action={}) => {\n    switch (action.type) {\n        case PROPOSITION_LIST_COUNT_INCREMENT:\n            if(state <= 0) {\n                OnlineUtils.saveInSessionStorage(\"propositionListCount\", 1);\n                return 1;\n            }\n            OnlineUtils.saveInSessionStorage(\"propositionListCount\", state + 1);\n            return state + 1;\n        case PROPOSITION_LIST_COUNT_DECREMENT:\n            if(state == 0) {\n                OnlineUtils.saveInSessionStorage(\"propositionListCount\", state);\n                return state;\n            }\n            OnlineUtils.saveInSessionStorage(\"propositionListCount\", state - 1);\n            return state - 1;\n        case PROPOSITION_LIST_COUNT_SET:\n            OnlineUtils.saveInSessionStorage(\"propositionListCount\", action.count);\n            return action.count;\n        default:\n            return state;\n    }\n};\nexport var propositionListCountSetMode = (state = false,action) => {\n    switch (action.type) {\n         case PROPOSITION_LIST_COUNT_SET_MODE:\n            return action.on;\n        default:\n            return state;\n    }\n};\nexport var marketContext = (state = \"B2C\", action) => {\n    switch (action.type) {\n        case SET_MARKET_CONTEXT:\n            if(!!action.market && [\"B2B\",\"B2C\"].indexOf(action.market.replace(\"_SOHO\", \"\")) > -1){\n                return action.market\n            } else {\n                console.error(\"Unknown market: \" + action.market);\n                return state\n            }\n        case FETCH_OFFERS:\n            let newContext = action.payload && action.payload[0] && action.payload[0].filterMarketSegment;\n            newContext = newContext && newContext.replace(\"_SOHO\", \"\");\n            return newContext || state;\n        default:\n            return state;\n    }\n};\n\nconst loadObjectFromSessionStorage = (key) => {\n    const value = OnlineUtils.loadFromSessionStorage(key);\n    if(!value || value === \"null\") {\n        return {};\n    }\n    return JSON.parse(value);\n};\n\nexport var checkMsisdnResult = (state = loadObjectFromSessionStorage(\"checkMsidnResult\") || {}, action) => {\n    switch (action.type) {\n        case CHECK_MSISDN_RESULT:\n            OnlineUtils.saveInSessionStorage(\"checkMsidnResult\",JSON.stringify(action.payload.response));\n            return action.payload.response;\n        case CHECK_MSISDN_ERROR:\n            OnlineUtils.saveInSessionStorage(\"checkMsidnResult\",JSON.stringify({isPositive: false, description: action.message}));\n            return {isPositive: false, description: action.message};\n        case CLEAR_CHECK_MSISDN:\n        case SELECT_PROCESS_TYPE:\n            console.warn(\"checkMsisdnResult SELECT_PROCESS_TYPE\");\n            console.warn(\"action:\",action);\n            if(OnlineUtils.loadFromSessionStorage(\"processType\") === action.processType){\n                return state;\n            } else {\n                OnlineUtils.saveInSessionStorage(\"checkMsidnResult\",JSON.stringify({}));\n            }\n            return {};\n        case CUSTOMER_SELECTED:\n            OnlineUtils.saveInSessionStorage(\"checkMsidnResult\",JSON.stringify({}));\n            return {}\n        default:\n            return state;\n    }\n};\n\nexport var isMsisdnChecking = (state = false, action) => {\n    switch (action.type) {\n        case CHECK_MSISDN:\n            return true;\n        case CHECK_MSISDN_RESULT:\n            return false;\n        case CHECK_MSISDN_ERROR:\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport var msisdnInput = (state = {msisdn:\"\",valid:true}, action) => {\n    switch (action.type) {\n        case MSISDN_INPUT_CHANGED:\n            return action.payload;\n        case SELECT_PROCESS_TYPE:\n            console.warn(\"msisdnInput SELECT_PROCESS_TYPE\");\n            console.warn(\"action:\",action);\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport var verifiedMsisdnB2B = (state = [],action) => {\n    switch (action.type) {\n        case CHECK_MSISDN_RESULT_B2B:\n            let newState = state.slice(0);\n            newState[action.index] = {msisdn:action.msisdn,status:action.status,description: action.description};\n            return newState;\n        case CLEAR_CHECK_MSISDN_B2B:\n            let newState2 = state.slice(0);\n            newState2[action.index] = null;\n            return newState2;\n        default:\n            return state;\n    }\n};\n\nexport var verifiedMsisdn = (state = loadObjectFromSessionStorage(\"verifiedMsisdn\") || {}, action) => {\n    switch (action.type) {\n        case CHECK_MSISDN_ERROR:\n        case CHECK_MSISDN_RESULT:\n            const retVal = {\n                context: {\n                    market: action.payload.market,\n                    offer: action.payload.offer,\n                    process: action.payload.process\n                },\n                value: action.payload.response.msisdn\n            };\n            OnlineUtils.saveInSessionStorage(\"verifiedMsisdn\", JSON.stringify(retVal));\n            return retVal;\n        case SELECT_PROCESS_TYPE:\n            console.warn(\"verifiedMsisdn SELECT_PROCESS_TYPE\");\n            console.warn(\"action:\",action);\n            if(OnlineUtils.loadFromSessionStorage(\"processType\") === action.processType) {\n                return state;\n            } else {\n                console.log(\"CLEAR_CHECK_MSISDN by SELECT_PROCESS_TYPE\");\n                OnlineUtils.saveInSessionStorage(\"verifiedMsisdn\", JSON.stringify({}));\n                return {};\n            }\n        case CHECK_MSISDN:\n        case CUSTOMER_SELECTED:\n        case CLEAR_CHECK_MSISDN:\n            console.log(\"CLEAR_CHECK_MSISDN verifiedMsisdn \",action.type);\n            OnlineUtils.saveInSessionStorage(\"verifiedMsisdn\", JSON.stringify({}));\n            return {};\n        default:\n            return state;\n    }\n};\nexport var msisdnVerificationNeeded = (state = OnlineUtils.loadFromSessionStorage(\"msisdnVerificationNeeded\") || false, action) => {\n    switch (action.type) {\n        case MSISDN_VERIFICATION_NEEDED:\n             OnlineUtils.saveInSessionStorage(\"msisdnVerificationNeeded\", true);\n            return true;\n        default:\n            return state;\n    }\n};\n\nexport var data = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_OFFER_FILTERS:\n\n            return action.payload\n        default:\n            return state;\n    }\n};\n\n\nvar processType = (state =  OnlineUtils.getParameterValueFromUrl(\"processType\")||OnlineUtils.loadFromSessionStorage(\"processType\"), action) => {\n    switch (action.type) {\n        case FETCH_OFFER_FILTERS:\n            const valueFromParameter = OnlineUtils.getParameterValueFromUrl(\"processType\")||OnlineUtils.loadFromSessionStorage(\"processType\");\n            const isParameterExistsInPayload = action.payload.find(r => r.value === valueFromParameter);\n            const canonicalConfiguration = action.payload.find(r => r.isCanonicalConfiguration);\n            if (canonicalConfiguration && OnlineUtils.isCanonicalLink())  {\n                OnlineUtils.saveCanonicalValueInSessionStorage(\"processType\", canonicalConfiguration.value);\n                OnlineUtils.saveInStorageOnCanonicalLinks(\"processType\", canonicalConfiguration.value);\n                return canonicalConfiguration.value;\n            } else if(!action.urlParametersUsed && isParameterExistsInPayload) {\n                OnlineUtils.saveInStorageOnCanonicalLinks(\"processType\", valueFromParameter);\n                console.log(\"!action.urlParametersUsed && isParameterExistsInPayload \");\n                return valueFromParameter;\n            } else if (state && action.payload.find(r => r.value === state)){\n                console.log(\"state && action.payload.find(r => r.value === state)\");\n\n                return state;\n            } else if (action.useDefaultProcess){\n                console.log(\"action.useDefaultProcess\");\n                const processTypeTmp = findDefaultOptionInArrayOrPickFirst(action.payload);\n                console.log(processTypeTmp);\n                return processTypeTmp && processTypeTmp.value;\n            }\n            return state;\n        case SELECT_PROCESS_TYPE:\n            console.warn(\"processType SELECT_PROCESS_TYPE\");\n            console.warn(\"action:\",action);\n            OnlineUtils.saveInStorageOnCanonicalLinks(\"processType\", action.processType);\n            return action.processType;\n        default:\n            return state;\n    }\n};\n\nconst loyaltyLength = (state = ((!!OnlineUtils.getParameterValueFromUrl('loyalty')) ? OnlineUtils.getParameterValueFromUrl('loyalty') : OnlineUtils.loadFromSessionStorage(\"selectedLoyaltyDuration\")), action) => {\n    switch (action.type) {\n        case FETCH_OFFER_FILTERS:\n            let newState = {};\n\n            newState = Object.assign(newState, state);\n            let loyaltyUrl = OnlineUtils.getParameterValueFromUrl('loyalty');\n            let loyaltyFromUrlOrStorage = !!loyaltyUrl ? OnlineUtils.getParameterValueFromUrl('loyalty') : OnlineUtils.loadFromSessionStorage(\"selectedLoyaltyDuration\");\n            console.log(\"reduser loyaltyLength loyaltyLength FETCH_OFFER_FILTERS\");\n            console.log(\"reduser loyaltyLength action:\", action);\n            console.log(\"reduser loyaltyLength processType:\", OnlineUtils.getParameterValueFromUrl('processType'));\n            console.log(\"reduser loyaltyLength loyaltyUrl:\", loyaltyUrl);\n            console.log(\"reduser loyaltyLength loyaltyUrl:\", !!loyaltyUrl);\n            console.log(\"reduser loyaltyLength state\", state);\n            console.log(\"reduser loyaltyLength newState:\", newState);\n            if (!action.urlParametersUsed\n                && findGivenLoyaltyFormUrlInArray(OnlineUtils.getParameterValueFromUrl('processType'), loyaltyFromUrlOrStorage, action.payload)) {\n                action.payload.map(data => newState[data.value] = findDefaultOptionInArrayOrSmallestValue(data.loyalties));\n                newState[OnlineUtils.getParameterValueFromUrl('processType')] = loyaltyFromUrlOrStorage;\n                OnlineUtils.saveInSessionStorage(\"selectedLoyaltyDuration\", newState[OnlineUtils.getParameterValueFromUrl('processType')]);\n                console.log(\"loyalty from store or url\", newState[OnlineUtils.getParameterValueFromUrl('processType')]);\n            } else if (OnlineUtils.isCanonicalLink()) {\n                OnlineUtils.saveInSessionStorage(\"selectedLoyaltyDuration\", newState[OnlineUtils.loadFromSessionStorage('processType')]);\n            } else if (action.useDefaultLoyalty) {\n                console.log(\"useDefault loyalty\");\n                action.payload.map(data => newState[data.value] = (newState[data.value] || findDefaultOptionInArrayOrSmallestValue(data.loyalties)));\n                const defaultProcessFromPayload = findDefaultOptionInArrayOrPickFirst(action.payload)\n                const defaultProcess = OnlineUtils.loadFromSessionStorage(\"processType\") || (defaultProcessFromPayload && defaultProcessFromPayload.value);\n                OnlineUtils.saveInSessionStorage(\"selectedLoyaltyDuration\", newState[defaultProcess]);\n                OnlineUtils.changeOrAddUrlParameterDisabledOnCheckout(\"loyalty\", newState[defaultProcess]);\n            }\n            OnlineUtils.saveInSessionStorage(\"loyalty\", JSON.stringify(newState));\n            console.log(\"final state:\", newState);\n            return newState;\n        case SELECT_LOYALTY_LENGTH:\n            console.log(\"loyaltyLength SELECT_LOYALTY_LENGTH\");\n            let newValue = {};\n            newValue[action.processType] = action.loyaltyLength;\n            OnlineUtils.saveInSessionStorage(\"loyalty\", JSON.stringify(Object.assign({}, state, newValue)));\n            OnlineUtils.saveInSessionStorage(\"selectedLoyaltyDuration\", action.loyaltyLength);\n            OnlineUtils.changeOrAddUrlParameterDisabledOnCheckoutParameterLinks(\"loyalty\", action.loyaltyLength);\n            console.log(\"loyalty set to:\", Object.assign({}, state, newValue));\n            return Object.assign({}, state, newValue)\n        case CLEAR_LOYALTY_LENGTH:\n            console.log(\"loyaltyLength CLEAR_LOYALTY_LENGTH\");\n            OnlineUtils.saveInSessionStorage(\"loyalty\", JSON.stringify(newState));\n            OnlineUtils.saveInSessionStorage(\"selectedLoyaltyDuration\", \"\");\n            OnlineUtils.changeOrAddUrlParameterDisabledOnCheckout(\"loyalty\", \"\");\n            console.log(\"loyalty set to:\", Object.assign({}, state, newValue));\n            return {};\n        case SELECT_PROCESS_TYPE://kruci nie wiem czy to powinno tutaj byc czy moze w akcji\n            console.warn(\"loyaltyLength SELECT_PROCESS_TYPE\");\n            console.warn(\"action:\", action);\n            console.warn(\"state:\", state);\n            console.log(\"action.availableLoyalties.find(proc => proc.value==action.procesType)\",\n                action.availableLoyalties && action.availableLoyalties.find(proc => proc.value == action.processType));\n            if (action.useDefaultLoyalty) {\n                OnlineUtils.changeOrAddUrlParameterDisabledOnCheckout(\"loyalty\", state[action.processType]);\n\n            } else if (action.availableLoyalties && action.availableLoyalties.find(proc => proc.value === action.processType)) {\n                let availableLoyalties = action.availableLoyalties.find(proc => proc.value === action.processType).loyalties;\n                if (availableLoyalties && availableLoyalties.length > 0) {\n                    //auto select\n                    let newValue = {};\n\n                    if (availableLoyalties.find(loy => loy.value === state[action.processType])) {\n                        newValue[action.processType] = state[action.processType];\n\n                    } else {\n                        newValue[action.processType] = action.availableLoyalties.find(proc => proc.value === action.processType).loyalties[0].value;\n                    }\n                    OnlineUtils.changeOrAddUrlParameterDisabledOnCheckoutParameterLinks(\"loyalty\", newValue[action.processType]);\n                    OnlineUtils.saveInSessionStorage(\"selectedLoyaltyDuration\", newValue[action.processType]);\n                    console.log(\"loyalty set to:\", Object.assign({}, state, newValue));\n                    return Object.assign({}, state, newValue);\n                }\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\nfunction initOfferTypeState(){\n    var originalState;\n    if(OnlineUtils.isCanonicalLink()) {\n        originalState = OnlineUtils.getParameterValueFromUrl(\"offerType\") || \"SIMFREE_INST\";\n        OnlineUtils.saveCanonicalValueInSessionStorage(\"offerType\",originalState);\n        OnlineUtils.saveInSessionStorage(\"offerType\",originalState);\n    } else {\n         originalState = OnlineUtils.getParameterValueFromUrl(\"offerType\") || OnlineUtils.getFromSessionStorageAndSetUrlParameter(\"offerType\") || \"SIMFREE\";\n    }\n    return originalState\n}\nconst offerType = (state =  initOfferTypeState(), action) => {\n    switch (action.type) {\n        case SELECT_OFFER_TYPE:\n            if(action.offerType==undefined){\n                OnlineUtils.changeOrAddUrlParameterDisabledOnCheckoutParameterLinks(\"offerType\", state);\n                return state\n            }\n            OnlineUtils.saveInSessionStorageAndUrlParameterDisabledOnCheckout(\"offerType\",action.offerType);\n            return action.offerType;\n        case REGISTER_OFFER_TYPES_CMS_CONF:\n            let newState = state.slice();\n\n            if(action.validOfferTypes && action.validOfferTypes[0]){\n                if(action.validOfferTypes.indexOf(newState) <= -1){\n                    newState = action.validOfferTypes[0]\n                }\n            }\n            if(!parseUseDefaults()){\n                newState=\"\";\n                OnlineUtils.saveInSessionStorage(\"offerType\",newState);\n                return newState;\n            }\n            if(Object.getOwnPropertyNames(action.cmsConf).find(offerType => offerType === newState)){\n                OnlineUtils.saveInStorageOnCanonicalLinks(\"offerType\", newState);\n                return newState\n            } else if(Object.getOwnPropertyNames(action.cmsConf).length){//nie mamy konfiguracji dla domyslnej wartosci wiec ustawiamy voice\n                OnlineUtils.saveInStorageOnCanonicalLinks(\"offerType\", Object.getOwnPropertyNames(action.cmsConf)[0]);\n                return Object.getOwnPropertyNames(action.cmsConf)[0];\n\n            } else{//nie mamy konfiguracji dla domyslnej wartosci wiec ustawiamy voice\n                OnlineUtils.changeOrAddUrlParameterDisabledOnCheckout(\"offerType\", \"SIMFREE\");\n                return \"SIMFREE\"\n            }\n        default:\n            return  state\n    }\n};\n\nexport const defaultFilters = (state = {},action) => {\n    switch (action.type) {\n        case FETCH_OFFER_FILTERS:\n            const processType = findDefaultOptionInArrayOrPickFirst(action.payload);\n            let loyaltyLength = {};\n            action.payload.map(data => loyaltyLength[data.value] = findDefaultOptionInArrayOrSmallestValue(data.loyalties));\n            let newFilters = {processType: processType.value, loyaltyLength};\n            return newFilters;\n        default:\n            return state;\n    }\n};\n\nexport const offerFiltersLoading = (state = false, action) => {\n    switch (action.type) {\n        case FETCH_OFFER_FILTERS_START:\n            return true;\n        case FETCH_OFFER_FILTERS:\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport var offerTypeFiltersCached = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_OFFER_FILTERS:\n            let selectedOfferType = getSelectedOfferType();\n            let newOfferFiltersData = state.slice();\n            if (state && state.length === 0 ||\n                (state.length > 0 &&\n                    state.findIndex(offerFiltersElement => offerFiltersElement.offerType === selectedOfferType) === -1)) {\n                newOfferFiltersData.splice(0, 0, {offerType: selectedOfferType, offerFilters: action.payload});\n            }\n            return newOfferFiltersData;\n        default:\n            return state;\n    }\n};\n//{\n//    \"msisdn1\":{\n//        \"genericProcess1\": \"concreteProcess1\",\n//        \"genericProcess2\": \"concreteProcess2\"\n//    },\n//    \"msisdn2\":{\n//        \"genericProcess2\": \"concreteProcess3\",\n//        \"genericProcess4\": \"concreteProcess4\"\n//    }\n//}\nexport const processForMsisdn = (state = {}, action) => {\n    switch (action.type) {\n        case PROCESS_FOR_MSISDN:\n            if (action.msisdn && action.genericProcess && action.concreteProcess) {\n                const existValue = state[action.msisdn];\n                if (!existValue && action.genericProcess != action.concreteProcess) {\n                    const newState = {...state};\n                    newState[action.msisdn] = action.concreteProcess;\n                    OnlineUtils.saveInSessionStorage(\"processForMsisdn\", JSON.stringify(newState));\n                    return newState;\n                }\n            }\n            return state;\n        case FETCH_OFFER_FILTERS:\n            const sessionJson = OnlineUtils.loadFromSessionStorage(\"processForMsisdn\");\n            let sessionState = state;\n            if (!!sessionJson) {\n                sessionState = JSON.parse(sessionJson);\n            }\n            return sessionState;\n        case CUSTOMER_SELECTED:\n            OnlineUtils.removeFromSessionStorage(\"processForMsisdn\");\n            return {};\n        default:\n            return state;\n    }\n};\n\n\n\n//SELECT_OFFER_TYPE\n\n\nexport var selected = combineReducers({\n    processType : processType,\n    loyaltyLength : loyaltyLength,\n    offerType: offerType,\n    verifiedMsisdn: verifiedMsisdn\n});\n\nfunction findGivenLoyaltyFormUrlInArray(urlProcess, urlLoyalty, array) {\n    const selectedProcess = array.find(p => p.value === urlProcess);\n    return selectedProcess && selectedProcess.loyalties && selectedProcess.loyalties.find(l => l.value == urlLoyalty);\n}\n"],
    "file": "filters.js"
}