{
    "version": 3,
    "sources": ["../../../../../../../../../es6/eshop/modules/configurator/components/lp/offers/newOfferBoxComponents/Feature.jsx"],
    "names": ["Feature", "props", "feature", "processes", "length", "find", "process", "processType", "clientContext", "convergence", "innerHtml", "__html", "value", "className", "removeClassFromLast", "index", "TooltipFromHtml", "conditionalRenderWithClassName", "Component"],
    "mappings": ";;;;;;;AAAA;AACA;;;;;;MAEaA,O;;;;;;;;;;;;+BAEA;AAAA;;AACN,YAAG,CAAC,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,SAAnB,CAA6BC,MAA7B,KAAwC,CAAxC,IAA6C,KAAKH,KAAL,CAAWC,OAAX,CAAmBC,SAAnB,CAA6BE,IAA7B,CAAkC,UAAAC,OAAO;AAAA,iBAAIA,OAAO,KAAK,KAAI,CAACL,KAAL,CAAWM,WAA3B;AAAA,SAAzC,CAA9C,MAAoI,CAAC,KAAKN,KAAL,CAAWC,OAAX,CAAmBM,aAApB,IAAqC,KAAKP,KAAL,CAAWQ,WAAX,KAA2B,KAAKR,KAAL,CAAWC,OAAX,CAAmBM,aAAvN,CAAH,EAA0O;AACtO,cAAIE,SAAS,GAAG;AAAEC,YAAAA,MAAM,EAAE,KAAKV,KAAL,CAAWC,OAAX,CAAmBU;AAA7B,WAAhB;AACA,cAAMC,SAAS,GAAG,KAAKZ,KAAL,CAAWa,mBAAX,GAAkC,KAAKb,KAAL,CAAWG,MAAX,GAAmB,CAAnB,KAAyB,KAAKH,KAAL,CAAWc,KAApC,GAA4C,EAA5C,GAAiD,KAAKd,KAAL,CAAWY,SAA9F,GAA2G,KAAKZ,KAAL,CAAWY,SAAxI,CAFsO,CAGtO;;AACA,iBAAOG,yBAAgBC,8BAAhB,CAA+C,KAAKhB,KAAL,CAAWC,OAAX,CAAmBU,KAAlE,EAAwEC,SAAxE,CAAP;AACH,SALD,MAKO;AACH,iBAAO,IAAP;AACH;AACH;;;IAXwBK,gB",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport TooltipFromHtml from \"eshop/modules/core/components/ui/TooltipFromHtml\";\n\nexport class Feature extends Component {\n\n    render() {\n       if((this.props.feature.processes.length === 0 || this.props.feature.processes.find(process => process === this.props.processType)) && (!this.props.feature.clientContext || this.props.convergence === this.props.feature.clientContext)) {\n           let innerHtml = { __html: this.props.feature.value }\n           const className = this.props.removeClassFromLast ? (this.props.length -1 === this.props.index ? \"\" : this.props.className) : this.props.className\n           //return <p className={className} dangerouslySetInnerHTML={innerHtml}></p>\n           return TooltipFromHtml.conditionalRenderWithClassName(this.props.feature.value,className);\n       } else {\n           return null\n       }\n    }\n}"],
    "file": "Feature.js"
}