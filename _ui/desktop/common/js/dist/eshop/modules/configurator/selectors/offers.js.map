{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/configurator/selectors/offers.js"],
    "names": ["getOffersData", "getOffers", "offers", "data", "getOffersDocuments", "documents", "getCalculatedContractRole", "getSelectedProcessTypeValue", "getCheckMsisdnResult", "getSalesChannel", "processType", "msisdnCheckResult", "salesChannel", "isWWW", "isPositive", "contractRoleForRetention", "contractRole", "getNextContractRole", "getClientContext", "getClientContextRole", "isLogged", "getCartEntries", "calculatedContractRole", "clientContext", "clientContextRole", "cartEntries", "cartNotEmpty", "getContractRole", "getContractRoleByBundleNo", "getAddTerminalToOfferBundleNo", "nextContractRole", "existingContractRoleByBundleNo", "addChangeTerminalForBundleNo", "existingRole", "parseInt", "getContractRoleInProgress", "getFirstOfferFromProductFilter", "firstOfferFromProductFilter", "getOffersForCurrentFilters", "getSelectedFilters", "currentFilters", "getOffersForCurrentFiltersB2B", "getSelectedFiltersB2B", "map", "singleFilter", "checkOffersForCurrentFilters", "find", "checkOffersForCurrentIndexedFiltersB2B", "index", "sortedOffersByBasePrice", "sort", "a", "b", "payments", "basePrice", "originalGrossPrice", "getOffersByCurrentFiltersForSelect", "offer", "value", "id", "description", "rateplanName", "getRateplanIds", "rateplanId", "getAvailableBaseRateplanIds", "rateplanBaseProductId", "getRateplanIdsObj", "getBaseRatePlanIdByPropositionId", "propositionId", "selectedOffer", "getOfferByPropositonIdForCurrentFilters", "getPropositionIdByRatePlanId", "getPropositionIdsByRatePlanId", "console", "log", "selectedOffers", "filter", "getSelectedBaseRatePlanId", "selectedRateplanBaseProductId", "getSelectedOfferId", "selected", "getSelectedDeviceId", "selectedDevice", "getSelectedDeviceInstalmentsCountValue", "selectedDeviceInstalmentsCount", "getDeviceInstalmentsConfiguration", "deviceInstalmentsConfiguration", "getDeviceInstalmentsCountValueByPropositionId", "physicalGoodsInPropositionData", "deviceInstalmentsCount", "getDeviceInstalmentsConfigurationInContext", "getSelectedOfferType", "matchDeviceInstalmentsConfiguration", "getSelectedOffer", "offerId", "servicePlanId", "undefined", "o", "getInstallmentCount", "deviceData", "inOffer", "price", "base", "devicePayments", "monthTo", "getSelectedOffersDeviceName", "getPhysicalGoodsInPropositionData", "getDeviceInstalmentsCount", "getDeviceInstalmentsCountForSelect", "deviceInstallmentCountForSelect", "getDefaultDeviceInstalmentsCountValue", "defaultDeviceInstalmentsCountValue", "getCurrentDeviceInstalmentsCountValue", "def", "getSelectedOfferRatePlanName", "getSelectedOfferPosition", "selectedPosition", "getNameForSelectedOffer", "getOffersDataInContext", "createOffersDataInContext", "getOffersInContext", "getOfferDataInContextForPropositionId", "getSelectedOfferDataInContext", "getLongDescriptionTableForSelectedOffer", "longDescriptionTable", "getMnpPriceDescriptionForSelectedOffer", "mnpDesc", "features", "featureGroups", "mnpFeatures", "featureValues", "boxFeatures", "x", "code", "indexOf", "getSelectedVases", "selectedVases", "getGratisPackagesForPropositionId", "addons", "categorizedBonuses", "services", "conf", "offerType", "process", "matchingConf", "c", "accuracy", "offertType", "c1", "c2", "defaultSelectConf", "selectTemplate", "presentation", "installmentsAccordingToTemplate", "v", "installmentsAccordingToTemplateWithoutAllOption", "length", "defaultValue", "firstFromConf", "sc", "groupNames", "visibleAttributes", "reduce", "obj", "item", "allAttributes", "bonusPriceApplied", "offerMetric", "parseFloat", "replace", "offerComparator", "o1", "o2", "markAsPresent", "key", "attribute", "uniq", "markAsVisible", "val", "push", "matchClientContext", "attr", "matchProcess", "processes", "p", "newAttributes", "attributes", "markAsHide", "hide", "toCanonical", "f", "codePrefix", "newFeatureGroups", "forEach", "gName", "newFeatures", "extractValueFor", "attrName", "mobileFeatures", "icon", "toLowerCase", "getMobileDataDesc", "call", "getMobileRetentionDesc", "newOffer", "getDescriptionsWithRoles", "descriptionFeatures", "df", "roles", "getDefaultDescription", "descriptions", "d", "getBonusDescription", "toParse", "details", "JSON", "parse", "e", "error", "plainPrice", "OnlineUtils", "getPaymentsForRole", "bonusPrice", "oldPrice", "newOffers"],
    "mappings": "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",
    "sourcesContent": ["import {createSelector} from \"Reselect\";\nimport {getOffers} from \"./root\";\nimport {hashFilters, mapRateplanIdsToJsonObject} from \"../utils\";\nimport {\n    getCheckMsisdnResult,\n    getClientContext,\n    getClientContextRole,\n    getSelectedFilters,\n    getSelectedFiltersB2B,\n    getSelectedOfferType,\n    getSelectedProcessTypeValue,\n} from \"./filters\";\nimport {getAddTerminalToOfferBundleNo, getCartEntries, getContractRoleByBundleNo} from \"eshop/modules/cart/selectors\";\nimport {getSalesChannel, isLogged} from \"eshop/modules/auth/selectors/authorization\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\n\nexport const getOffersData = createSelector(getOffers, offers => offers&&offers.data);\nexport const getOffersDocuments = createSelector(getOffers, offers => offers.documents);\n\nexport const getCalculatedContractRole = createSelector([getOffers, getSelectedProcessTypeValue, getCheckMsisdnResult, getSalesChannel], (offers, processType, msisdnCheckResult, salesChannel) => {\n    let isWWW = salesChannel === \"WWW\";\n    if (\"RETENTION\" === processType) {\n        if (isWWW || (msisdnCheckResult && msisdnCheckResult.isPositive)) {\n            return offers.contractRoleForRetention;\n        } else {\n            return [];\n        }\n    } else {\n        return offers.contractRole;\n    }\n});\n\nexport const getNextContractRole = createSelector([getCalculatedContractRole, getClientContext, getClientContextRole, isLogged, getCartEntries, getSalesChannel], (calculatedContractRole, clientContext, clientContextRole, isLogged, cartEntries, salesChannel) => {\n    let cartNotEmpty = (cartEntries || [])[0];\n    let isWWW = salesChannel === \"WWW\";\n\n    if (!isWWW || (isWWW && (isLogged || cartNotEmpty))) {\n        return calculatedContractRole;\n    } else if (clientContext) {\n        return [clientContextRole];\n    } else {\n        return [];\n    }\n});\n\nexport const getContractRole = createSelector([getNextContractRole, getContractRoleByBundleNo, getAddTerminalToOfferBundleNo],\n    (nextContractRole, existingContractRoleByBundleNo, addChangeTerminalForBundleNo) => {\n        if (addChangeTerminalForBundleNo) {\n            let existingRole = existingContractRoleByBundleNo[parseInt(addChangeTerminalForBundleNo)];\n            return existingRole ? [existingRole] : [];\n        } else {\n            return nextContractRole;\n        }\n    });\n\nexport const getContractRoleInProgress = createSelector(getOffers, offers => offers.getContractRoleInProgress);\n\nexport const getFirstOfferFromProductFilter = createSelector(getOffers, offers => offers&&offers.firstOfferFromProductFilter);\n\nexport const getOffersForCurrentFilters = createSelector([getOffersData, getSelectedFilters], (data, currentFilters) => data && data[hashFilters(currentFilters)]);\nexport const getOffersForCurrentFiltersB2B = createSelector([getOffersData, getSelectedFiltersB2B], (data, currentFilters) => currentFilters.map(singleFilter => data[hashFilters(singleFilter)]));\n\nexport const checkOffersForCurrentFilters = createSelector([getOffersData, getSelectedFiltersB2B], (data, currentFilters) => currentFilters.find(singleFilter => data[hashFilters(singleFilter)]));\nexport const checkOffersForCurrentIndexedFiltersB2B = index => createSelector([getOffersData, getSelectedFiltersB2B], (data, currentFilters) => data[hashFilters(currentFilters[index])]);\nexport const sortedOffersByBasePrice = createSelector(getOffersForCurrentFilters, data => data && data.sort((a, b) => a.payments.basePrice.originalGrossPrice - b.payments.basePrice.originalGrossPrice));\nexport const getOffersByCurrentFiltersForSelect = createSelector(sortedOffersByBasePrice, data => data && data.map(offer => ({\n    value: offer.id,\n    description: offer.rateplanName,\n})) || []);\n\nexport const getRateplanIds = createSelector(getOffersForCurrentFilters, data => data && data.map(function (offer) {\n    return offer.rateplanId;\n}) || []);\nexport const getAvailableBaseRateplanIds = createSelector(getOffersForCurrentFilters, data => data && data.map(offer => offer.rateplanBaseProductId) || []);\nexport const getRateplanIdsObj = createSelector(getRateplanIds, data => mapRateplanIdsToJsonObject(data));\nexport const getBaseRatePlanIdByPropositionId = (propositionId) => createSelector(getOffersForCurrentFilters, data => {\n        let selectedOffer = data.find(offer => offer.id === propositionId);\n        return selectedOffer && selectedOffer.rateplanBaseProductId || \"\";\n    }\n);\n\nexport const getOfferByPropositonIdForCurrentFilters = propositionId => createSelector(getOffersForCurrentFilters,offers => offers.find(offer => offer.id === propositionId));\n\nexport const getPropositionIdByRatePlanId = (rateplanBaseProductId, data) => {\n    let selectedOffer = data && data.find(offer => offer.rateplanBaseProductId == rateplanBaseProductId);\n    return selectedOffer && selectedOffer.rateplanBaseProductId && selectedOffer.id || \"\"\n};\nexport const getPropositionIdsByRatePlanId = (rateplanBaseProductId, data) => {\n    console.log(\"getPropositionIdsByRatePlanId \", rateplanBaseProductId, data);\n    let selectedOffers = data && data.filter(offer => offer.rateplanBaseProductId == rateplanBaseProductId).map(offer => offer.id);\n    return selectedOffers\n};\n\nexport const getSelectedBaseRatePlanId = createSelector(getOffers, offers => offers.selectedRateplanBaseProductId);\n\nexport const getSelectedOfferId = createSelector(getOffers, offers => offers.selected);\n\nexport const getSelectedDeviceId = createSelector(getOffers, offers => offers.selectedDevice);\n\nexport const getSelectedDeviceInstalmentsCountValue = createSelector(getOffers, offers => offers.selectedDeviceInstalmentsCount);\n\nexport const getDeviceInstalmentsConfiguration = createSelector(getOffers, offers => offers.deviceInstalmentsConfiguration);\n\nexport const getDeviceInstalmentsCountValueByPropositionId = (propositionId) => createSelector(getOffersForCurrentFilters, data =>\n{\n    let selectedOffer = data.find(offer => offer.id === propositionId);\n    return (selectedOffer && selectedOffer.physicalGoodsInPropositionData &&  selectedOffer.physicalGoodsInPropositionData.deviceInstalmentsCount) || \"\";\n});\n\nexport const getDeviceInstalmentsConfigurationInContext = createSelector([getDeviceInstalmentsConfiguration, getSelectedOfferType, getSelectedProcessTypeValue], matchDeviceInstalmentsConfiguration);\n\nexport const getSelectedOffer = createSelector([getOffersForCurrentFilters, getSelectedOfferId, getSelectedBaseRatePlanId], (offers, offerId, servicePlanId) => {\n        if ((offerId == undefined || offerId == null || offerId == \"undefined\" || offerId == \"\" || offerId == \"null\") && !!servicePlanId) {\n            return offers && offers.find(o => o.rateplanBaseProductId == servicePlanId);\n            //match offerId from servicePlan\n        }\n        return offers && offers.find(o => o.id === offerId);\n    }\n);\n\nexport const getInstallmentCount = createSelector(getSelectedOffer, selectedOffer => {\n    if (selectedOffer &&\n        selectedOffer.deviceData &&\n        selectedOffer.deviceData.inOffer &&\n        selectedOffer.deviceData.inOffer.price) {\n        return selectedOffer.deviceData.inOffer.price.base.devicePayments[0].monthTo;\n    }\n    return 0;\n});\nexport const getSelectedOffersDeviceName = createSelector(getSelectedOffer, selectedOffer =>\n    selectedOffer && selectedOffer.deviceData && selectedOffer.deviceData);\n\nexport const getPhysicalGoodsInPropositionData = createSelector(getSelectedOffer,\n    offer => offer && offer.physicalGoodsInPropositionData\n);\n\nexport const getDeviceInstalmentsCount = createSelector(getPhysicalGoodsInPropositionData, data => data && data.deviceInstalmentsCount || []);\n\nexport const getDeviceInstalmentsCountForSelect = createSelector([getDeviceInstalmentsCount, getDeviceInstalmentsConfigurationInContext], deviceInstallmentCountForSelect);\n\nexport const getDefaultDeviceInstalmentsCountValue = createSelector([getDeviceInstalmentsCount, getDeviceInstalmentsConfigurationInContext], defaultDeviceInstalmentsCountValue);\n\nexport const getCurrentDeviceInstalmentsCountValue = createSelector([getSelectedDeviceInstalmentsCountValue, getDefaultDeviceInstalmentsCountValue], (selected, def) => selected || def);\n\nexport const getSelectedOfferRatePlanName = createSelector(getSelectedOffer, offer => offer && offer.rateplanName || \"\");\n\nexport const getSelectedOfferPosition = createSelector(getOffers, offers => offers && typeof offers.selectedPosition === \"number\" && parseInt(offers.selectedPosition));\n\nexport const getNameForSelectedOffer = createSelector(getSelectedOffer, offer => offer && offer.rateplanName);\n\nexport const getOffersDataInContext = createSelector([getOffersForCurrentFilters, getClientContext, getSelectedProcessTypeValue, getContractRole], createOffersDataInContext );\n\nexport const getOffersInContext = createSelector(getOffersDataInContext, data => data && data.offers || []);\n\nexport const getOfferDataInContextForPropositionId = propositionId => createSelector(getOffersInContext, data => data.find(offer => offer.id === propositionId));\nexport const getSelectedOfferDataInContext = createSelector([getOffersInContext, getSelectedOfferId], (data, propositionId) => data.find(offer => offer.id === propositionId));\n\nexport const getLongDescriptionTableForSelectedOffer = createSelector(getSelectedOfferDataInContext,\n    offer => offer && offer.longDescriptionTable\n);\n\nexport const getMnpPriceDescriptionForSelectedOffer = createSelector(getSelectedOffer,\n    offer => {\n        let mnpDesc = offer && offer.features.featureGroups.mnpFeatures && offer.features.featureGroups.mnpFeatures[0].featureValues[0].value;\n        mnpDesc = mnpDesc || (offer && offer.features.featureGroups.boxFeatures || [])\n            .filter(x => x.code.indexOf(\"mnp_price_desc\") > -1)\n            .map(x => x.featureValues[0].value)[0];\n        return mnpDesc;\n    }\n);\n\nexport const getSelectedVases = createSelector(getOffers, offers=> offers.selectedVases);\nexport const getGratisPackagesForPropositionId = propositionId => createSelector(getOfferDataInContextForPropositionId(propositionId), data =>\n    data &&\n    data.addons &&\n    data.addons.categorizedBonuses[\"GratisPackageBonuses\"] &&\n    data.addons.categorizedBonuses[\"GratisPackageBonuses\"].services || []);\n\nfunction matchDeviceInstalmentsConfiguration(conf, offerType, process) {\n    let matchingConf = conf\n        .filter(c => c.process == null || c.process == process)\n        .filter(c => c.offerType == null || c.offerType == offerType);\n\n    function accuracy(c) {\n        return (c.process != null ? 1 : 0) + (c.offertType != null ? 1 : 0);\n    }\n\n    matchingConf.sort((c1, c2) => accuracy(c2) - accuracy(c1));\n\n    return matchingConf[0];\n}\n\nfunction deviceInstallmentCountForSelect(data, conf){\n    let defaultSelectConf = [\n        {\"value\":-1, \"description\": \"Wszystkie\"},\n        {\"value\":12, \"description\": \"12 rat\"},\n        {\"value\":24, \"description\": \"24 raty\"},\n        {\"value\":36, \"description\": \"36 rat\"},\n        {\"value\":48, \"description\": \"48 rat\"},\n    ];\n\n    let selectTemplate = conf && conf.presentation || defaultSelectConf;\n\n    let installmentsAccordingToTemplate = selectTemplate.filter( v => data.indexOf(v.value)>-1 || v.value == -1);\n    let installmentsAccordingToTemplateWithoutAllOption = installmentsAccordingToTemplate.filter(v => v.value != -1);\n\n    if (installmentsAccordingToTemplateWithoutAllOption.length == 1) {\n        return installmentsAccordingToTemplateWithoutAllOption\n    } else {\n        return installmentsAccordingToTemplate\n    }\n}\n\nfunction defaultDeviceInstalmentsCountValue(data, conf) {\n    let defaultValue = conf && conf[\"default\"];\n    if (defaultValue && data.indexOf(defaultValue) > -1) {\n        //default\n        return defaultValue\n    } else if (conf && conf.presentation) {\n        //first from conf\n        let selectTemplate = conf && conf.presentation;\n        let firstFromConf = selectTemplate.filter(sc => data.indexOf(defaultValue) > -1)[0];\n        return (firstFromConf && firstFromConf.value) || -1;\n    } else {\n        return -1;\n    }\n}\n\nfunction createOffersDataInContext(offers, clientContext, process, contractRole) {\n    contractRole = contractRole ? contractRole[0] : null;\n    console.log(\"## createOffersDataInContext\", {offers}, {clientContext}, {process}, {contractRole}, \"##\");\n\n\n    let groupNames = [\"boxFeatures\", \"badgeFeatures\", \"promotionFeatures\", \"mobileFeatures\"];\n\n    let visibleAttributes = groupNames.reduce((obj, item) => ({...obj, [item]: []}), {});\n    let allAttributes = groupNames.reduce((obj, item) => ({...obj, [item]: []}), {});\n    let bonusPriceApplied = false;\n\n    function offerMetric(o) {\n        if (o && o.payments && o.payments.basePrice && o.payments.basePrice.price)\n            return parseFloat(o.payments.basePrice.price.replace(\",\", \".\"));\n        return null;\n    }\n\n    function offerComparator(o1, o2) {\n        return offerMetric(o1) - offerMetric(o2);\n    }\n\n    function markAsPresent(key, attribute) {\n        uniq(allAttributes, key, attribute);\n    }\n\n    function markAsVisible(key, attribute) {\n        uniq(visibleAttributes, key, attribute);\n    }\n\n    function uniq(obj, key, val) {\n        if (!obj[key].find(a => a === val)) {\n            obj[key].push(val);\n        }\n    }\n\n    function matchClientContext(attr, clientContext) {\n        if (attr.clientContext != null) {\n            return attr.clientContext == clientContext;\n        } else {\n            return true;\n        }\n    }\n\n    function matchProcess(attr, process) {\n        if (process && attr.processes && attr.processes[0]) {\n            if (attr.processes.find(p => p == process)) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return true;\n        }\n    }\n\n    function newAttributes(attributes) {\n\n        function markAsHide(attr) {\n            return {...attr, hide: true};\n        }\n\n        function toCanonical(f) {\n            const codePrefix = \"businessDescriptions/1.0/Offer_Descriptions.\";\n            return {\n                ...f,\n                attribute: f.code ? f.code.replace(codePrefix, \"\") : f.attribute,\n                value: (f.featureValues && f.featureValues.length > 0) ? f.featureValues[0][\"value\"] : f.value,\n            };\n        }\n\n        if (attributes) {\n            return attributes\n                .map(toCanonical)\n                .map(attr => !matchProcess(attr, process) ? markAsHide(attr) : attr)\n                .map(attr => !matchClientContext(attr, clientContext) ? markAsHide(attr) : attr);\n        }\n        return [];\n    }\n\n    function newFeatureGroups(featureGroups) {\n        let newFeatureGroups = {};\n        groupNames.forEach(gName => newFeatureGroups[gName] = newAttributes(featureGroups[gName]));\n        groupNames.forEach(gName => newFeatureGroups[gName] && newFeatureGroups[gName].forEach(attr => {\n            markAsPresent(gName, attr.attribute);\n            if (!attr.hide) {\n                markAsVisible(gName, attr.attribute);\n            }\n        }));\n        return newFeatureGroups;\n    }\n\n    function newFeatures(features) {\n        function extractValueFor(attrName, def) {\n            let attr = this.featureGroups.mobileFeatures.find(f => f.attribute === attrName);\n            if (attr && !attr.hide) {\n                return {value: attr.value, icon: attr.icon && attr.icon.toLowerCase().replace(\"_\", \"-\")};\n            } else {\n                return def ? {value: def} : def;\n            }\n        }\n\n        if (!features) {\n            return null;\n        }\n        return {\n            featureGroups: newFeatureGroups(features.featureGroups),\n            getMobileDataDesc: function () {\n                return extractValueFor.call(this, \"data_desc_short2\", \"BD\");\n            },\n            getMobileRetentionDesc: function () {\n                return extractValueFor.call(this, \"retention_desc_short2\");\n            },\n        };\n    }\n\n    function newOffer(offer) {\n\n        function getDescriptionsWithRoles() {\n            let descriptionFeatures = offer &&\n                offer.features &&\n                offer.features.featureGroups &&\n                offer.features.featureGroups.descriptionFeatures;\n\n            return (descriptionFeatures || []).map(df => ({\n                roles: df.roles,\n                value: df.featureValues && df.featureValues[0] && df.featureValues[0].value,\n            }));\n        }\n\n        function getDefaultDescription() {\n            let descriptions = getDescriptionsWithRoles();\n            // DEFAULT or empty or first\n            let description = descriptions.filter(d => d.roles.indexOf(\"DEFAULT\") > -1)[0];\n            description = description || descriptions.filter(d => d.roles.length === 0)[0];\n            description = description || descriptions[0];\n            console.log(\"getDefaultDescription\", description);\n            return description && description.value\n        }\n\n        function getBonusDescription() {\n            let descriptions = getDescriptionsWithRoles();\n            let description = descriptions.filter(d => contractRole && d.roles.indexOf(contractRole) > -1)[0];\n            console.log(\"getBonusDescription\", description);\n            return description && description.value\n        }\n\n        function longDescriptionTable() {\n            // descriptionAttributes filtered by contract role\n            let toParse = getBonusDescription() || getDefaultDescription() || '[{\"key\":\"brak\", \"value\":\"danych\"}]';\n            console.log(\"descriptionAttributes filtered by contract role\", toParse);\n            let details = null;\n\n            try {\n                details = JSON.parse(toParse);\n            } catch (e) {\n                console.error(\"Details parsing error: \" + toParse + \" \" + e);\n                details = [{key: \"brak\", value: \"danych\"}];\n            }\n\n            return {longDescriptionTable: details};\n        }\n\n        function price() {\n            if (!offer.payments) {\n                return \"888\";\n            }\n\n            let plainPrice = OnlineUtils.getPaymentsForRole(offer.payments, \"\").basePrice.price;\n            let bonusPrice = OnlineUtils.getPaymentsForRole(offer.payments, contractRole).basePrice.price;\n\n            if (clientContext && bonusPrice !== plainPrice) {\n                bonusPriceApplied = true;\n                return {\n                    price: bonusPrice,\n                    oldPrice: plainPrice,\n                };\n            } else {\n                return {\n                    price: plainPrice,\n                };\n            }\n        }\n\n        return {...offer, ...price(), ...longDescriptionTable(), features: newFeatures(offer.features)};\n    }\n\n    if (offers) {\n        console.log(\"processing\", {offers});\n\n        // offers.slice(1,2).forEach( (offer,id)=> offer.payments['basePriceWithBonuses'] = {'price' : \"10,00\"}) //mocks\n\n        let newOffers = offers.map(newOffer);\n        newOffers.sort(offerComparator);\n\n        return {\n            offers: newOffers,\n            visibleAttributes: visibleAttributes,\n            allAttributes: allAttributes,\n            bonusPriceApplied: bonusPriceApplied,\n        };\n    }\n}\n"],
    "file": "offers.js"
}