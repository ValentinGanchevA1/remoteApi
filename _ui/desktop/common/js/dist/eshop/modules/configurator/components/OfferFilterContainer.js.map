{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/configurator/components/OfferFilterContainer.jsx"],
    "names": ["OfferFilterContainer", "props", "selectProcessType", "bind", "selectLoyaltyLength", "selectSwitchButton", "offerType", "setOfferType", "selectedOfferType", "subscribeCustomerSelected", "e", "value", "parseInt", "url", "OnlineUtils", "redirectToAnotherPage", "conf", "map", "c", "selected", "active", "getClientContextCheckboxConfig", "descriptions", "clientContextLabel", "clientContextTooltip", "channels", "sales", "stayLoveRetentionMSISDN", "OfferType", "VOICE_LDF", "console", "log", "processTypeData", "optionsToDisable", "forEach", "option", "push", "isPropositionListCountSetMode", "propositionListCount", "switchType", "selectedProcessValue", "disabledProcesses", "loyaltyLengthData", "selectedLoyaltyLengthValue", "getClientContextConf", "softBundleGroup", "contractRole", "hasLove", "hasODF", "showSwitch", "convertSwitchConf", "switchConf", "headerDescription", "Component", "desc", "channel", "label", "tooltip", "mapStateToProps", "state", "loyaltyLengthDataUnsorted", "mapDispatchToProps", "dispatch", "fetchOfferFilters", "propTypes", "PropTypes", "string", "bool", "objectOf", "arrayOf", "shape", "description", "oneOfType", "number", "func", "object"],
    "mappings": "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",
    "sourcesContent": ["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {fetchOfferFilters, selectLoyaltyLength, selectProcessType} from \"eshop/modules/configurator/actions/filters\";\nimport OfferFilterComponents from \"eshop/modules/configurator/components/OfferFilterComponents\";\nimport OfferFilterComponentsSwitcherView from \"eshop/modules/configurator/components/OfferFilterComponentsSwitcherView\";\nimport {\n    getProcessTypeFiltersForSelect,\n    getPropositionListCount,\n    getPropositionListCountSetMode,\n    getSelectedLoyaltyLengthValue,\n    getSelectedOfferType,\n    getSelectedProcessTypeValue,\n} from \"eshop/modules/configurator/selectors/filters\";\nimport {setOfferType} from \"eshop/modules/simfree/actions/app\";\nimport OnlineUtils from \"eshop/utils/OnlineUtils\";\nimport {subscribeCustomerSelected} from \"../../checkout/actions/data\";\nimport {getSelectedSoftBundleGroup} from \"../../simfree/selectors\";\nimport {getContractRole} from \"../selectors/offers\";\nimport PropTypes from \"prop-types\";\n\nimport {getStayLoveRetentionMSISDN, hasLove, hasODF} from \"../../auth/selectors/authorization\";\nimport OfferType from \"../../core/constants/OfferTypeEnum\";\nimport {\n    getLoyaltyLengthFiltersForSelect,\n    getSortedLoyaltyLengthFiltersWithIndefinitePeriodForSelect,\n} from \"../selectors/filters\";\n\nclass OfferFilterContainer extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.selectProcessType = this.selectProcessType.bind(this);\n        this.selectLoyaltyLength = this.selectLoyaltyLength.bind(this);\n        this.selectSwitchButton = this.selectSwitchButton.bind(this);\n        if (this.props.offerType) {\n            this.props.setOfferType(this.props.offerType);\n        }\n    }\n\n    offerType() {\n        return this.props.offerType || this.props.selectedOfferType\n    }\n\n    componentDidMount() {\n        // this.props.fetchOfferFilters(); //ToDo seems unnecessary, duplicated call\n        this.props.subscribeCustomerSelected();\n    }\n\n    selectProcessType(e) {\n        this.props.selectProcessType(e.value);\n    }\n\n    selectLoyaltyLength(e) {\n        this.props.selectLoyaltyLength(parseInt(e.value));\n    }\n\n    selectSwitchButton(url) {\n        url && OnlineUtils.redirectToAnotherPage(url);\n    }\n\n    convertSwitchConf(conf) {\n        return conf && conf.map(c => {\n            c.selected = c.active;\n            return c;\n        });\n    }\n    getClientContextConf() {\n    return getClientContextCheckboxConfig(this.props.descriptions?this.props.descriptions:{clientContextLabel:\"label\",clientContextTooltip:\"tooltip\"},\n                                            this.props.channels.sales)\n    }\n\n    disabledProcesses(){\n        if(this.props.stayLoveRetentionMSISDN && this.props.selectedOfferType=== OfferType.VOICE_LDF){\n            console.log(\"OPTIONS TO DISABLE \",this.props.processTypeData);\n\n            let optionsToDisable=[];\n            this.props.processTypeData.forEach(option => option.value!==\"RETENTION\"&&optionsToDisable.push(option));\n            console.log(\"OPTIONS TO DISABLE \",optionsToDisable);\n            return optionsToDisable;\n\n        }\n    return null;\n\n    }\n\n    render() {\n        if (this.props.isPropositionListCountSetMode || this.props.propositionListCount===0){\n            return null;\n        }\n\n        if (this.props.switchType===\"SWITCH\") {\n            return <OfferFilterComponentsSwitcherView\n                offerType={this.offerType()}\n                processTypeData={this.props.processTypeData}\n                selectedProcessValue={this.props.selectedProcessValue}\n                selectProcessCallback={this.selectProcessType.bind(this)}\n                disabledProcesses={this.disabledProcesses()}\n\n                loyaltyLengthData={this.props.loyaltyLengthData}\n                selectedLoyaltyLengthValue={this.props.selectedLoyaltyLengthValue}\n                selectLoyaltyLengthCallback={this.selectLoyaltyLength.bind(this)}\n\n                clientContextCheckboxConfig = {this.getClientContextConf()}\n                softBundleGroup = {this.props.softBundleGroup}\n                contractRole={this.props.contractRole}\n                hasLove={this.props.hasLove}\n                hasODF={this.props.hasODF}\n                showSwitch={this.props.showSwitch}\n                onClickSwitch={this.selectSwitchButton}\n                switchConf={this.convertSwitchConf(this.props.switchConf)}\n\n                descriptions={this.props.descriptions}\n                channels={this.props.channels}\n                switchType={\"SWITCH\"}\n            />\n        }\n         return <OfferFilterComponents\n                   processTypeData={this.props.processTypeData}\n                   selectedProcessValue={this.props.selectedProcessValue}\n                   selectProcessCallback={this.selectProcessType.bind(this)}\n                   loyaltyLengthData={this.props.loyaltyLengthData}\n                   selectedLoyaltyLengthValue={this.props.selectedLoyaltyLengthValue}\n                   selectLoyaltyLengthCallback={this.selectLoyaltyLength.bind(this)}\n\n                   clientContextCheckboxConfig = {this.getClientContextConf()}\n\n                   showSwitch={this.props.showSwitch}\n                   onClickSwitch={this.selectSwitchButton}\n                   switchConf={this.convertSwitchConf(this.props.switchConf)}\n\n                   headerText={this.props.descriptions && this.props.descriptions.headerDescription || \"\"}\n\n                   channels={this.props.channels}\n                   switchType={\"TAB\"}\n               />\n\n    }\n}\n\nconst getClientContextCheckboxConfig = (desc = {}, channel) => ({\n    label: desc.clientContextLabel,\n    tooltip: desc.clientContextTooltip,\n    channel: channel,\n});\n\nconst mapStateToProps = state => ({\n    isPropositionListCountSetMode: getPropositionListCountSetMode(state),\n    propositionListCount: getPropositionListCount(state),\n    selectedProcessValue: getSelectedProcessTypeValue(state),\n    processTypeData: getProcessTypeFiltersForSelect(state),\n    selectedLoyaltyLengthValue: getSelectedLoyaltyLengthValue(state),\n    loyaltyLengthData: getSortedLoyaltyLengthFiltersWithIndefinitePeriodForSelect(state),\n    loyaltyLengthDataUnsorted: getLoyaltyLengthFiltersForSelect(state),\n    selectedOfferType: getSelectedOfferType(state),\n    stayLoveRetentionMSISDN: getStayLoveRetentionMSISDN(state),\n    softBundleGroup: getSelectedSoftBundleGroup(state),\n    contractRole: getContractRole(state)[0],\n    hasLove: hasLove(state),\n    hasODF: hasODF(state),\n});\nconst mapDispatchToProps = dispatch => ({\n    selectProcessType: value => dispatch(selectProcessType(value)),\n    selectLoyaltyLength: value => dispatch(selectLoyaltyLength(value)),\n    fetchOfferFilters: () => dispatch(fetchOfferFilters()),\n    setOfferType: offerType => dispatch(setOfferType(offerType)),\n    subscribeCustomerSelected: () => dispatch(subscribeCustomerSelected()),\n});\nOfferFilterContainer.propTypes = {\n    switchType: PropTypes.string,\n    softBundleGroup: PropTypes.string,\n    contractRole: PropTypes.string,\n    hasLove: PropTypes.bool,\n    hasODF: PropTypes.bool,\n    descriptions: PropTypes.objectOf(PropTypes.string),\n    processTypeData: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        description: PropTypes.string,\n    })),\n    channels: PropTypes.shape({\n        sales: PropTypes.string,\n    }),\n    loyaltyLengthData: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n        ]),\n        description: PropTypes.string,\n    })),\n    offerType: PropTypes.string,\n    selectedOfferType: PropTypes.string,\n    subscribeCustomerSelected: PropTypes.func,\n    selectProcessType: PropTypes.func,\n    selectLoyaltyLength: PropTypes.func,\n    setOfferType: PropTypes.func,\n    stayLoveRetentionMSISDN: PropTypes.string,\n    switchConf: PropTypes.object,\n    showSwitch: PropTypes.bool,\n    selectedLoyaltyLengthValue: PropTypes.number,\n    selectedProcessValue: PropTypes.string,\n    isPropositionListCountSetMode: PropTypes.bool,\n    propositionListCount: PropTypes.number,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OfferFilterContainer);\n"],
    "file": "OfferFilterContainer.js"
}