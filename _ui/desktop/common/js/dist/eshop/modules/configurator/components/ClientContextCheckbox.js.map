{
    "version": 3,
    "sources": ["../../../../../../es6/eshop/modules/configurator/components/ClientContextCheckbox.jsx"],
    "names": ["ClientContextCheckboxView", "console", "log", "props", "position", "setClientContext", "clientContext", "willRender", "addTerminalToOfferBundleNo", "channels", "sales", "SalesChannel", "WWW", "isLogged", "isCartMobile", "renderSwitch", "filterCmsDescriptions", "clientContextLabel", "label", "clientContextTooltip", "tooltip", "React", "PureComponent", "HtmlText", "htmlContent", "__html", "children", "propTypes", "PropTypes", "string", "func", "isRequired", "bool", "oneOf", "descriptions", "objectOf", "defaultProps", "mapStateToProps", "state", "mapDispatchToProps", "dispatch", "event", "target", "checked", "ClientContextCheckbox"],
    "mappings": ";;;;;;;AAAA;AAEA;AAGA;AAGA;;;;;;MAEMA,yB;;;;;;;;;;;;0CAEkB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACH;;;6CAEsB;AACnBD,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACH;;;qCACa;AACV,4BACI;AACI,UAAA,SAAS,EAAE,sCAAsC,KAAKC,KAAL,CAAWC,QAAX,KAAwB,MAAxB,GAAiC,mBAAjC,GAAuD,kBAA7F;AADf,wBAEI;AAAO,UAAA,SAAS,EAAC;AAAjB,wBACI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,SAAS,EAAC,cAHd;AAII,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,gBAJzB;AAKI,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG;AALxB,UADJ,eAOI;AAAM,UAAA,SAAS,EAAC;AAAhB,UAPJ,eAQI;AAAM,UAAA,SAAS,EAAC;AAAhB,wBACY;AAAM,UAAA,SAAS,EAAC;AAAhB,sBADZ,eAEY;AAAM,UAAA,SAAS,EAAC;AAAhB,qBAFZ,CARJ,CAFJ,CADJ;AAiBH;;;+BAEQ;AAAA;;AACL,YAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,iBAAO,CAAC,KAAI,CAACJ,KAAL,CAAWK,0BAAZ,IACA,KAAI,CAACL,KAAL,CAAWM,QAAX,CAAoBC,KAApB,KAA8BC,sBAAaC,GAD3C,IAEA,CAAC,KAAI,CAACT,KAAL,CAAWU,QAFZ,IAGA,CAAC,KAAI,CAACV,KAAL,CAAWW,YAHnB;AAIH,SALD;;AAMA,YAAIP,UAAU,EAAd,EACI,oBACI;AAAK,UAAA,SAAS,EAAE,4BAA0B,KAAKJ,KAAL,CAAWC,QAArC,GAA8C,YAA9C,GAA2D,KAAKD,KAAL,CAAWC;AAAtF,WACK,KAAKD,KAAL,CAAWC,QAAX,KAAwB,MAAxB,IAAkC,KAAKW,YAAL,EADvC,eAEI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI;AAAG,UAAA,SAAS,EAAE;AAAd,WAAqC,KAAKZ,KAAL,CAAWa,qBAAX,IAAoC,KAAKb,KAAL,CAAWa,qBAAX,CAAiCC,kBAArE,IAA2F,KAAKd,KAAL,CAAWe,KAA3I,CADJ,CAFJ,eAKI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI,6BAAC,gBAAD,qBACI,6BAAC,QAAD,QACK,KAAKf,KAAL,CAAWa,qBAAX,IAAoC,KAAKb,KAAL,CAAWa,qBAAX,CAAiCG,oBAArE,IAA6F,KAAKhB,KAAL,CAAWiB,OAD7G,CADJ,CADJ,CALJ,EAYK,KAAKjB,KAAL,CAAWC,QAAX,KAAwB,OAAxB,IAAmC,KAAKW,YAAL,EAZxC,CADJ,CADJ,KAkBI,OAAO,IAAP;AACP;;;IAvDmCM,eAAMC,a;;AA0D9C,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAApB,KAAK,EAAI;AACtB,QAAMqB,WAAW,GAAG;AAACC,MAAAA,MAAM,EAAEtB,KAAK,CAACuB;AAAf,KAApB;AACA,wBACI;AAAK,MAAA,uBAAuB,EAAEF;AAA9B,MADJ;AAGH,GALD;;AAOAxB,EAAAA,yBAAyB,CAAC2B,SAA1B,GAAsC;AAClCT,IAAAA,KAAK,EAAEU,mBAAUC,MADiB;AAElCT,IAAAA,OAAO,EAAEQ,mBAAUC,MAFe;AAGlCxB,IAAAA,gBAAgB,EAAEuB,mBAAUE,IAAV,CAAeC,UAHC;AAIlCzB,IAAAA,aAAa,EAAEsB,mBAAUI,IAAV,CAAeD,UAJI;AAKlC3B,IAAAA,QAAQ,EAACwB,mBAAUK,KAAV,CAAgB,CAAC,MAAD,EAAQ,OAAR,CAAhB,CALyB;AAMlCC,IAAAA,YAAY,EAACN,mBAAUO,QAAV,CAAmBP,mBAAUC,MAA7B;AANqB,GAAtC;AASA7B,EAAAA,yBAAyB,CAACoC,YAA1B,GAAyC;AACrClB,IAAAA,KAAK,EAAE,mCAD8B;AAErCE,IAAAA,OAAO,EAAE,0KAF4B;AAGrChB,IAAAA,QAAQ,EAAC;AAH4B,GAAzC;;AAMA,MAAMiC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC9BhC,MAAAA,aAAa,EAAE,gCAAiBgC,KAAjB,CADe;AAE9BzB,MAAAA,QAAQ,EAAC,6BAASyB,KAAT,CAFqB;AAG9BxB,MAAAA,YAAY,EAAC,6BAAawB,KAAb,CAHiB;AAI9BtB,MAAAA,qBAAqB,EAAE,kDAAiCsB,KAAjC;AAJO,KAAL;AAAA,GAA7B;;AAOA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,WAAK;AACpCnC,MAAAA,gBAAgB,EAAE,0BAAAoC,KAAK;AAAA,eAAID,QAAQ,CAAC,+BAAiBC,KAAK,CAACC,MAAN,CAAaC,OAA9B,CAAD,CAAZ;AAAA;AADa,KAAL;AAAA,GAAnC;;AAIA,MAAMC,qBAAqB,GAAG,yBAAQP,eAAR,EAAyBE,kBAAzB,EAA6CvC,yBAA7C,CAA9B;iBAEe4C,qB",
    "sourcesContent": ["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {setClientContext} from \"../actions/filters\";\nimport {getClientContext} from \"../selectors/filters\";\nimport OraTooltip from \"eshop/modules/core/components/ui/Tooltip\";\nimport {isLogged} from \"eshop/modules/auth/selectors/authorization\";\nimport {isCartMobile} from \"eshop/modules/cart/selectors\";\nimport SalesChannel from \"../../core/enum/SalesChannel\";\nimport {getSelectedOfferTypeDescriptions} from \"eshop/modules/simfree/selectors\";\nclass ClientContextCheckboxView extends React.PureComponent {\n\n    componentDidMount() {\n        console.log(\"Client Context component Did mount\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"Client Context component will unmount\");\n    }\n    renderSwitch(){\n        return (\n            <div\n                className={\"u-table-cell u-vertical-middle  \" + (this.props.position === \"left\" ? \"u-padding-right-s\" : \"u-padding-left-s\")}>\n                <label className=\"opl-switch u-block\">\n                    <input\n                        type=\"checkbox\"\n                        name=\"nope\"\n                        className=\"is-not-empty\"\n                        onChange={this.props.setClientContext}\n                        checked={this.props.clientContext}/>\n                    <span className=\"o-ci\"/>\n                    <span className=\"o-ci-label\">\n                                <span className=\"u-acc-txt--show\">Wybieram</span>\n                                <span className=\"u-acc-txt--hide\">Wybrany</span>\n                            </span>\n                </label>\n            </div>)\n    }\n\n    render() {\n        const willRender = () => {\n            return !this.props.addTerminalToOfferBundleNo\n                && this.props.channels.sales === SalesChannel.WWW\n                && !this.props.isLogged\n                && !this.props.isCartMobile;\n        };\n        if (willRender())\n            return (\n                <div className={\"u-table u-left u-large-\"+this.props.position+\" u-medium-\"+this.props.position}>\n                    {this.props.position === \"left\" && this.renderSwitch()}\n                    <div className=\"u-table-cell u-vertical-middle\">\n                        <p className={\"u-small-font-small\"}>{this.props.filterCmsDescriptions && this.props.filterCmsDescriptions.clientContextLabel || this.props.label}</p>\n                    </div>\n                    <div className=\"u-table-cell u-vertical-middle u-padding-right-s\">\n                        <OraTooltip>\n                            <HtmlText>\n                                {this.props.filterCmsDescriptions && this.props.filterCmsDescriptions.clientContextTooltip || this.props.tooltip}\n                            </HtmlText>\n                        </OraTooltip>\n                    </div>\n                    {this.props.position === \"right\" && this.renderSwitch()}\n                </div>\n            );\n        else\n            return null;\n    }\n}\n\nconst HtmlText = props => {\n    const htmlContent = {__html: props.children};\n    return (\n        <div dangerouslySetInnerHTML={htmlContent} />\n    )\n};\n\nClientContextCheckboxView.propTypes = {\n    label: PropTypes.string,\n    tooltip: PropTypes.string,\n    setClientContext: PropTypes.func.isRequired,\n    clientContext: PropTypes.bool.isRequired,\n    position:PropTypes.oneOf([\"left\",\"right\"]),\n    descriptions:PropTypes.objectOf(PropTypes.string),\n};\n\nClientContextCheckboxView.defaultProps = {\n    label: \"Pokaż rabaty na kolejne karty SIM\",\n    tooltip: \"Opłata abonamentowa uwzględnia rabaty: za łączenie usług w Orange - 20 zł, za wyrażenie zgody na e-fakturę i terminowe płatności – 5 zł oraz zgody marketingowej – 5 zł.\",\n    position:\"right\",\n};\n\nconst mapStateToProps = state => ({\n    clientContext: getClientContext(state),\n    isLogged:isLogged(state),\n    isCartMobile:isCartMobile(state),\n    filterCmsDescriptions: getSelectedOfferTypeDescriptions(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setClientContext: event => dispatch(setClientContext(event.target.checked)),\n});\n\nconst ClientContextCheckbox = connect(mapStateToProps, mapDispatchToProps)(ClientContextCheckboxView);\n\nexport default ClientContextCheckbox;\n"],
    "file": "ClientContextCheckbox.js"
}