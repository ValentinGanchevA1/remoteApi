{
    "version": 3,
    "sources": ["../../../../es6/eshop/utils/NetGrossUtils.js"],
    "names": ["NetGrossUtils", "chooseNetOrGrossPriceForVases", "vases", "isNet", "processPaymentDescriptions", "paymentDescriptions", "oneTimePayment", "setPriceAsNetOrGross", "monthlyPayments", "map", "p", "processServices", "services", "s", "ret", "v", "chooseNetOrGrossPriceForServices", "chooseNetOrGrossPriceForArrayOfObjWithPrice", "chooseNetOrGrossPriceForOffers", "offers", "arr", "o", "oneTimeCost", "payNowCost", "monthlyCosts", "oo", "altered", "chooseNetOrGrossPriceForCartMonthlyCosts", "e", "chooseNetOrGrossPriceForCheckoutCost", "checkoutCost", "setPriceAsNetOrGrossExtractors", "netPrice", "price", "chooseNetOrGrossPriceForCartOneTimeCost", "chooseNetOrGrossPrice", "miniCartEntries", "chooseNetOrGrossPriceOnCartEntry", "chooseNetOrGrossPriceForDevices", "cartDevices", "dd", "chooseNetOrGrossPriceOnDeviceData", "chooseNetOrGrossPriceForVasesInCart", "vas", "chooseNetOrGrossPriceForVasInCart", "objToAlterPrice", "arrToAlterPrice", "chooseNetOrGrossPriceOnObj", "data", "priceCreator", "d", "priceWithoutVouchersCreator", "netPriceWithoutVouchers", "priceWithoutVouchers", "gross", "net", "result", "intermediate", "entry", "terminals", "euroSets", "gadgets", "obj", "priceObjectCreator", "forEach", "priceData", "originalGrossPrice", "originalNetPrice", "netExtractor", "grossExtractor", "keys", "priceNet", "priceGross", "console", "error"],
    "mappings": "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",
    "sourcesContent": ["var NetGrossUtils = function(NetGrossUtils) {\n\n    NetGrossUtils.chooseNetOrGrossPriceForVases = function(vases, isNet){\n\n        function processPaymentDescriptions(paymentDescriptions){\n            return {\n                ...paymentDescriptions,\n                oneTimePayment: setPriceAsNetOrGross(paymentDescriptions.oneTimePayment, isNet),\n                monthlyPayments: paymentDescriptions.monthlyPayments.map(p=>setPriceAsNetOrGross(p, isNet))\n            }\n        }\n\n        function processServices(services){\n            return services.map(s => {return {...s, paymentDescriptions: processPaymentDescriptions(s.paymentDescriptions)}})\n        }\n\n        let ret = (vases || []).map(\n            v =>  { return {...v, services: processServices(v.services || [])}}\n        )\n\n        return ret\n    }\n\n    NetGrossUtils.chooseNetOrGrossPriceForServices = function(vases, isNet){\n        return chooseNetOrGrossPriceForArrayOfObjWithPrice(vases, isNet)\n    }\n\n    NetGrossUtils.chooseNetOrGrossPriceForOffers = function(offers, isNet){\n        return chooseNetOrGrossPriceForArrayOfObjWithPrice(offers, isNet)\n    }\n\n    function chooseNetOrGrossPriceForArrayOfObjWithPrice(arr, isNet){\n        let ret = (arr || []).map(o=>{\n            if(!o.oneTimeCost) //bug workaround\n                return o;\n            let oneTimeCost = setPriceAsNetOrGross(o.oneTimeCost, isNet)\n            let payNowCost = o.payNowCost ? setPriceAsNetOrGross(o.payNowCost, isNet) : null\n            let monthlyCosts = o.monthlyCosts.map(oo => setPriceAsNetOrGross(oo, isNet))\n            let altered = {oneTimeCost, monthlyCosts, payNowCost}\n            return {...o, ...altered}\n        });\n        return ret;\n    }\n\n    NetGrossUtils.chooseNetOrGrossPriceForCartMonthlyCosts = function(monthlyCosts, isNet){\n        return monthlyCosts.map(e => setPriceAsNetOrGross(e,isNet))\n    };\n\n    NetGrossUtils.chooseNetOrGrossPriceForCheckoutCost = function(checkoutCost, isNet){\n        if(checkoutCost){\n            return setPriceAsNetOrGrossExtractors(checkoutCost, isNet, p=>p.netPrice, p=>p.price )\n        }else{\n            return checkoutCost\n        }\n    };\n\n    NetGrossUtils.chooseNetOrGrossPriceForCartOneTimeCost = function(oneTimeCost, isNet){\n        return setPriceAsNetOrGross(oneTimeCost, isNet)\n    };\n\n    function chooseNetOrGrossPrice(miniCartEntries, isNet){\n        if(!miniCartEntries){\n            return miniCartEntries\n        }\n        return miniCartEntries.map(e => chooseNetOrGrossPriceOnCartEntry(e,isNet))\n    }\n\n    NetGrossUtils.chooseNetOrGrossPrice = chooseNetOrGrossPrice\n\n\n    function chooseNetOrGrossPriceForDevices(cartDevices, isNet){\n\n        if(cartDevices){\n        return cartDevices.map(dd=>chooseNetOrGrossPriceOnDeviceData(dd, isNet))\n        }else{\n            return cartDevices\n        }\n\n    }\n\n    function chooseNetOrGrossPriceForVasesInCart(vases, isNet){\n        return vases.map(vas=>chooseNetOrGrossPriceForVasInCart(vas, isNet))\n    }\n\n    function chooseNetOrGrossPriceForVasInCart(vas, isNet){\n\n        let objToAlterPrice = [\n            \"checkoutPrice\",\n            \"firstBillPrice\"\n        ];\n\n        let arrToAlterPrice = [\n            \"monthlyPrices\"\n        ];\n\n        let ret = chooseNetOrGrossPriceOnObj(vas, isNet, setPriceAsNetOrGross, objToAlterPrice, arrToAlterPrice)\n        return ret;\n    }\n\n    function chooseNetOrGrossPriceOnDeviceData(data, isNet){\n        let objToAlterPrice = [\n            \"payNowCost\",\n            \"oneTimeCost\",\n            \"checkoutPrice\"\n        ];\n\n        let arrToAlterPrice = [\n            \"monthlyCosts\",\n            \"monthlyPrices\"\n        ];\n\n        let priceCreator = (d, isNet) => setPriceAsNetOrGrossExtractors(d, isNet, p=>p.netPrice, p=>p.price )\n        let priceWithoutVouchersCreator = (d, isNet) => setPriceAsNetOrGrossExtractors(d, isNet, p=>p.netPriceWithoutVouchers || 0, p=>p.priceWithoutVouchers,\n            {\n                gross: \"grossPriceWithoutVouchers\",\n                net: \"netPriceWithoutVouchers\",\n                result: \"priceWithoutVouchers\"\n            })\n\n        let intermediate = chooseNetOrGrossPriceOnObj(data, isNet, priceCreator, objToAlterPrice, arrToAlterPrice)\n        let ret = chooseNetOrGrossPriceOnObj(intermediate, isNet, priceWithoutVouchersCreator, objToAlterPrice, arrToAlterPrice)\n        return ret;\n\n    }\n\n    function chooseNetOrGrossPriceOnCartEntry(entry, isNet){\n\n        let objToAlterPrice = [\n            \"totalFirstBillPrice\",\n            \"totalCheckoutPrice\",\n            \"monthlyOldPrice\",\n            \"firstBillPrice\",\n            \"checkoutPrice\",\n            \"oneTimeOldPrice\"\n        ];\n\n        let arrToAlterPrice = [\n            \"totalMonthlyPrices\",\n            \"monthlyOldPrices\",\n            \"monthlyPrices\"\n        ];\n\n        let ret = chooseNetOrGrossPriceOnObj(entry, isNet, setPriceAsNetOrGross, objToAlterPrice, arrToAlterPrice)\n        ret.terminals = chooseNetOrGrossPriceForDevices(ret.terminals || [], isNet)\n        ret.euroSets = chooseNetOrGrossPriceForDevices(ret.euroSets || [], isNet)\n        ret.gadgets = chooseNetOrGrossPriceForDevices(ret.gadgets || [], isNet)\n        ret.vases = chooseNetOrGrossPriceForVasesInCart(ret.vases || [], isNet)\n        return ret\n\n    }\n\n    function chooseNetOrGrossPriceOnObj(obj, isNet, priceObjectCreator, objToAlterPrice, arrToAlterPrice){\n\n        let altered = {}\n        objToAlterPrice.forEach(o => {\n            if(obj[o]) {\n                altered[o] = priceObjectCreator(obj[o], isNet);\n            } else {\n                //altered[o] = null;\n                //NOP\n            }\n        });\n\n        arrToAlterPrice.forEach(arr => {\n            if(obj[arr]) {\n                altered[arr] = obj[arr].map(o => !!o ? priceObjectCreator(o, isNet) : null);\n            } else {\n                //altered[arr] = null;\n                //NOP\n            }\n        });\n\n        return {...obj, ...altered}\n    }\n\n\n    function setPriceAsNetOrGross(priceData, isNet){\n        if(priceData.originalGrossPrice){\n            return setPriceAsNetOrGrossExtractors(priceData, isNet, p => p.originalNetPrice, p => p.originalGrossPrice)\n        }else{\n            return setPriceAsNetOrGrossExtractors(priceData, isNet, p => p.netPrice, p => p.price)\n        }\n    }\n\n    function setPriceAsNetOrGrossExtractors(priceData, isNet, netExtractor, grossExtractor, keys){\n\n        keys = keys || {\n            gross: \"priceGross\",\n            net: \"priceNet\",\n            result: \"price\"\n        };\n\n        let priceNet = netExtractor(priceData);\n        let priceGross = grossExtractor(priceData);\n        if (typeof(priceNet) === \"undefined\" || priceNet === null) {\n            console.error(\"Net price is not present, using gross. Must be corrected for B2B market\");\n            priceNet = priceGross\n        }\n        let price = isNet ? priceNet: priceGross;\n        return {...priceData, [keys.gross]: priceGross, [keys.net]: priceNet, [keys.result]: price}\n    }\n\n    NetGrossUtils.setPriceAsNetOrGross = setPriceAsNetOrGross\n    NetGrossUtils.chooseNetOrGrossPriceOnCartEntry = chooseNetOrGrossPriceOnCartEntry\n    NetGrossUtils.chooseNetOrGrossPriceForDevices = chooseNetOrGrossPriceForDevices\n\n    return NetGrossUtils;\n}({});\nexport default NetGrossUtils;"],
    "file": "NetGrossUtils.js"
}